{
  "contractName": "FiatGateway",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Davinci",
          "name": "_davinci",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CURRENCY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "EXCHANGE_RATE_ORACLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAYMENT_SERVICE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cerePerPenny",
          "type": "uint256"
        }
      ],
      "name": "setExchangeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCere",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "paidPennies",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "buyFromUsd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Davinci\",\"name\":\"_davinci\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CURRENCY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXCHANGE_RATE_ORACLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMENT_SERVICE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paidPennies\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"buyFromUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cerePerPenny\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCere\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CURRENCY()\":{\"notice\":\"The token ID that represents the CERE currency for all payments in this contract. \"},\"buyFromUsd(uint256,address,address,uint256,uint256,uint256)\":{\"notice\":\"Execute a buy of an NFT based on a fiat payment. Only the gateway with PAYMENT_SERVICE role can report successful payments. The amount of fiat is recorded, and exchanged for an amount of Davinci currency. The currency is used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\"},\"setExchangeRate(uint256)\":{\"notice\":\"Set the exchange rate between fiat (USD) and Davinci currency (CERE). The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny). Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate.\"},\"withdrawCere()\":{\"notice\":\"Withdraw all CERE from this contract. Only accounts with DEFAULT_ADMIN_ROLE can withdraw.\"}},\"notice\":\"The FiatGateway contract allows buying NFTs from an external fiat payment. This contract connects to the Davinci contract. It must hold a balance of CERE recognized by Davinci. This contract uses the SimpleExchange API to buy NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/a/CERE/davinci-nft/contracts/polygon/FiatGateway.sol\":\"FiatGateway\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"/home/a/CERE/davinci-nft/contracts/polygon/BaseNFT.sol\":{\"keccak256\":\"0x2c88ec3163b83d49e82c26c653cd6836aadbe01b1241c30c0f1450ce100bd00a\",\"urls\":[\"bzz-raw://3b5457e3fe4559a4bd1a4df350a524a81d5aba53ceae18c201a427702fed633d\",\"dweb:/ipfs/QmX7tSLqQnwYY9yfV6GRY4RQRxTbgjfbRAy94dxjX9Qd52\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/Currency.sol\":{\"keccak256\":\"0x1008137cd28b99c360bc4b6efb19f37a4f276da3e78e1bddead4b8fc33b612a1\",\"urls\":[\"bzz-raw://001d88d26c9ef52142809d97f6043d53f9e1c5c8023dd07ff93e9a4407dd1844\",\"dweb:/ipfs/QmQJeYHx3aqomh3KmvHG4QvAiZkhUirJm2gTVUDLe573YN\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/Davinci.sol\":{\"keccak256\":\"0xf872fce91ef5d51109c4ef680b37847d7a1a44b5159286ea5ae85de2d97fdd8a\",\"urls\":[\"bzz-raw://de34a2cdb686c44219676705744551084fc01cfb8a0e3bf38426e7c606ef7965\",\"dweb:/ipfs/QmdKNyamRG9fcxcGnm5Qy7qQLHteYFSWAhzbNp6MHc943X\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/FiatGateway.sol\":{\"keccak256\":\"0x13e565c49389c688df73ecfffbdf5345de01c8e061bfb9cee001e13e139170c8\",\"urls\":[\"bzz-raw://8ca9b6d3f09d5834363ee8e646957aaef6f797c046aad50741e3ee0cb115d18b\",\"dweb:/ipfs/QmeYc6hbWJLosoK4qAvnHkpXd7UsK7AuvHhYEdbpqvAQcV\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/Issuance.sol\":{\"keccak256\":\"0xbd3fd0a50f969c02b3b23e08bdb48cd37d7cb230e402d8039dede3ec729602ae\",\"urls\":[\"bzz-raw://4eb1370b5bf61f4c6b7ec04549d16619b92a478566675d82d331c5dbcece9f41\",\"dweb:/ipfs/Qmc9JXnD86imGeAGXSTN25PMVRrRBSfCrMdVy3eP3vsrTJ\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/JointAccounts.sol\":{\"keccak256\":\"0x46706d42441ad9f47cc1601e1a4bcbb45bc7d15e1e0a6da7299f6a8e309ac9a1\",\"urls\":[\"bzz-raw://cb88d8d36edceca3e6d3ed70131669a804537f6ea91b3ddf787aba89b923d40e\",\"dweb:/ipfs/QmWX7YzXDy3oQHFB55fVoVNxJg9CsoershK2xVUKTgHhPo\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/MetaTxContext.sol\":{\"keccak256\":\"0x3090048ff695123f22240133c1a581ab89269acd1950298fd78736296a991962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e952a833d8d4f1fb1427b50f086c7270affec1a4f1516bd83720b457baf8270e\",\"dweb:/ipfs/QmTUgeBWF8ynjKBtJGWNouFCe3TCuqkfDvZbMETBuy6zoL\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/PolygonChildERC20.sol\":{\"keccak256\":\"0xdd8f081bb7ee08499e331eb3eb67e52d1e38231be15f855a8fe207172b5acb09\",\"urls\":[\"bzz-raw://961f9817e442404115224e1d564386738c1f051d28a87ff451fb7d69e738bd09\",\"dweb:/ipfs/QmYvS1mz7caZd22nFuAcGwcBeXJEm3fx66Uz4VGuY24epv\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/SimpleExchange.sol\":{\"keccak256\":\"0x688308ef0244bdc885d85ff8effd7fba9a1ae88d9c880530a9b106cf70be8f1a\",\"urls\":[\"bzz-raw://5502349f3b03b0afdd150ee9520dcee8ce439bdfb02184a251092960198a4b20\",\"dweb:/ipfs/QmPGiyW5V965n7b7ZXJr7i6BLbEHtxtTo1uA1hxDL4e7zt\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/TransferFees.sol\":{\"keccak256\":\"0x2cfb082f5d301161748e9737e7a7ce1c27ce3fe0a8304ad9a47b27dd58e374b3\",\"urls\":[\"bzz-raw://1c9e748bfbe95106ecb8de42715f20aba04f80006407b4067eeeb442a3d417fc\",\"dweb:/ipfs/QmYgqfHav4rynvYkDkTyAznJ4fjedW4UvouzwMEfBMcCdY\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/TransferOperator.sol\":{\"keccak256\":\"0xa3b4dd13b4bfd8894da16813415503a755e8fc1a8e081f5a98ffeb7782395d4c\",\"urls\":[\"bzz-raw://539d2f0d0c50ac93ce9f3da7010c06ee2868bb2a27a282a988d88c5644c34609\",\"dweb:/ipfs/Qmf9j9neJ3h9JfekGZ1FA9uYLv599WZkqjMv4KojtCdWZy\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xeaafe1c2ab42941716da1c12d401bb708528bd08053d043f16c102d4bb219c8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5e012cd4f44be154d1d53e49de4298d47b44393086c71aa7009bc6040eef73\",\"dweb:/ipfs/QmbxfsFYjeksnjW8GYTHEiXx19iN47VdcGdyqaSRPuFvSR\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7c0ea2d284bad1aa002165ba4c5eac30070be8e56b19dba1ac7c8f2c8bd4832c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46cd1e78707bb21fc6255c1cc9356537cc767e74f112553ea9305938a325bacb\",\"dweb:/ipfs/QmcG9KekAb77Bh5S62w8SJ4N8qhsmx8ewWF5cWoxC9DEuN\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/home/a/CERE/davinci-nft/contracts/polygon/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610cd9380380610cd983398101604081905261002f9161010d565b600180546001600160a01b0319166001600160a01b03831617905561005b60006100563390565b610061565b5061013b565b61006b828261006f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661006b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100c93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006020828403121561011e578081fd5b81516001600160a01b0381168114610134578182fd5b9392505050565b610b8f8061014a6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b4578063248a9ca3146100dc5780632f2ff15d146100fd5780633263ba671461011257806336568abe146101275780635439002f1461013a57806391d148541461014d578063a1097d0b14610160578063a217fddf14610168578063c87113e214610170578063d547741f14610185578063db068e0e14610198578063f536121914610168575b600080fd5b6100c76100c2366004610914565b6101ab565b60405190151581526020015b60405180910390f35b6100ef6100ea3660046108d1565b6101e2565b6040519081526020016100d3565b61011061010b3660046108e9565b6101f7565b005b6100ef600080516020610b3a83398151915281565b6101106101353660046108e9565b610219565b610110610148366004610954565b61029c565b6100c761015b3660046108e9565b610416565b61011061043f565b6100ef600081565b6100ef600080516020610b1a83398151915281565b6101106101933660046108e9565b610544565b6101106101a63660046108d1565b610561565b60006001600160e01b03198216637965db0b60e01b14806101dc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b610200826101e2565b61020a8133610580565b61021483836105e4565b505050565b6001600160a01b038116331461028e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102988282610668565b5050565b600080516020610b3a8339815191526102b58133610580565b6002546103045760405162461bcd60e51b815260206004820181905260248201527f45786368616e67652072617465206d75737420626520636f6e666967757265646044820152606401610285565b86600360008282546103169190610a85565b909155505060025460009061032b9089610a9d565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906103639030908b906000908790600401610a1a565b600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b505060018054604051631220b63960e11b81526001600160a01b038b81166004830152602482018b9052604482018a905260648201849052929450911691506324416c7290608401600060405180830381600087803b1580156103f357600080fd5b505af1158015610407573d6000803e3d6000fd5b50505050505050505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600061044b8133610580565b600033600154604051627eeac760e11b81526001600160a01b0380841660048301526000602483018190529394509091169062fdd58e9060440160206040518083038186803b15801561049d57600080fd5b505afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d5919061093c565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a9061050d90309086906000908790600401610a1a565b600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b50505050505050565b61054d826101e2565b6105578133610580565b6102148383610668565b600080516020610b1a83398151915261057a8133610580565b50600255565b61058a8282610416565b610298576105a2816001600160a01b031660146106cd565b6105ad8360206106cd565b6040516020016105be9291906109ab565b60408051601f198184030181529082905262461bcd60e51b825261028591600401610a52565b6105ee8282610416565b610298576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556106243390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6106728282610416565b15610298576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006106dc836002610a9d565b6106e7906002610a85565b6001600160401b0381111561070c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610736576020820181803683370190505b509050600360fc1b8160008151811061075f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061079c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006107c0846002610a9d565b6107cb906001610a85565b90505b600181111561085f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061080d57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061083157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361085881610aec565b90506107ce565b5083156108ae5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610285565b9392505050565b80356001600160a01b03811681146108cc57600080fd5b919050565b6000602082840312156108e2578081fd5b5035919050565b600080604083850312156108fb578081fd5b8235915061090b602084016108b5565b90509250929050565b600060208284031215610925578081fd5b81356001600160e01b0319811681146108ae578182fd5b60006020828403121561094d578081fd5b5051919050565b60008060008060008060c0878903121561096c578182fd5b8635955061097c602088016108b5565b945061098a604088016108b5565b9350606087013592506080870135915060a087013590509295509295509295565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516109dd816017850160208801610abc565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610a0e816028840160208801610abc565b01602801949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6020815260008251806020840152610a71816040850160208701610abc565b601f01601f19169190910160400192915050565b60008219821115610a9857610a98610b03565b500190565b6000816000190483118215151615610ab757610ab7610b03565b500290565b60005b83811015610ad7578181015183820152602001610abf565b83811115610ae6576000848401525b50505050565b600081610afb57610afb610b03565b506000190190565b634e487b7160e01b600052601160045260246000fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb53979fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092fa264697066735822122036ae14f67ef717ac1a2e8d5340fa89ace3fbd717e3f6a85985e6cf1c4e316f1564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b4578063248a9ca3146100dc5780632f2ff15d146100fd5780633263ba671461011257806336568abe146101275780635439002f1461013a57806391d148541461014d578063a1097d0b14610160578063a217fddf14610168578063c87113e214610170578063d547741f14610185578063db068e0e14610198578063f536121914610168575b600080fd5b6100c76100c2366004610914565b6101ab565b60405190151581526020015b60405180910390f35b6100ef6100ea3660046108d1565b6101e2565b6040519081526020016100d3565b61011061010b3660046108e9565b6101f7565b005b6100ef600080516020610b3a83398151915281565b6101106101353660046108e9565b610219565b610110610148366004610954565b61029c565b6100c761015b3660046108e9565b610416565b61011061043f565b6100ef600081565b6100ef600080516020610b1a83398151915281565b6101106101933660046108e9565b610544565b6101106101a63660046108d1565b610561565b60006001600160e01b03198216637965db0b60e01b14806101dc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b610200826101e2565b61020a8133610580565b61021483836105e4565b505050565b6001600160a01b038116331461028e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102988282610668565b5050565b600080516020610b3a8339815191526102b58133610580565b6002546103045760405162461bcd60e51b815260206004820181905260248201527f45786368616e67652072617465206d75737420626520636f6e666967757265646044820152606401610285565b86600360008282546103169190610a85565b909155505060025460009061032b9089610a9d565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906103639030908b906000908790600401610a1a565b600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b505060018054604051631220b63960e11b81526001600160a01b038b81166004830152602482018b9052604482018a905260648201849052929450911691506324416c7290608401600060405180830381600087803b1580156103f357600080fd5b505af1158015610407573d6000803e3d6000fd5b50505050505050505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600061044b8133610580565b600033600154604051627eeac760e11b81526001600160a01b0380841660048301526000602483018190529394509091169062fdd58e9060440160206040518083038186803b15801561049d57600080fd5b505afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d5919061093c565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a9061050d90309086906000908790600401610a1a565b600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b50505050505050565b61054d826101e2565b6105578133610580565b6102148383610668565b600080516020610b1a83398151915261057a8133610580565b50600255565b61058a8282610416565b610298576105a2816001600160a01b031660146106cd565b6105ad8360206106cd565b6040516020016105be9291906109ab565b60408051601f198184030181529082905262461bcd60e51b825261028591600401610a52565b6105ee8282610416565b610298576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556106243390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6106728282610416565b15610298576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006106dc836002610a9d565b6106e7906002610a85565b6001600160401b0381111561070c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610736576020820181803683370190505b509050600360fc1b8160008151811061075f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061079c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006107c0846002610a9d565b6107cb906001610a85565b90505b600181111561085f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061080d57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061083157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361085881610aec565b90506107ce565b5083156108ae5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610285565b9392505050565b80356001600160a01b03811681146108cc57600080fd5b919050565b6000602082840312156108e2578081fd5b5035919050565b600080604083850312156108fb578081fd5b8235915061090b602084016108b5565b90509250929050565b600060208284031215610925578081fd5b81356001600160e01b0319811681146108ae578182fd5b60006020828403121561094d578081fd5b5051919050565b60008060008060008060c0878903121561096c578182fd5b8635955061097c602088016108b5565b945061098a604088016108b5565b9350606087013592506080870135915060a087013590509295509295509295565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516109dd816017850160208801610abc565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610a0e816028840160208801610abc565b01602801949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6020815260008251806020840152610a71816040850160208701610abc565b601f01601f19169190910160400192915050565b60008219821115610a9857610a98610b03565b500190565b6000816000190483118215151615610ab757610ab7610b03565b500290565b60005b83811015610ad7578181015183820152602001610abf565b83811115610ae6576000848401525b50505050565b600081610afb57610afb610b03565b506000190190565b634e487b7160e01b600052601160045260246000fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb53979fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092fa264697066735822122036ae14f67ef717ac1a2e8d5340fa89ace3fbd717e3f6a85985e6cf1c4e316f1564736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:341:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "110:229:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "156:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "165:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "173:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "158:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "158:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "158:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "131:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "140:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "127:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "123:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "120:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "191:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "210:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "204:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "195:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "283:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "292:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "300:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "285:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "285:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "285:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "242:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "253:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "268:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "273:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "264:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "264:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "277:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "260:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "260:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "249:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "249:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "239:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "229:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "318:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "328:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "318:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Davinci_$182_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "76:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "87:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "99:6:21",
                "type": ""
              }
            ],
            "src": "14:325:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_Davinci_$182_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6959:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:21"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:21",
                "type": ""
              }
            ],
            "src": "14:173:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:120:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "366:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "353:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:21",
                "type": ""
              }
            ],
            "src": "192:190:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:177:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "520:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "529:6:21"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "537:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "522:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "522:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "522:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "495:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "504:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "491:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "491:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "487:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "487:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "484:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "555:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "578:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "565:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "555:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "597:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "607:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:38:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "432:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "443:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "463:6:21",
                "type": ""
              }
            ],
            "src": "387:264:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "725:237:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "780:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "788:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "773:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "773:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "773:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "755:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "767:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "738:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "738:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "735:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "806:36:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "832:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "819:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "819:23:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "810:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "906:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "915:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "923:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "908:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "908:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "908:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "864:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "875:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "886:3:21",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "891:10:21",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:20:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "871:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "871:32:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "861:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "861:43:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:51:21"
                  },
                  "nodeType": "YulIf",
                  "src": "851:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "941:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "951:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "691:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "702:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "714:6:21",
                "type": ""
              }
            ],
            "src": "656:306:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1037:120:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1083:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1092:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1100:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1085:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1085:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1085:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1058:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1067:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1054:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1054:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1079:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1050:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1047:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1118:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1141:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1128:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1003:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1014:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1026:6:21",
                "type": ""
              }
            ],
            "src": "967:190:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:113:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1289:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1298:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1306:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1291:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1291:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1291:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1264:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1273:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1260:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1285:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1324:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1340:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1334:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1324:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1209:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1220:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1232:6:21",
                "type": ""
              }
            ],
            "src": "1162:194:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1516:390:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1563:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1572:6:21"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1580:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1565:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1565:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1565:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1537:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1546:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1558:3:21",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1529:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:33:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1526:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1598:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1621:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1608:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1598:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1640:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1673:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1684:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1669:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1650:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:38:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1640:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1707:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:38:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1697:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1754:42:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1792:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1764:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:32:21"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1805:43:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1828:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1815:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:33:21"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1805:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1857:43:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1884:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1895:3:21",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1880:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1880:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1867:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:33:21"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1857:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1442:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1453:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1473:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1481:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1489:6:21",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1497:6:21",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1505:6:21",
                "type": ""
              }
            ],
            "src": "1361:545:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2300:397:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2317:3:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2322:25:21",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2310:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:38:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2310:38:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2357:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2377:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2371:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2361:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2419:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2427:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2415:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2415:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2438:3:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2443:2:21",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2434:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2434:12:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2448:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2393:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2393:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2393:62:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2464:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2478:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2483:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2474:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2474:16:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2468:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2510:2:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2514:2:21",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2506:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2506:11:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2519:19:21",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2499:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2499:40:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2499:40:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2548:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2570:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2564:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:13:21"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2552:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2612:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2620:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2608:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2608:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2631:2:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2635:2:21",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2627:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2627:11:21"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2640:8:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2586:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2586:63:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2586:63:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2658:33:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2673:2:21"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "2677:8:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2669:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2669:17:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2688:2:21",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2665:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2665:26:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2658:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2268:3:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2273:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2281:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2292:3:21",
                "type": ""
              }
            ],
            "src": "1911:786:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2987:345:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2997:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3020:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3011:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3011:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3024:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3007:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3001:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3042:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3057:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3065:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3053:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3053:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3035:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3035:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3035:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3089:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3100:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3085:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3085:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3109:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3117:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3105:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3105:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3078:43:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3141:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3152:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3137:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:18:21"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3157:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3130:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3130:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3130:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3184:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3195:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3180:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3180:18:21"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3200:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3173:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3227:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3238:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3223:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3223:19:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3244:3:21",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3216:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3216:32:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3216:32:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3268:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3279:3:21",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3264:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3264:19:21"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3285:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3257:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3257:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3257:33:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3299:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3311:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3322:3:21",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3307:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3307:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3299:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2932:9:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2943:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2951:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2959:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2967:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2978:4:21",
                "type": ""
              }
            ],
            "src": "2702:630:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3466:145:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3476:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3488:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3499:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3484:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3484:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3476:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3518:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3533:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3549:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3554:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3545:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3545:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3558:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3541:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3541:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3529:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3529:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3511:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3511:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3511:51:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3582:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3593:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3578:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3578:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3598:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3571:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3571:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3571:34:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3427:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3438:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3446:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3457:4:21",
                "type": ""
              }
            ],
            "src": "3337:274:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3801:232:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3811:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3823:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3834:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3819:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3811:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3854:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3869:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3885:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3890:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3881:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3881:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3894:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3877:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3877:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3865:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3865:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3847:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3847:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3847:51:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3918:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3929:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3914:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3934:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3907:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3907:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3961:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3972:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3957:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3957:18:21"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3977:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3950:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3950:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4004:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4015:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4000:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4000:18:21"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4020:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3993:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3993:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3993:34:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3746:9:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3757:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3765:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3773:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3781:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3792:4:21",
                "type": ""
              }
            ],
            "src": "3616:417:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4133:92:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4143:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4155:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4166:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4151:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4143:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4185:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4210:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4203:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4203:14:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4196:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4196:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4178:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4178:41:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4178:41:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4102:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4113:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4124:4:21",
                "type": ""
              }
            ],
            "src": "4038:187:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4331:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4341:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4353:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4364:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4349:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4349:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4341:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4383:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4394:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4376:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4376:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4376:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4300:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4311:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4322:4:21",
                "type": ""
              }
            ],
            "src": "4230:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4533:262:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4550:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4561:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4543:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4543:21:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4573:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4593:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4587:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4587:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4577:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4620:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4631:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4616:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4616:18:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4636:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4609:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4609:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4609:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4678:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4686:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4674:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4674:15:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4695:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4706:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4691:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4691:18:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4711:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4652:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4652:66:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4652:66:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4727:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4743:9:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4762:6:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4770:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4758:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4758:15:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4779:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4775:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4775:7:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4754:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4754:29:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4739:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4739:45:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4786:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4735:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4735:54:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4727:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4502:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4513:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4524:4:21",
                "type": ""
              }
            ],
            "src": "4412:383:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4974:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4991:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5002:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4984:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4984:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4984:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5025:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5036:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5021:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5021:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5041:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5014:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5014:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5014:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5064:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5075:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5060:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5060:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5080:34:21",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5053:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5053:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5053:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5124:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5136:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5147:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5132:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5132:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5124:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4951:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4965:4:21",
                "type": ""
              }
            ],
            "src": "4800:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5335:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5352:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5363:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5345:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5345:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5345:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5386:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5397:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5382:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5382:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5402:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5375:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5375:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5425:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5436:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5421:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5421:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5441:34:21",
                        "type": "",
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5414:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5414:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5414:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5485:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5497:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5508:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5493:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5493:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5485:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5312:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5326:4:21",
                "type": ""
              }
            ],
            "src": "5161:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5696:237:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5713:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5724:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5706:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5706:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5706:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5747:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5758:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5743:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5743:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5763:2:21",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5736:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5736:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5786:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5797:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5782:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5782:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5802:34:21",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5775:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5775:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5775:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5857:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5868:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5853:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5853:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5873:17:21",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5846:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5846:45:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5846:45:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5900:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5912:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5923:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5908:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5908:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5900:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5673:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5687:4:21",
                "type": ""
              }
            ],
            "src": "5522:411:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6039:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6049:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6061:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6072:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6057:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6057:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6049:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6091:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6102:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6084:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6084:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6084:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6008:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6019:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6030:4:21",
                "type": ""
              }
            ],
            "src": "5938:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6168:80:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6195:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6197:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6197:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6197:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6184:1:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6191:1:21"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6187:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6187:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6181:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6181:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6178:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6226:16:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6237:1:21"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6240:1:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6233:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6233:9:21"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6226:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6151:1:21",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6154:1:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6160:3:21",
                "type": ""
              }
            ],
            "src": "6120:128:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6305:116:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6364:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6366:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6366:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6366:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6336:1:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6329:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6329:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6322:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6322:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6344:1:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6355:1:21",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6351:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6351:6:21"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6359:1:21"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6347:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6347:14:21"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6341:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6341:21:21"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6318:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6318:45:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6315:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6395:20:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6410:1:21"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6413:1:21"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6406:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6406:9:21"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6395:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6284:1:21",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6287:1:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6293:7:21",
                "type": ""
              }
            ],
            "src": "6253:168:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6479:205:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6489:10:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6498:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6493:1:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6558:63:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6583:3:21"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6588:1:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6579:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6579:11:21"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6602:3:21"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6607:1:21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6598:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6598:11:21"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6592:5:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6592:18:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6572:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6572:39:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6572:39:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6519:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6522:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6516:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6516:13:21"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6530:19:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6532:15:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6541:1:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6544:2:21",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6537:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6537:10:21"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6532:1:21"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6512:3:21",
                    "statements": []
                  },
                  "src": "6508:113:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6647:31:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6660:3:21"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6665:6:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6656:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6656:16:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6674:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6649:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6649:27:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6649:27:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6636:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6639:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6633:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6630:2:21"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6457:3:21",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6462:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6467:6:21",
                "type": ""
              }
            ],
            "src": "6426:258:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6736:89:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6763:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6765:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6765:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6765:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6756:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6749:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6749:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6746:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6794:25:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6805:5:21"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6816:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6812:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6812:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6801:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6794:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6718:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6728:3:21",
                "type": ""
              }
            ],
            "src": "6689:136:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6862:95:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6879:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6886:3:21",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6891:10:21",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6882:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6882:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6872:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6872:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6872:31:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6919:1:21",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6922:4:21",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6912:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6912:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6912:15:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6943:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6946:4:21",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6936:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6936:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6936:15:21"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6830:127:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), tail)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Exchange rate must be configured\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "347:2556:3:-:0;;;759:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;799:7;:18;;-1:-1:-1;;;;;;799:18:3;-1:-1:-1;;;;;799:18:3;;;;;828:44;-1:-1:-1;859:12:3;665:10:17;;586:96;859:12:3;828:10;:44::i;:::-;759:120;347:2556;;7515:110:11;7593:25;7604:4;7610:7;7593:10;:25::i;:::-;7515:110;;:::o;7948:224::-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:11;;;;;;;;;;;;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:11;;;;;;;;;:36;;-1:-1:-1;;8060:36:11;8092:4;8060:36;;;8142:12;665:10:17;;586:96;8142:12:11;-1:-1:-1;;;;;8115:40:11;8133:7;-1:-1:-1;;;;;8115:40:11;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;14:325:21:-;99:6;152:2;140:9;131:7;127:23;123:32;120:2;;;173:6;165;158:22;120:2;204:16;;-1:-1:-1;;;;;249:31:21;;239:42;;229:2;;300:6;292;285:22;229:2;328:5;110:229;-1:-1:-1;;;110:229:21:o;:::-;347:2556:3;;;;;;",
  "deployedSourceMap": "347:2556:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:214:11;;;;;;:::i;:::-;;:::i;:::-;;;4203:14:21;;4196:22;4178:41;;4166:2;4151:18;4073:214:11;;;;;;;;5348:121;;;;;;:::i;:::-;;:::i;:::-;;;4376:25:21;;;4364:2;4349:18;5348:121:11;4331:76:21;5719:145:11;;;;;;:::i;:::-;;:::i;:::-;;478:70:3;;-1:-1:-1;;;;;;;;;;;478:70:3;;6736:214:11;;;;;;:::i;:::-;;:::i;2135:584:3:-;;;;;;:::i;:::-;;:::i;4374:137:11:-;;;;;;:::i;:::-;;:::i;1421:309:3:-;;;:::i;2394:49:11:-;;2439:4;2394:49;;392:80:3;;-1:-1:-1;;;;;;;;;;;392:80:3;;6098:147:11;;;;;;:::i;:::-;;:::i;1160:133:3:-;;;;;;:::i;:::-;;:::i;4073:214:11:-;4158:4;-1:-1:-1;;;;;;4181:47:11;;-1:-1:-1;;;4181:47:11;;:99;;-1:-1:-1;;;;;;;;;;871:40:19;;;4244:36:11;4174:106;4073:214;-1:-1:-1;;4073:214:11:o;5348:121::-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121::o;5719:145::-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;665:10:17;3958::11;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;:::-;5719:145:::0;;;:::o;6736:214::-;-1:-1:-1;;;;;6831:23:11;;665:10:17;6831:23:11;6823:83;;;;-1:-1:-1;;;6823:83:11;;5724:2:21;6823:83:11;;;5706:21:21;5763:2;5743:18;;;5736:30;5802:34;5782:18;;;5775:62;-1:-1:-1;;;5853:18:21;;;5846:45;5908:19;;6823:83:11;;;;;;;;;6917:26;6929:4;6935:7;6917:11;:26::i;:::-;6736:214;;:::o;2135:584:3:-;-1:-1:-1;;;;;;;;;;;3958:30:11;520:28:3;665:10:17;3958::11;:30::i;:::-;2347:12:3::1;::::0;2339:62:::1;;;::::0;-1:-1:-1;;;2339:62:3;;5363:2:21;2339:62:3::1;::::0;::::1;5345:21:21::0;;;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;5493:18;;2339:62:3::1;5335:182:21::0;2339:62:3::1;2428:11;2412:12;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2476:12:3::1;::::0;2450:9:::1;::::0;2462:26:::1;::::0;:11;:26:::1;:::i;:::-;2499:7;::::0;:127:::1;::::0;-1:-1:-1;;;2499:127:3;;2450:38;;-1:-1:-1;;;;;;2499:7:3::1;::::0;:24:::1;::::0;:127:::1;::::0;2545:4:::1;::::0;2564:5;;2499:7:::1;::::0;2450:38;;2499:127:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2651:1:3::1;2662:7:::0;;:50:::1;::::0;-1:-1:-1;;;2662:50:3;;-1:-1:-1;;;;;3865:32:21;;;2662:50:3::1;::::0;::::1;3847:51:21::0;3914:18;;;3907:34;;;3957:18;;;3950:34;;;4000:18;;;3993:34;;;2651:1:3;;-1:-1:-1;2662:7:3;::::1;::::0;-1:-1:-1;2662:17:3::1;::::0;3819:19:21;;2662:50:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3998:1:11;;2135:584:3::0;;;;;;;:::o;4374:137:11:-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:11;;;;;;;;;;;;;;;4374:137::o;1421:309:3:-;2439:4:11;3958:30;2439:4;665:10:17;3958::11;:30::i;:::-;1496:13:3::1;665:10:17::0;1549:7:3::1;::::0;:34:::1;::::0;-1:-1:-1;;;1549:34:3;;-1:-1:-1;;;;;3529:32:21;;;1549:34:3::1;::::0;::::1;3511:51:21::0;1535:11:3::1;3578:18:21::0;;;3571:34;;;1496:28:3;;-1:-1:-1;1549:7:3;;::::1;::::0;:17:::1;::::0;3484:18:21;;1549:34:3::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1594:7;::::0;:129:::1;::::0;-1:-1:-1;;;1594:129:3;;1535:48;;-1:-1:-1;;;;;;1594:7:3::1;::::0;:24:::1;::::0;:129:::1;::::0;1640:4:::1;::::0;1659:5;;1594:7:::1;::::0;1535:48;;1594:129:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3998:1:11;;1421:309:3::0;:::o;6098:147:11:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;665:10:17;3958::11;:30::i;:::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;1160:133:3:-:0;-1:-1:-1;;;;;;;;;;;3958:30:11;439:33:3;665:10:17;3958::11;:30::i;:::-;-1:-1:-1;1258:12:3::1;:28:::0;1160:133::o;4792:375:11:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;-1:-1:-1;;;;;5000:41:11;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4923:225:11;;;;;;;;;;-1:-1:-1;;;4909:241:11;;;;;;;:::i;7948:224::-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:11;;;;;;;;;:36;;-1:-1:-1;;8060:36:11;8092:4;8060:36;;;8142:12;665:10:17;;586:96;8142:12:11;-1:-1:-1;;;;;8115:40:11;8133:7;-1:-1:-1;;;;;8115:40:11;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:11;;;;;;;;;;:37;;-1:-1:-1;;8290:37:11;;;8346:40;665:10:17;;8290:12:11;;8346:40;;8322:5;8346:40;8178:225;;:::o;1531:437:18:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;-1:-1:-1;;;;;1653:25:18;;;;;-1:-1:-1;;;1653:25:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:18;;1631:47;;-1:-1:-1;;;1688:6:18;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:18;;;;;;;;;;;;:15;-1:-1:-1;;;;;1688:15:18;;;;;;;;;-1:-1:-1;;;1713:6:18;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:18;;;;;;;;;;;;:15;-1:-1:-1;;;;;1713:15:18;;;;;;;;-1:-1:-1;1743:9:18;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1818:5:18;1826:3;1818:11;1809:21;;;;;-1:-1:-1;;;1809:21:18;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:18;;;;;;;;;;;;:33;-1:-1:-1;;;;;1797:33:18;;;;;;;;-1:-1:-1;1854:1:18;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:18;;1875:55;;;;-1:-1:-1;;;1875:55:18;;5002:2:21;1875:55:18;;;4984:21:21;;;5021:18;;;5014:30;5080:34;5060:18;;;5053:62;5132:18;;1875:55:18;4974:182:21;1875:55:18;1954:6;1531:437;-1:-1:-1;;;1531:437:18:o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:190::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;-1:-1:-1;353:23:21;;262:120;-1:-1:-1;262:120:21:o;387:264::-;455:6;463;516:2;504:9;495:7;491:23;487:32;484:2;;;537:6;529;522:22;484:2;578:9;565:23;555:33;;607:38;641:2;630:9;626:18;607:38;:::i;:::-;597:48;;474:177;;;;;:::o;656:306::-;714:6;767:2;755:9;746:7;742:23;738:32;735:2;;;788:6;780;773:22;735:2;819:23;;-1:-1:-1;;;;;;871:32:21;;861:43;;851:2;;923:6;915;908:22;1162:194;1232:6;1285:2;1273:9;1264:7;1260:23;1256:32;1253:2;;;1306:6;1298;1291:22;1253:2;-1:-1:-1;1334:16:21;;1243:113;-1:-1:-1;1243:113:21:o;1361:545::-;1465:6;1473;1481;1489;1497;1505;1558:3;1546:9;1537:7;1533:23;1529:33;1526:2;;;1580:6;1572;1565:22;1526:2;1621:9;1608:23;1598:33;;1650:38;1684:2;1673:9;1669:18;1650:38;:::i;:::-;1640:48;;1707:38;1741:2;1730:9;1726:18;1707:38;:::i;:::-;1697:48;;1792:2;1781:9;1777:18;1764:32;1754:42;;1843:3;1832:9;1828:19;1815:33;1805:43;;1895:3;1884:9;1880:19;1867:33;1857:43;;1516:390;;;;;;;;:::o;1911:786::-;-1:-1:-1;;;2317:3:21;2310:38;2292:3;2377:6;2371:13;2393:62;2448:6;2443:2;2438:3;2434:12;2427:4;2419:6;2415:17;2393:62;:::i;:::-;-1:-1:-1;;;2514:2:21;2474:16;;;2506:11;;;2499:40;2564:13;;2586:63;2564:13;2635:2;2627:11;;2620:4;2608:17;;2586:63;:::i;:::-;2669:17;2688:2;2665:26;;2300:397;-1:-1:-1;;;;2300:397:21:o;2702:630::-;-1:-1:-1;;;;;3053:15:21;;;3035:34;;3105:15;;;;3100:2;3085:18;;3078:43;3152:2;3137:18;;3130:34;3195:2;3180:18;;3173:34;;;;3015:3;3238;3223:19;;3216:32;;;2978:4;3264:19;;;3257:33;3322:3;3307:19;;2987:345::o;4412:383::-;4561:2;4550:9;4543:21;4524:4;4593:6;4587:13;4636:6;4631:2;4620:9;4616:18;4609:34;4652:66;4711:6;4706:2;4695:9;4691:18;4686:2;4678:6;4674:15;4652:66;:::i;:::-;4779:2;4758:15;-1:-1:-1;;4754:29:21;4739:45;;;;4786:2;4735:54;;4533:262;-1:-1:-1;;4533:262:21:o;6120:128::-;6160:3;6191:1;6187:6;6184:1;6181:13;6178:2;;;6197:18;;:::i;:::-;-1:-1:-1;6233:9:21;;6168:80::o;6253:168::-;6293:7;6359:1;6355;6351:6;6347:14;6344:1;6341:21;6336:1;6329:9;6322:17;6318:45;6315:2;;;6366:18;;:::i;:::-;-1:-1:-1;6406:9:21;;6305:116::o;6426:258::-;6498:1;6508:113;6522:6;6519:1;6516:13;6508:113;;;6598:11;;;6592:18;6579:11;;;6572:39;6544:2;6537:10;6508:113;;;6639:6;6636:1;6633:13;6630:2;;;6674:1;6665:6;6660:3;6656:16;6649:27;6630:2;;6479:205;;;:::o;6689:136::-;6728:3;6756:5;6746:2;;6765:18;;:::i;:::-;-1:-1:-1;;;6801:18:21;;6736:89::o;6830:127::-;6891:10;6886:3;6882:20;6879:1;6872:31;6922:4;6919:1;6912:15;6946:4;6943:1;6936:15",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./access/AccessControl.sol\";\nimport \"./Davinci.sol\";\n\n/** The FiatGateway contract allows buying NFTs from an external fiat payment.\n  *\n  * This contract connects to the Davinci contract.\n  * It must hold a balance of CERE recognized by Davinci.\n  *\n  * This contract uses the SimpleExchange API to buy NFTs.\n */\ncontract FiatGateway is AccessControl {\n\n    bytes32 public constant EXCHANGE_RATE_ORACLE = keccak256(\"EXCHANGE_RATE_ORACLE\");\n    bytes32 public constant PAYMENT_SERVICE = keccak256(\"PAYMENT_SERVICE\");\n\n    /** The token ID that represents the CERE currency for all payments in this contract. */\n    uint256 public constant CURRENCY = 0;\n\n    Davinci davinci;\n    uint cerePerPenny;\n    uint totalPennies;\n\n    constructor(Davinci _davinci) {\n        davinci = _davinci;\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    }\n\n    /** Set the exchange rate between fiat (USD) and Davinci currency (CERE).\n      *\n      * The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny).\n      *\n      * Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate.\n     */\n    function setExchangeRate(uint _cerePerPenny)\n    public onlyRole(EXCHANGE_RATE_ORACLE) {\n\n        cerePerPenny = _cerePerPenny;\n    }\n\n    /** Withdraw all CERE from this contract.\n      *\n      * Only accounts with DEFAULT_ADMIN_ROLE can withdraw.\n     */\n    function withdrawCere()\n    public onlyRole(DEFAULT_ADMIN_ROLE) {\n\n        address admin = _msgSender();\n\n        uint amount = davinci.balanceOf(admin, CURRENCY);\n\n        davinci.safeTransferFrom(\n            address(this),\n            admin,\n            CURRENCY,\n            amount,\n            \"\");\n    }\n\n    /** Execute a buy of an NFT based on a fiat payment.\n      *\n      * Only the gateway with PAYMENT_SERVICE role can report successful payments.\n      *\n      * The amount of fiat is recorded, and exchanged for an amount of Davinci currency.\n      *\n      * The currency is used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n     */\n    function buyFromUsd(\n        uint paidPennies,\n        address buyer,\n        address seller,\n        uint nftId,\n        uint nftPrice,\n        uint nonce)\n    public onlyRole(PAYMENT_SERVICE) {\n        require(cerePerPenny != 0, \"Exchange rate must be configured\");\n\n        totalPennies += paidPennies;\n\n        uint cere = paidPennies * cerePerPenny;\n\n        davinci.safeTransferFrom(\n            address(this),\n            buyer,\n            CURRENCY,\n            cere,\n            \"\");\n\n        uint amount = 1;\n        davinci.takeOffer(seller, nftId, nftPrice, amount);\n    }\n\n    /** Guarantee that a version of Solidity with safe math is used.\n     */\n    function _mathIsSafe() internal pure {\n    unchecked {} // Use a keyword from Solidity 0.8.0.\n    }\n}",
  "sourcePath": "/home/a/CERE/davinci-nft/contracts/polygon/FiatGateway.sol",
  "ast": {
    "absolutePath": "/home/a/CERE/davinci-nft/contracts/polygon/FiatGateway.sol",
    "exportedSymbols": {
      "AccessControl": [
        2285
      ],
      "Address": [
        3792
      ],
      "BaseNFT": [
        102
      ],
      "Context": [
        3815
      ],
      "Currency": [
        175
      ],
      "Davinci": [
        182
      ],
      "ERC1155": [
        3318
      ],
      "ERC165": [
        4042
      ],
      "FiatGateway": [
        345
      ],
      "IAccessControl": [
        1961
      ],
      "IERC1155": [
        3440
      ],
      "IERC1155MetadataURI": [
        3496
      ],
      "IERC1155Receiver": [
        3481
      ],
      "IERC165": [
        4054
      ],
      "Issuance": [
        599
      ],
      "JointAccounts": [
        936
      ],
      "MetaTxContext": [
        1006
      ],
      "PolygonChildERC20": [
        1155
      ],
      "SimpleExchange": [
        1306
      ],
      "Strings": [
        4018
      ],
      "TransferFees": [
        1880
      ],
      "TransferOperator": [
        1917
      ]
    },
    "id": 346,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 184,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/polygon/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 185,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 346,
        "sourceUnit": 2286,
        "src": "25:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/polygon/Davinci.sol",
        "file": "./Davinci.sol",
        "id": 186,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 346,
        "sourceUnit": 183,
        "src": "62:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 188,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2285,
              "src": "371:13:3"
            },
            "id": 189,
            "nodeType": "InheritanceSpecifier",
            "src": "371:13:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 187,
          "nodeType": "StructuredDocumentation",
          "src": "87:259:3",
          "text": "The FiatGateway contract allows buying NFTs from an external fiat payment.\n This contract connects to the Davinci contract.\n It must hold a balance of CERE recognized by Davinci.\n This contract uses the SimpleExchange API to buy NFTs."
        },
        "fullyImplemented": true,
        "id": 345,
        "linearizedBaseContracts": [
          345,
          2285,
          4042,
          4054,
          1961,
          3815
        ],
        "name": "FiatGateway",
        "nameLocation": "356:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c87113e2",
            "id": 194,
            "mutability": "constant",
            "name": "EXCHANGE_RATE_ORACLE",
            "nameLocation": "416:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "392:80:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 190,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45584348414e47455f524154455f4f5241434c45",
                  "id": 192,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "449:22:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  },
                  "value": "EXCHANGE_RATE_ORACLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  }
                ],
                "id": 191,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "439:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 193,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "439:33:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3263ba67",
            "id": 199,
            "mutability": "constant",
            "name": "PAYMENT_SERVICE",
            "nameLocation": "502:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "478:70:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 195,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041594d454e545f53455256494345",
                  "id": 197,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "530:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  },
                  "value": "PAYMENT_SERVICE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  }
                ],
                "id": 196,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "520:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "520:28:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "555:88:3",
              "text": "The token ID that represents the CERE currency for all payments in this contract. "
            },
            "functionSelector": "f5361219",
            "id": 203,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "672:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "648:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 201,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 202,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "683:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 206,
            "mutability": "mutable",
            "name": "davinci",
            "nameLocation": "699:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "691:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Davinci_$182",
              "typeString": "contract Davinci"
            },
            "typeName": {
              "id": 205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 204,
                "name": "Davinci",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 182,
                "src": "691:7:3"
              },
              "referencedDeclaration": 182,
              "src": "691:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Davinci_$182",
                "typeString": "contract Davinci"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 208,
            "mutability": "mutable",
            "name": "cerePerPenny",
            "nameLocation": "717:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "712:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 207,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "712:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 210,
            "mutability": "mutable",
            "name": "totalPennies",
            "nameLocation": "740:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "735:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 209,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "735:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "789:90:3",
              "statements": [
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 216,
                      "name": "davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "799:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$182",
                        "typeString": "contract Davinci"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 217,
                      "name": "_davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "809:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$182",
                        "typeString": "contract Davinci"
                      }
                    },
                    "src": "799:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$182",
                      "typeString": "contract Davinci"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "799:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 221,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "839:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 222,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3803,
                          "src": "859:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "859:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 220,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2199,
                      "src": "828:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "828:44:3"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_davinci",
                  "nameLocation": "779:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "771:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Davinci_$182",
                    "typeString": "contract Davinci"
                  },
                  "typeName": {
                    "id": 212,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 211,
                      "name": "Davinci",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 182,
                      "src": "771:7:3"
                    },
                    "referencedDeclaration": 182,
                    "src": "771:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$182",
                      "typeString": "contract Davinci"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "770:18:3"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:3"
            },
            "scope": 345,
            "src": "759:120:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "1247:46:3",
              "statements": [
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1258:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 237,
                      "name": "_cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "1273:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1258:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:28:3"
                }
              ]
            },
            "documentation": {
              "id": 228,
              "nodeType": "StructuredDocumentation",
              "src": "885:270:3",
              "text": "Set the exchange rate between fiat (USD) and Davinci currency (CERE).\n The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny).\n Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
            },
            "functionSelector": "db068e0e",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 233,
                    "name": "EXCHANGE_RATE_ORACLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 194,
                    "src": "1225:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 234,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 232,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2023,
                  "src": "1216:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1216:30:3"
              }
            ],
            "name": "setExchangeRate",
            "nameLocation": "1169:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_cerePerPenny",
                  "nameLocation": "1190:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1185:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:20:3"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:0:3"
            },
            "scope": 345,
            "src": "1160:133:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1485:245:3",
              "statements": [
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "1504:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "1496:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1496:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 250,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3803,
                      "src": "1512:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1496:28:3"
                },
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1540:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "1535:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1535:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 257,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1567:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 258,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1574:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 255,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1549:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2401,
                      "src": "1549:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1535:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1640:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1632:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1632:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1632:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 268,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1659:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 269,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1678:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 270,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "1700:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 261,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1594:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "1594:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:129:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:129:3"
                }
              ]
            },
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "1299:117:3",
              "text": "Withdraw all CERE from this contract.\n Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
            },
            "functionSelector": "a1097d0b",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 245,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1983,
                    "src": "1465:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 244,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2023,
                  "src": "1456:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1456:28:3"
              }
            ],
            "name": "withdrawCere",
            "nameLocation": "1430:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1442:2:3"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:0:3"
            },
            "scope": 345,
            "src": "1421:309:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "2329:390:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 295,
                          "name": "cerePerPenny",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2347:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2363:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2347:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e67652072617465206d75737420626520636f6e66696775726564",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2366:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        },
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        }
                      ],
                      "id": 294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2339:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:62:3"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "totalPennies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2412:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 302,
                      "name": "paidPennies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2428:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2412:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "2412:27:3"
                },
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "cere",
                      "nameLocation": "2455:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "2450:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2450:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "paidPennies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2462:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 308,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2476:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2462:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2450:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 316,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2545:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2537:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2537:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2537:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 318,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "2564:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 319,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2583:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 320,
                        "name": "cere",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "2605:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2623:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 311,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2499:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "2499:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:127:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:127:3"
                },
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2642:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "2637:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2651:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2637:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2680:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 332,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "2688:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 333,
                        "name": "nftPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "2695:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 334,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "2705:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 328,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2662:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1299,
                      "src": "2662:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:50:3"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "1736:394:3",
              "text": "Execute a buy of an NFT based on a fiat payment.\n Only the gateway with PAYMENT_SERVICE role can report successful payments.\n The amount of fiat is recorded, and exchanged for an amount of Davinci currency.\n The currency is used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange."
            },
            "functionSelector": "5439002f",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 291,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 199,
                    "src": "2312:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 290,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2023,
                  "src": "2303:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2303:25:3"
              }
            ],
            "name": "buyFromUsd",
            "nameLocation": "2144:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "paidPennies",
                  "nameLocation": "2169:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2164:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2198:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2190:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2221:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2213:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2242:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2237:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "nftPrice",
                  "nameLocation": "2262:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2257:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2285:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2280:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2154:137:3"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:0:3"
            },
            "scope": 345,
            "src": "2135:584:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "2839:62:3",
              "statements": [
                {
                  "id": 342,
                  "nodeType": "UncheckedBlock",
                  "src": "2845:12:3",
                  "statements": []
                }
              ]
            },
            "documentation": {
              "id": 339,
              "nodeType": "StructuredDocumentation",
              "src": "2725:72:3",
              "text": "Guarantee that a version of Solidity with safe math is used."
            },
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mathIsSafe",
            "nameLocation": "2811:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2822:2:3"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:3"
            },
            "scope": 345,
            "src": "2802:99:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 346,
        "src": "347:2556:3",
        "usedErrors": []
      }
    ],
    "src": "0:2903:3"
  },
  "legacyAST": {
    "absolutePath": "/home/a/CERE/davinci-nft/contracts/polygon/FiatGateway.sol",
    "exportedSymbols": {
      "AccessControl": [
        2285
      ],
      "Address": [
        3792
      ],
      "BaseNFT": [
        102
      ],
      "Context": [
        3815
      ],
      "Currency": [
        175
      ],
      "Davinci": [
        182
      ],
      "ERC1155": [
        3318
      ],
      "ERC165": [
        4042
      ],
      "FiatGateway": [
        345
      ],
      "IAccessControl": [
        1961
      ],
      "IERC1155": [
        3440
      ],
      "IERC1155MetadataURI": [
        3496
      ],
      "IERC1155Receiver": [
        3481
      ],
      "IERC165": [
        4054
      ],
      "Issuance": [
        599
      ],
      "JointAccounts": [
        936
      ],
      "MetaTxContext": [
        1006
      ],
      "PolygonChildERC20": [
        1155
      ],
      "SimpleExchange": [
        1306
      ],
      "Strings": [
        4018
      ],
      "TransferFees": [
        1880
      ],
      "TransferOperator": [
        1917
      ]
    },
    "id": 346,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 184,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/polygon/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 185,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 346,
        "sourceUnit": 2286,
        "src": "25:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/polygon/Davinci.sol",
        "file": "./Davinci.sol",
        "id": 186,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 346,
        "sourceUnit": 183,
        "src": "62:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 188,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2285,
              "src": "371:13:3"
            },
            "id": 189,
            "nodeType": "InheritanceSpecifier",
            "src": "371:13:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 187,
          "nodeType": "StructuredDocumentation",
          "src": "87:259:3",
          "text": "The FiatGateway contract allows buying NFTs from an external fiat payment.\n This contract connects to the Davinci contract.\n It must hold a balance of CERE recognized by Davinci.\n This contract uses the SimpleExchange API to buy NFTs."
        },
        "fullyImplemented": true,
        "id": 345,
        "linearizedBaseContracts": [
          345,
          2285,
          4042,
          4054,
          1961,
          3815
        ],
        "name": "FiatGateway",
        "nameLocation": "356:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c87113e2",
            "id": 194,
            "mutability": "constant",
            "name": "EXCHANGE_RATE_ORACLE",
            "nameLocation": "416:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "392:80:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 190,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45584348414e47455f524154455f4f5241434c45",
                  "id": 192,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "449:22:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  },
                  "value": "EXCHANGE_RATE_ORACLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  }
                ],
                "id": 191,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "439:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 193,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "439:33:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3263ba67",
            "id": 199,
            "mutability": "constant",
            "name": "PAYMENT_SERVICE",
            "nameLocation": "502:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "478:70:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 195,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041594d454e545f53455256494345",
                  "id": 197,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "530:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  },
                  "value": "PAYMENT_SERVICE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  }
                ],
                "id": 196,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "520:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "520:28:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "555:88:3",
              "text": "The token ID that represents the CERE currency for all payments in this contract. "
            },
            "functionSelector": "f5361219",
            "id": 203,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "672:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "648:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 201,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 202,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "683:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 206,
            "mutability": "mutable",
            "name": "davinci",
            "nameLocation": "699:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "691:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Davinci_$182",
              "typeString": "contract Davinci"
            },
            "typeName": {
              "id": 205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 204,
                "name": "Davinci",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 182,
                "src": "691:7:3"
              },
              "referencedDeclaration": 182,
              "src": "691:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Davinci_$182",
                "typeString": "contract Davinci"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 208,
            "mutability": "mutable",
            "name": "cerePerPenny",
            "nameLocation": "717:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "712:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 207,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "712:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 210,
            "mutability": "mutable",
            "name": "totalPennies",
            "nameLocation": "740:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 345,
            "src": "735:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 209,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "735:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "789:90:3",
              "statements": [
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 216,
                      "name": "davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "799:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$182",
                        "typeString": "contract Davinci"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 217,
                      "name": "_davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "809:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$182",
                        "typeString": "contract Davinci"
                      }
                    },
                    "src": "799:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$182",
                      "typeString": "contract Davinci"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "799:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 221,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "839:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 222,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3803,
                          "src": "859:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "859:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 220,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2199,
                      "src": "828:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "828:44:3"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_davinci",
                  "nameLocation": "779:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "771:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Davinci_$182",
                    "typeString": "contract Davinci"
                  },
                  "typeName": {
                    "id": 212,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 211,
                      "name": "Davinci",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 182,
                      "src": "771:7:3"
                    },
                    "referencedDeclaration": 182,
                    "src": "771:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$182",
                      "typeString": "contract Davinci"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "770:18:3"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:3"
            },
            "scope": 345,
            "src": "759:120:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "1247:46:3",
              "statements": [
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1258:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 237,
                      "name": "_cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "1273:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1258:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:28:3"
                }
              ]
            },
            "documentation": {
              "id": 228,
              "nodeType": "StructuredDocumentation",
              "src": "885:270:3",
              "text": "Set the exchange rate between fiat (USD) and Davinci currency (CERE).\n The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny).\n Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
            },
            "functionSelector": "db068e0e",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 233,
                    "name": "EXCHANGE_RATE_ORACLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 194,
                    "src": "1225:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 234,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 232,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2023,
                  "src": "1216:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1216:30:3"
              }
            ],
            "name": "setExchangeRate",
            "nameLocation": "1169:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_cerePerPenny",
                  "nameLocation": "1190:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1185:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:20:3"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:0:3"
            },
            "scope": 345,
            "src": "1160:133:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1485:245:3",
              "statements": [
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "1504:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "1496:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1496:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 250,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3803,
                      "src": "1512:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1496:28:3"
                },
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1540:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "1535:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1535:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 257,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1567:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 258,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1574:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 255,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1549:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2401,
                      "src": "1549:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1535:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1640:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1632:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1632:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1632:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 268,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1659:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 269,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1678:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 270,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "1700:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 261,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1594:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "1594:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:129:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:129:3"
                }
              ]
            },
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "1299:117:3",
              "text": "Withdraw all CERE from this contract.\n Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
            },
            "functionSelector": "a1097d0b",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 245,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1983,
                    "src": "1465:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 244,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2023,
                  "src": "1456:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1456:28:3"
              }
            ],
            "name": "withdrawCere",
            "nameLocation": "1430:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1442:2:3"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:0:3"
            },
            "scope": 345,
            "src": "1421:309:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "2329:390:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 295,
                          "name": "cerePerPenny",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2347:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2363:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2347:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e67652072617465206d75737420626520636f6e66696775726564",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2366:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        },
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        }
                      ],
                      "id": 294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2339:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:62:3"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "totalPennies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2412:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 302,
                      "name": "paidPennies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2428:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2412:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "2412:27:3"
                },
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "cere",
                      "nameLocation": "2455:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "2450:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2450:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "paidPennies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2462:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 308,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2476:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2462:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2450:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 316,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2545:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$345",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2537:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2537:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2537:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 318,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "2564:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 319,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2583:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 320,
                        "name": "cere",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "2605:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2623:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 311,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2499:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "2499:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:127:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:127:3"
                },
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2642:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "2637:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2651:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2637:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2680:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 332,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "2688:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 333,
                        "name": "nftPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "2695:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 334,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "2705:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 328,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2662:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$182",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1299,
                      "src": "2662:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:50:3"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "1736:394:3",
              "text": "Execute a buy of an NFT based on a fiat payment.\n Only the gateway with PAYMENT_SERVICE role can report successful payments.\n The amount of fiat is recorded, and exchanged for an amount of Davinci currency.\n The currency is used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange."
            },
            "functionSelector": "5439002f",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 291,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 199,
                    "src": "2312:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 290,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2023,
                  "src": "2303:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2303:25:3"
              }
            ],
            "name": "buyFromUsd",
            "nameLocation": "2144:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "paidPennies",
                  "nameLocation": "2169:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2164:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2198:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2190:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2221:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2213:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2242:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2237:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "nftPrice",
                  "nameLocation": "2262:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2257:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2285:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2280:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2154:137:3"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:0:3"
            },
            "scope": 345,
            "src": "2135:584:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "2839:62:3",
              "statements": [
                {
                  "id": 342,
                  "nodeType": "UncheckedBlock",
                  "src": "2845:12:3",
                  "statements": []
                }
              ]
            },
            "documentation": {
              "id": 339,
              "nodeType": "StructuredDocumentation",
              "src": "2725:72:3",
              "text": "Guarantee that a version of Solidity with safe math is used."
            },
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mathIsSafe",
            "nameLocation": "2811:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2822:2:3"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:3"
            },
            "scope": 345,
            "src": "2802:99:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 346,
        "src": "347:2556:3",
        "usedErrors": []
      }
    ],
    "src": "0:2903:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1628532541290": {
      "events": {},
      "links": {},
      "address": "0xDfF7E7221ab987cc124E2cffbC95a79c76CF28e5",
      "transactionHash": "0x549c32cfecb2f88671166701d8dbcc74570e5546f3c04717225e73addb50d1fa"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-11T00:56:48.992Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "CURRENCY()": {
        "notice": "The token ID that represents the CERE currency for all payments in this contract. "
      },
      "buyFromUsd(uint256,address,address,uint256,uint256,uint256)": {
        "notice": "Execute a buy of an NFT based on a fiat payment. Only the gateway with PAYMENT_SERVICE role can report successful payments. The amount of fiat is recorded, and exchanged for an amount of Davinci currency. The currency is used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange."
      },
      "setExchangeRate(uint256)": {
        "notice": "Set the exchange rate between fiat (USD) and Davinci currency (CERE). The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny). Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
      },
      "withdrawCere()": {
        "notice": "Withdraw all CERE from this contract. Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
      }
    },
    "notice": "The FiatGateway contract allows buying NFTs from an external fiat payment. This contract connects to the Davinci contract. It must hold a balance of CERE recognized by Davinci. This contract uses the SimpleExchange API to buy NFTs.",
    "version": 1
  }
}