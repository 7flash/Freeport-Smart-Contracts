{
  "contractName": "CollectionFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "CollectionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLECTION_CREATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftAttachment",
      "outputs": [
        {
          "internalType": "contract NFTAttachment",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        },
        {
          "internalType": "contract NFTAttachment",
          "name": "_nftAttachment",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createCollection",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLECTION_CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"},{\"internalType\":\"contract NFTAttachment\",\"name\":\"_nftAttachment\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAttachment\",\"outputs\":[{\"internalType\":\"contract NFTAttachment\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CollectionCreated(string,address)\":{\"notice\":\"An event emitted when new collection is created. Contains unique name of collection and its address.\"}},\"kind\":\"user\",\"methods\":{\"COLLECTION_CREATOR_ROLE()\":{\"notice\":\"Collection creator role.  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT.\"},\"createCollection(address,string)\":{\"notice\":\"Deploying a new user collection.  Emits a {CollectionCreated} event.\"}},\"notice\":\"This is a contract for creating standalone contracts (collections) for users.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CollectionFactory.sol\":\"CollectionFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed\",\"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xda94a85ba0a26d49cd327cc63b8b54fa5dde8f5d1c5f3c942237096ef896eff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a591e20787048963a028302f0157fea70eab83db641f020169a789effc7d7907\",\"dweb:/ipfs/QmXY3LKPvw5BMrjG4JxWZZ15RR2jhUDktNrZqHqyCewXBG\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429b36651fab917b4cdfa5e9431b96c5bd3ba73392a31e62a4d92b4b4ae85184\",\"dweb:/ipfs/QmY1SgWuSbxgYCPAibNHT4phA71QzzqagZRunwC7Gm19wq\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352\",\"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6014667ab9e057c1810fcb7ef844123c581a34eb8dafc1aaa15f4e0f704620b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3abfde5dc879cf0ef670cd7357410b4fcf2a7ec76306e82f96cb4715b2c51d0\",\"dweb:/ipfs/Qme48SqUCFLhgtgg9ZSpmQuwvitujCkHjDhmDCAtsDgjA3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xd841c561258151c3c22f05feb68c702fc414b112606bd72b848e8a65af128c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e949bb10f10df25903b0ec5eb13a8b9878996abd49897884062645a4123ffb2\",\"dweb:/ipfs/QmQ2Z3qegGykZLAf7Wt1y24wCxxnA3stRMHzy1LBFvxhtX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a\",\"dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d\",\"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f\",\"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/Collection.sol\":{\"keccak256\":\"0x7c5112c0ace668e14fea857a0c8e9b2285f8651c6e6c2d6d9b7e5c7059723710\",\"urls\":[\"bzz-raw://84fe3c54f92a66fe44927d25683c8a6b3eb639364eaaaa11c9d62eca5d5cf3da\",\"dweb:/ipfs/QmRJssQQFDJYruXngLu3r3NgpdUkv1xWUNKPX6Bdnuneiu\"]},\"project:/contracts/CollectionFactory.sol\":{\"keccak256\":\"0x4d963fed8b96fc90246f93e5908e048c86e8d357f8e520fea9329fa76b5ad85c\",\"urls\":[\"bzz-raw://3b97a20056e914a4add16934dbb073d1985fa9189969007f5e955cecc72eb72a\",\"dweb:/ipfs/QmTVGabL2rzixFiJJrAUh8EMHoZXYa3pE4WPJGi6w8ScZm\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0x001501a3c0ca27f755dd356ace2fae4bf88b31eeb2ac39464177861b0d75f9c5\",\"urls\":[\"bzz-raw://81bfe2fa98823dfc4791f279b165492022cca0030927f918294b62589e5a722f\",\"dweb:/ipfs/QmcSjxP44iN1MRHaSocw6aLeySA7g2dWKpsfQ55tH1xbXi\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x38f603b6c69541ab197956454fd07a2aecce0c03e19320d7a29902a6af656301\",\"urls\":[\"bzz-raw://5219d3947953ef384ac070fdbacdbb39a6623107ca799383dcec44d86832456e\",\"dweb:/ipfs/QmbiUcxRdGz9cuqoapQuL4pqAguY9Wtf6xq3iw4UncL121\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x589571f85ae8cc227de3ea3b2c7b3d6f8dd5b977755c4c7303cc18c1aede3322\",\"urls\":[\"bzz-raw://33479f8d906835f681a11ae5eeb51af792726764e7a45dab082b84b617ef175c\",\"dweb:/ipfs/QmWaQQNmegKf1Nd2y4M5pnUNNKJQ6NaHQjXJgUC2MqUKwH\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0xc4e1878c459f9b7741a965245659e9e90d241ded479264c22f31efe15ed04aec\",\"urls\":[\"bzz-raw://d4bcafd88cde0d2cca84f87f999c4ba7d04409c3c62384da56f462a96eac3dc5\",\"dweb:/ipfs/QmfMnUk5CYRp6q9JiXTtc1cpoXDatwzSqRfkZjTAKdGHr2\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x7298ad1106ffa5af90d35bf47e214dc28c705f99a3796d644e92b3a492d273b7\",\"urls\":[\"bzz-raw://2ad2298e77090a93310f10e78ba2bfdd5712f2183d662328e197665e1e1d8857\",\"dweb:/ipfs/QmWdotY9DB6a6W2m6qkNKDXeuL7M7Shff45QTii2ktwBUm\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x1d3f9d778f91e75758a3415184eacbbdcd48cea32e05cc66ad0dbda5d2743263\",\"urls\":[\"bzz-raw://e39ed264fcdee725fb2eed77788a13df9e879f28662dd388cd11455e01fc1f4f\",\"dweb:/ipfs/QmdGom9qXRX7YeNS92Rn9QmjLSZ3MbB5hhspeESeRb5V5B\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0xf35f669c65346b421322355b744f2a071275f298a1fa9a630b7a73df91fdf540\",\"urls\":[\"bzz-raw://7ec2c162ecd046754a762d80eff3c113421bb0c82bc888f1caf50314174d706e\",\"dweb:/ipfs/QmNVdvKAaPwRJLvQBBj381fr1xDhuqD1KFoFDbLDs3z9BQ\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0xdd37428ab4740cc4cba878f25999c0f94949a1446c2d5ee30d164352a909cc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c7a0d9223e6d7ef3cf4cbe2d22db198823c11ffb8ed269a7cd31b1c8ba8e1d\",\"dweb:/ipfs/QmWsD5hNAfT6zktKkUbYrMhF1ZGP8t9cC31jk9mUFSkmgY\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x8815647aaba57fe5175439ca22f5cfe7adffdf959cf19f74ad6079b329dc46ba\",\"urls\":[\"bzz-raw://999515bd8f5e71417a672e4426d2b1961bc0a94ffa01c9154f8f4907c0afb15f\",\"dweb:/ipfs/QmfZ2tcZT6LoWVLWyaUGUqUa8wU8bvxpmnnEUERJBuc3g5\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xcb640511c6c8316cc452ec87d9cdc2c74b75dacb01d636e1b94b266f7771ca2d\",\"urls\":[\"bzz-raw://7fd1e06a180dc3995714fd50bba969445a0a1164fd2db6b5407b37edee3eb01a\",\"dweb:/ipfs/QmU75hREyE73AiHioN81T7Sp5z3FFPQx55T7t3nwFwi3uQ\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0x430f18b7e8e7a369ec254705a064d2411fe0fe2cd1ce546baaedd03aa965edc2\",\"urls\":[\"bzz-raw://b4f8a0c647e900ec91c0ea26614b8318fdaf6cfccc9234538b99e31c92ef635f\",\"dweb:/ipfs/QmUASapjiTqxuYC1dp5EmBKjs4Nh9VzaQGbs2CPTokM9TQ\"]},\"project:/contracts/freeportParts/Upgradeable.sol\":{\"keccak256\":\"0x6edf744da7d19533558fd19dd9db50151671d137603363efd2c69c6bad46434a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dedf9f686f3f736a593d0e3f4b7609c1fe919c969ac82036d1ad68d4c04fdd\",\"dweb:/ipfs/QmU7BcQKJHBVQ91kYacbeUKUC8YBuF2GTrGdrYLBDBzdBi\"]},\"project:/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xd0615c826e26d02b5a981f933b8a9bd27f9459e440397b165e5fcc014b41a835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c02c9558d39e1b6a85b74d07b3c621acdd7740718bb59b2beef8fed0c3b4203\",\"dweb:/ipfs/QmVe9NXaqmuYcWpkaznDqGfv1sGFQsteb5RzaVHZT8UuGZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061535c806100206000396000f3fe6080604052600436106100f35760003560e01c8063572b6c051161008a578063a217fddf11610059578063a217fddf1461032d578063b577fd7314610342578063caff99ce14610362578063d547741f1461039657600080fd5b8063572b6c051461023857806391d14854146102935780639470ad85146102d95780639a86e8ce146102f957600080fd5b806336568abe116100c657806336568abe146101c55780633659cfe6146101e5578063485cc955146102055780634f1ef2861461022557600080fd5b806301ffc9a7146100f857806311ec58681461012d578063248a9ca3146101655780632f2ff15d146101a3575b600080fd5b34801561010457600080fd5b506101186101133660046115be565b6103b6565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b5060fd5461014d906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b34801561017157600080fd5b50610195610180366004611577565b600090815260c9602052604090206001015490565b604051908152602001610124565b3480156101af57600080fd5b506101c36101be36600461158f565b61044f565b005b3480156101d157600080fd5b506101c36101e036600461158f565b610481565b3480156101f157600080fd5b506101c36102003660046114e8565b610522565b34801561021157600080fd5b506101c36102203660046115fe565b610549565b6101c3610233366004611504565b610642565b34801561024457600080fd5b506101186102533660046114e8565b6001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610449565b34801561029f57600080fd5b506101186102ae36600461158f565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156102e557600080fd5b5060fc5461014d906001600160a01b031681565b34801561030557600080fd5b506101957f3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d881565b34801561033957600080fd5b50610195600081565b34801561034e57600080fd5b5061014d61035d366004611565565b610657565b34801561036e57600080fd5b506101957fe926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c81565b3480156103a257600080fd5b506101c36103b136600461158f565b610932565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061044957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600082815260c960205260409020600101546104728161046d61095a565b6109b7565b61047c8383610a37565b505050565b61048961095a565b6001600160a01b0316816001600160a01b0316146105145760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b61051e8282610ada565b5050565b61052b81610b7b565b61054681604051806020016040528060008152506000610bf9565b50565b600054610100900460ff1680610562575060005460ff16155b6105c55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156105e7576000805461ffff19166101011790555b6105ef610df2565b60fc80546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff199283161790925560fd805492851692909116919091179055801561047c576000805461ff0019169055505050565b61064b82610b7b565b61051e82826001610bf9565b60006106857fe926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c6102ae61095a565b6106d15760405162461bcd60e51b815260206004820152601760248201527f6f6e6c7920636f6c6c656374696f6e2063726561746f72000000000000000000604482015260640161050b565b6001600160a01b0383166107275760405162461bcd60e51b815260206004820152601460248201527f7a65726f20616464726573732063726561746f72000000000000000000000000604482015260640161050b565b60006001600160a01b031660fb836040516107429190611657565b908152604051908190036020019020546001600160a01b0316146107a85760405162461bcd60e51b815260206004820152601e60248201527f636f6c6c656374696f6e206e616d6520616c7265616479206578697374730000604482015260640161050b565b60006040516107b690611465565b604051809103906000f0801580156107d2573d6000803e3d6000fd5b5060fc5460fd546040517fac4a0fb60000000000000000000000000000000000000000000000000000000081529293506001600160a01b038085169363ac4a0fb69361082d9330938b938b93821692909116906004016116f4565b600060405180830381600087803b15801561084757600080fd5b505af115801561085b573d6000803e3d6000fd5b505060ff8054600090815260fe60205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038616179055546108a492509050600161174c565b60ff55604051819060fb906108ba908690611657565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19909116179055908216907f2660dd916ec25bcad9a3dd62c721e438ec0e975817265c1e03c2639b24ac700790610923908690611739565b60405180910390a29392505050565b600082815260c960205260409020600101546109508161046d61095a565b61047c8383610ada565b60006109a0336001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610449565b156109b2575060131936013560601c90565b503390565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661051e576109f5816001600160a01b03166014610dfc565b610a00836020610dfc565b604051602001610a11929190611673565b60408051601f198184030181529082905262461bcd60e51b825261050b91600401611739565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661051e57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610a9661095a565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff161561051e57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610b3761095a565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b3360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604090205460ff166105465760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c792041646d696e00000000000000000000000000000000000000000000604482015260640161050b565b6000610c2c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050610c378461102a565b600083511180610c445750815b15610c5557610c5384846110ec565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610deb57805460ff191660011781556040516001600160a01b0383166024820152610d0290869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe6000000000000000000000000000000000000000000000000000000001790526110ec565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03838116911614610dad5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f7572746865722075706772616465730000000000000000000000000000000000606482015260840161050b565b610db68561102a565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610dfa6111ee565b565b60606000610e0b836002611764565b610e1690600261174c565b67ffffffffffffffff811115610e3c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e66576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610eab57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f0457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610f28846002611764565b610f3390600161174c565b90505b6001811115610fd4577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610f8257634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610fa657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610fcd816117b3565b9050610f36565b5083156110235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161050b565b9392505050565b803b61109e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161050b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b6111625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161050b565b600080846001600160a01b03168460405161117d9190611657565b600060405180830381855af49150503d80600081146111b8576040519150601f19603f3d011682016040523d82523d6000602084013e6111bd565b606091505b50915091506111e5828260405180606001604052806027815260200161530060279139611209565b95945050505050565b6111f6611242565b6111fe611304565b610dfa6000336113aa565b60608315611218575081611023565b8251156112285782518084602001fd5b8160405162461bcd60e51b815260040161050b9190611739565b600054610100900460ff168061125b575060005460ff16155b6112be5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156112e0576000805461ffff19166101011790555b6112e86113b4565b6112f06113b4565b8015610546576000805461ff001916905550565b600054610100900460ff168061131d575060005460ff16155b6113805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156113a2576000805461ffff19166101011790555b6112e06113b4565b61051e8282610a37565b600054610100900460ff16806113cd575060005460ff16155b6114305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156112f0576000805461ffff19166101011790558015610546576000805461ff001916905550565b613af48061180c83390190565b600067ffffffffffffffff8084111561148d5761148d6117e0565b604051601f8501601f19908116603f011681019082821181831017156114b5576114b56117e0565b816040528093508581528686860111156114ce57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156114f9578081fd5b8135611023816117f6565b60008060408385031215611516578081fd5b8235611521816117f6565b9150602083013567ffffffffffffffff81111561153c578182fd5b8301601f8101851361154c578182fd5b61155b85823560208401611472565b9150509250929050565b60008060408385031215611516578182fd5b600060208284031215611588578081fd5b5035919050565b600080604083850312156115a1578182fd5b8235915060208301356115b3816117f6565b809150509250929050565b6000602082840312156115cf578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611023578182fd5b60008060408385031215611610578182fd5b823561161b816117f6565b915060208301356115b3816117f6565b60008151808452611643816020860160208601611783565b601f01601f19169290920160200192915050565b60008251611669818460208701611783565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516116ab816017850160208801611783565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516116e8816028840160208801611783565b01602801949350505050565b60006001600160a01b038088168352808716602084015260a0604084015261171f60a084018761162b565b948116606084015292909216608090910152509392505050565b602081526000611023602083018461162b565b6000821982111561175f5761175f6117ca565b500190565b600081600019048311821515161561177e5761177e6117ca565b500290565b60005b8381101561179e578181015183820152602001611786565b838111156117ad576000848401525b50505050565b6000816117c2576117c26117ca565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461054657600080fdfe608060405234801561001057600080fd5b50613ad4806100206000396000f3fe6080604052600436106102185760003560e01c806354ea53571161011d578063aea0ffc3116100b0578063eb08ab281161007f578063f4e2efd011610064578063f4e2efd014610776578063f9d5727b14610796578063fe99049a146107b657600080fd5b8063eb08ab281461071c578063f242432a1461075657600080fd5b8063aea0ffc314610653578063c8274abe14610673578063d547741f146106b3578063e985e9c5146106d357600080fd5b80639a86e8ce116100ec5780639a86e8ce146105ca578063a217fddf146105fe578063a22cb46514610613578063ac4a0fb61461063357600080fd5b806354ea5357146104e8578063572b6c051461050857806391d14854146105635780639470ad85146105a957600080fd5b8063248a9ca3116101b057806333df048e1161017f5780633659cfe6116101645780633659cfe6146104885780634e1273f4146104a85780634f1ef286146104d557600080fd5b806333df048e1461041557806336568abe1461046857600080fd5b8063248a9ca314610371578063288809c7146103a15780632eb2c2d6146103d55780632f2ff15d146103f557600080fd5b80630e89341c116101ec5780630e89341c146102c457806311ec5868146102e457806321101e1e1461031d5780632210023d1461033d57600080fd5b8062fdd58e1461021d57806301ffc9a71461025057806302fe53051461028057806306fdde03146102a2575b600080fd5b34801561022957600080fd5b5061023d610238366004613233565b6107d6565b6040519081526020015b60405180910390f35b34801561025c57600080fd5b5061027061026b366004613417565b610881565b6040519015158152602001610247565b34801561028c57600080fd5b506102a061029b36600461344f565b6108a1565b005b3480156102ae57600080fd5b506102b7610906565b604051610247919061377f565b3480156102d057600080fd5b506102b76102df3660046133db565b610995565b3480156102f057600080fd5b5061012f54610305906001600160a01b031681565b6040516001600160a01b039091168152602001610247565b34801561032957600080fd5b506102a06103383660046134d9565b610a29565b34801561034957600080fd5b5061023d7f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b2648809581565b34801561037d57600080fd5b5061023d61038c3660046133db565b600090815260fb602052604090206001015490565b3480156103ad57600080fd5b5061023d6103bc3660046134bf565b60401b6bffffffff0000000000000000163060601b1790565b3480156103e157600080fd5b506102a06103f0366004612fd6565b610aab565b34801561040157600080fd5b506102a06104103660046133f3565b610e33565b34801561042157600080fd5b5061042a610e65565b604080516001600160a01b039788168152602081019690965285019390935293166060830152608082019290925260a081019190915260c001610247565b34801561047457600080fd5b506102a06104833660046133f3565b610f28565b34801561049457600080fd5b506102a06104a3366004612f82565b610fc4565b3480156104b457600080fd5b506104c86104c3366004613318565b610fe8565b6040516102479190613747565b6102a06104e33660046131e5565b61115e565b3480156104f457600080fd5b506102a06105033660046134d9565b611173565b34801561051457600080fd5b50610270610523366004612f82565b6001600160a01b03811660009081527f62c5b74fa86321b158cf52b86e58c6f8df25915113bba84ae36e7afe261046ae602052604081205460ff1661089b565b34801561056f57600080fd5b5061027061057e3660046133f3565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156105b557600080fd5b5061012e54610305906001600160a01b031681565b3480156105d657600080fd5b5061023d7f3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d881565b34801561060a57600080fd5b5061023d600081565b34801561061f57600080fd5b506102a061062e3660046131b4565b6111a2565b34801561063f57600080fd5b506102a061064e366004613080565b6112ca565b34801561065f57600080fd5b506102a061066e36600461325e565b611412565b34801561067f57600080fd5b5061069361068e366004612f82565b611558565b604080519485526020850193909352918301526060820152608001610247565b3480156106bf57600080fd5b506102a06106ce3660046133f3565b61160f565b3480156106df57600080fd5b506102706106ee366004612f9e565b6001600160a01b03918216600090815260ca6020908152604080832093909416825291909152205460ff1690565b34801561072857600080fd5b5061012f5461074190600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610247565b34801561076257600080fd5b506102a061077136600461314d565b611637565b34801561078257600080fd5b5061023d610791366004613557565b611880565b3480156107a257600080fd5b506102a06107b13660046134d9565b611905565b3480156107c257600080fd5b506102a06107d1366004613108565b611934565b60006001600160a01b0383166108595760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50600090815260c9602090815260408083206001600160a01b03949094168352929052205490565b600061088c82611a36565b8061089b575061089b82611ad1565b92915050565b6108ae600061057e611b0f565b6108fa5760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c792061646d696e000000000000000000000000000000000000000000006044820152606401610850565b61090381611b1e565b50565b61012d8054610914906138a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610940906138a5565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b505050505081565b606060cb80546109a4906138a5565b80601f01602080910402602001604051908101604052809291908181526020018280546109d0906138a5565b8015610a1d5780601f106109f257610100808354040283529160200191610a1d565b820191906000526020600020905b815481529060010190602001808311610a0057829003601f168201915b50505050509050919050565b61012f546001600160a01b031663f9715b8f604085901b6bffffffff0000000000000000163060601b175b84846040518463ffffffff1660e01b8152600401610a7493929190613792565b600060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b50505050505050565b8151835114610b225760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610850565b6001600160a01b038416610b865760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610850565b610b8e611b0f565b6001600160a01b0316856001600160a01b03161480610bb45750610bb4856106ee611b0f565b610c265760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610850565b6000610c30611b0f565b905060005b8451811015610dc5576000858281518110610c6057634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610c8c57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815260c9835260408082206001600160a01b038e168352909352919091205490915081811015610d205760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610850565b610d2a828261384b565b60c9600085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160c9600085815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610daa91906137ec565b9250508190555050505080610dbe9061390d565b9050610c35565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e1592919061375a565b60405180910390a4610e2b818787878787611b31565b505050505050565b600082815260fb6020526040902060010154610e5681610e51611b0f565b611ce6565b610e608383611d66565b505050565b61012e546040517fbb3bafd60000000000000000000000000000000000000000000000000000000081523060601b68010000000000000000176004820152600091829182918291829182916001600160a01b039091169063bb3bafd69060240160c06040518083038186803b158015610edd57600080fd5b505afa158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1591906132b9565b949b939a50919850965094509092509050565b610f30611b0f565b6001600160a01b0316816001600160a01b031614610fb65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610850565b610fc08282611e09565b5050565b610fcd81611eaa565b61090381604051806020016040528060008152506000611f28565b606081518351146110615760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610850565b6000835167ffffffffffffffff81111561108b57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156110b4578160200160208202803683370190505b50905060005b84518110156111565761111b8582815181106110e657634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061110e57634e487b7160e01b600052603260045260246000fd5b60200260200101516107d6565b82828151811061113b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261114f8161390d565b90506110ba565b509392505050565b61116782611eaa565b610fc082826001611f28565b61012f546001600160a01b031663c0ba9f55604085901b6bffffffff0000000000000000163060601b17610a54565b816001600160a01b03166111b4611b0f565b6001600160a01b031614156112315760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610850565b8060ca600061123e611b0f565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611282611b0f565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112be911515815260200190565b60405180910390a35050565b600054610100900460ff16806112e3575060005460ff16155b6113465760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015611368576000805461ffff19166101011790555b611370612120565b61137b60008761214b565b6113a57f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b264880958661214b565b83516113b99061012d906020870190612ded565b5061012e80546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff199283161790925561012f8054928516929091169190911790558015610e2b576000805461ff0019169055505050505050565b61143e7f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b2648809561057e611b0f565b6114795760405162461bcd60e51b815260206004820152600c60248201526b37b7363c9036b0b730b3b2b960a11b6044820152606401610850565b60015b61012f5463ffffffff600160a01b909104811690821611610aa25761012e546001600160a01b031663ad09608a604083901b6bffffffff0000000000000000163060601b176040516001600160e01b031960e084901b16815260048101919091526001600160a01b03808b166024830152604482018a9052606482018990528716608482015260a4810186905260c4810185905260e401600060405180830381600087803b15801561152d57600080fd5b505af1158015611541573d6000803e3d6000fd5b50505050808061155090613928565b91505061147c565b61012e546000908190819081906001600160a01b031663e24b0a2b680100000000000000003060601b176040516001600160e01b031960e084901b16815260048101919091526001600160a01b038816602482015260440160806040518083038186803b1580156115c857600080fd5b505afa1580156115dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611600919061348a565b93509350935093509193509193565b600082815260fb602052604090206001015461162d81610e51611b0f565b610e608383611e09565b6001600160a01b03841661169b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610850565b6116a3611b0f565b6001600160a01b0316856001600160a01b031614806116c957506116c9856106ee611b0f565b6117275760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610850565b6000611731611b0f565b905061175281878761174288612155565b61174b88612155565b5050505050565b600084815260c9602090815260408083206001600160a01b038a168452909152902054838110156117d85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610850565b6117e2848261384b565b600086815260c9602090815260408083206001600160a01b038c811685529252808320939093558816815290812080548692906118209084906137ec565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610aa28288888888886121ae565b60006118ae7f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b2648809561057e611b0f565b6118e95760405162461bcd60e51b815260206004820152600c60248201526b37b7363c9036b0b730b3b2b960a11b6044820152606401610850565b6118fe6103bc6118f7611b0f565b85856122b9565b9392505050565b61012f546001600160a01b031663b85f8ca9604085901b6bffffffff0000000000000000163060601b17610a54565b6001600160a01b0383166119985760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610850565b6119a0611b0f565b6001600160a01b0316846001600160a01b031614806119c657506119c6846106ee611b0f565b611a245760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610850565b611a308484848461235b565b50505050565b60006001600160e01b031982167fd9b67a26000000000000000000000000000000000000000000000000000000001480611a9957506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061089b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461089b565b60006001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061089b575061089b82611a36565b6000611b196124a3565b905090565b8051610fc09060cb906020840190612ded565b6001600160a01b0384163b15610e2b5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611b7590899089908890889088906004016136a6565b602060405180830381600087803b158015611b8f57600080fd5b505af1925050508015611bbf575060408051601f3d908101601f19168201909252611bbc91810190613433565b60015b611c7557611bcb613978565b806308c379a01415611c055750611be061398f565b80611beb5750611c07565b8060405162461bcd60e51b8152600401610850919061377f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610850565b6001600160e01b0319811663bc197c8160e01b14610aa25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610850565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610fc057611d24816001600160a01b03166014612503565b611d2f836020612503565b604051602001611d40929190613625565b60408051601f198184030181529082905262461bcd60e51b82526108509160040161377f565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610fc057600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611dc5611b0f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1615610fc057600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19169055611e66611b0f565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b3360009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604090205460ff166109035760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c792041646d696e000000000000000000000000000000000000000000006044820152606401610850565b6000611f5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611f668461272a565b600083511180611f735750815b15611f8457611f8284846127ec565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661174b57805460ff191660011781556040516001600160a01b038316602482015261203190869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe6000000000000000000000000000000000000000000000000000000001790526127ec565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146120dc5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610850565b6120e58561272a565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050505050565b612141604051806060016040528060338152602001613a6c603391396128ee565b6121496129ba565b565b610fc08282611d66565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061219d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610e2b5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906121f29089908990889088908890600401613704565b602060405180830381600087803b15801561220c57600080fd5b505af192505050801561223c575060408051601f3d908101601f1916820190925261223991810190613433565b60015b61224857611bcb613978565b6001600160e01b0319811663f23a6e6160e01b14610aa25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610850565b61012f546000906122f59085906122de90600160a01b900463ffffffff166001613804565b63ffffffff168567ffffffffffffffff16856129c2565b61012f5461231190600160a01b900463ffffffff166001613804565b61012f80547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff16600160a01b63ffffffff9384168102919091179182905590041690509392505050565b600082815260c9602090815260408083206001600160a01b0388168452909152902054818110156123e15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610850565b6123eb828261384b565b600084815260c9602090815260408083206001600160a01b038a811685529252808320939093558616815290812080548492906124299084906137ec565b9091555060009050612439611b0f565b9050846001600160a01b0316866001600160a01b0316826001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051612493929190918252602082015260400190565b60405180910390a4505050505050565b60006124e9336001600160a01b03811660009081527f62c5b74fa86321b158cf52b86e58c6f8df25915113bba84ae36e7afe261046ae602052604081205460ff1661089b565b156124fb575060131936013560601c90565b503390565b90565b6060600061251283600261382c565b61251d9060026137ec565b67ffffffffffffffff81111561254357634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561256d576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106125b257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061260b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061262f84600261382c565b61263a9060016137ec565b90505b60018111156126db577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061268957634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106126ad57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936126d48161388e565b905061263d565b5083156118fe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610850565b803b61279e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610850565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b6128625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610850565b600080846001600160a01b03168460405161287d9190613609565b600060405180830381855af49150503d80600081146128b8576040519150601f19603f3d011682016040523d82523d6000602084013e6128bd565b606091505b50915091506128e58282604051806060016040528060278152602001613a4560279139612aec565b95945050505050565b600054610100900460ff1680612907575060005460ff16155b61296a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff1615801561298c576000805461ffff19166101011790555b612994612b25565b61299c612b25565b6129a582612bd7565b8015610fc0576000805461ff00191690555050565b612149612c7e565b6001600160a01b038416612a3e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610850565b6000612a48611b0f565b9050612a5a8160008761174288612155565b600084815260c9602090815260408083206001600160a01b038916845290915281208054859290612a8c9084906137ec565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461174b816000878787876121ae565b60608315612afb5750816118fe565b825115612b0b5782518084602001fd5b8160405162461bcd60e51b8152600401610850919061377f565b600054610100900460ff1680612b3e575060005460ff16155b612ba15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612bc3576000805461ffff19166101011790555b8015610903576000805461ff001916905550565b600054610100900460ff1680612bf0575060005460ff16155b612c535760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612c75576000805461ffff19166101011790555b6129a582611b1e565b612c86612c99565b612c8e612d47565b61214960003361214b565b600054610100900460ff1680612cb2575060005460ff16155b612d155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612d37576000805461ffff19166101011790555b612d3f612b25565b612bc3612b25565b600054610100900460ff1680612d60575060005460ff16155b612dc35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612de5576000805461ffff19166101011790555b612d37612b25565b828054612df9906138a5565b90600052602060002090601f016020900481019282612e1b5760008555612e61565b82601f10612e3457805160ff1916838001178555612e61565b82800160010185558215612e61579182015b82811115612e61578251825591602001919060010190612e46565b50612e6d929150612e71565b5090565b5b80821115612e6d5760008155600101612e72565b600082601f830112612e96578081fd5b81356020612ea3826137c8565b604051612eb082826138e0565b8381528281019150858301600585901b87018401881015612ecf578586fd5b855b85811015612eed57813584529284019290840190600101612ed1565b5090979650505050505050565b600082601f830112612f0a578081fd5b813567ffffffffffffffff811115612f2457612f24613962565b604051612f3b601f8301601f1916602001826138e0565b818152846020838601011115612f4f578283fd5b816020850160208301379081016020019190915292915050565b803563ffffffff81168114612f7d57600080fd5b919050565b600060208284031215612f93578081fd5b81356118fe81613a19565b60008060408385031215612fb0578081fd5b8235612fbb81613a19565b91506020830135612fcb81613a19565b809150509250929050565b600080600080600060a08688031215612fed578081fd5b8535612ff881613a19565b9450602086013561300881613a19565b9350604086013567ffffffffffffffff80821115613024578283fd5b61303089838a01612e86565b94506060880135915080821115613045578283fd5b61305189838a01612e86565b93506080880135915080821115613066578283fd5b5061307388828901612efa565b9150509295509295909350565b600080600080600060a08688031215613097578081fd5b85356130a281613a19565b945060208601356130b281613a19565b9350604086013567ffffffffffffffff8111156130cd578182fd5b6130d988828901612efa565b93505060608601356130ea81613a19565b915060808601356130fa81613a19565b809150509295509295909350565b6000806000806080858703121561311d578182fd5b843561312881613a19565b9350602085013561313881613a19565b93969395505050506040820135916060013590565b600080600080600060a08688031215613164578283fd5b853561316f81613a19565b9450602086013561317f81613a19565b93506040860135925060608601359150608086013567ffffffffffffffff8111156131a8578182fd5b61307388828901612efa565b600080604083850312156131c6578182fd5b82356131d181613a19565b915060208301358015158114612fcb578182fd5b600080604083850312156131f7578182fd5b823561320281613a19565b9150602083013567ffffffffffffffff81111561321d578182fd5b61322985828601612efa565b9150509250929050565b60008060408385031215613245578182fd5b823561325081613a19565b946020939093013593505050565b60008060008060008060c08789031215613276578384fd5b863561328181613a19565b95506020870135945060408701359350606087013561329f81613a19565b9598949750929560808101359460a0909101359350915050565b60008060008060008060c087890312156132d1578384fd5b86516132dc81613a19565b80965050602087015194506040870151935060608701516132fc81613a19565b809350506080870151915060a087015190509295509295509295565b6000806040838503121561332a578182fd5b823567ffffffffffffffff80821115613341578384fd5b818501915085601f830112613354578384fd5b81356020613361826137c8565b60405161336e82826138e0565b8381528281019150858301600585901b870184018b101561338d578889fd5b8896505b848710156133b85780356133a481613a19565b835260019690960195918301918301613391565b50965050860135925050808211156133ce578283fd5b5061322985828601612e86565b6000602082840312156133ec578081fd5b5035919050565b60008060408385031215613405578182fd5b823591506020830135612fcb81613a19565b600060208284031215613428578081fd5b81356118fe81613a2e565b600060208284031215613444578081fd5b81516118fe81613a2e565b600060208284031215613460578081fd5b813567ffffffffffffffff811115613476578182fd5b61348284828501612efa565b949350505050565b6000806000806080858703121561349f578182fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156134d0578081fd5b6118fe82612f69565b6000806000604084860312156134ed578081fd5b6134f684612f69565b9250602084013567ffffffffffffffff80821115613512578283fd5b818601915086601f830112613525578283fd5b813581811115613533578384fd5b876020828501011115613544578384fd5b6020830194508093505050509250925092565b60008060408385031215613569578182fd5b823567ffffffffffffffff8082168214613581578384fd5b90925060208401359080821115613596578283fd5b5061322985828601612efa565b6000815180845260208085019450808401835b838110156135d2578151875295820195908201906001016135b6565b509495945050505050565b600081518084526135f5816020860160208601613862565b601f01601f19169290920160200192915050565b6000825161361b818460208701613862565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161365d816017850160208801613862565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161369a816028840160208801613862565b01602801949350505050565b60006001600160a01b03808816835280871660208401525060a060408301526136d260a08301866135a3565b82810360608401526136e481866135a3565b905082810360808401526136f881856135dd565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261373c60a08301846135dd565b979650505050505050565b6020815260006118fe60208301846135a3565b60408152600061376d60408301856135a3565b82810360208401526128e581856135a3565b6020815260006118fe60208301846135dd565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b600067ffffffffffffffff8211156137e2576137e2613962565b5060051b60200190565b600082198211156137ff576137ff61394c565b500190565b600063ffffffff8083168185168083038211156138235761382361394c565b01949350505050565b60008160001904831182151516156138465761384661394c565b500290565b60008282101561385d5761385d61394c565b500390565b60005b8381101561387d578181015183820152602001613865565b83811115611a305750506000910152565b60008161389d5761389d61394c565b506000190190565b600181811c908216806138b957607f821691505b602082108114156138da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561390657613906613962565b6040525050565b60006000198214156139215761392161394c565b5060010190565b600063ffffffff808316818114156139425761394261394c565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561250057600481823e5160e01c90565b600060443d101561399d5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156139cd57505050505090565b82850191508151818111156139e55750505050505090565b843d87010160208285010111156139ff5750505050505090565b613a0e602082860101876138e0565b509095945050505050565b6001600160a01b038116811461090357600080fd5b6001600160e01b03198116811461090357600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c656468747470733a2f2f6170692e66726565706f72742e636572652e6e6574776f726b2f657263313135352f7b69647d2e6a736f6ea26469706673582212202a8b40fb30e66a7dda805eeb1e0f6b48385f718bc954a8d2315fb176c6d3826764736f6c63430008040033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220388a82ade287baa4a97f83c755c8cfcdc4f8b469e6583a227a89f8fe3f4f2a6464736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063572b6c051161008a578063a217fddf11610059578063a217fddf1461032d578063b577fd7314610342578063caff99ce14610362578063d547741f1461039657600080fd5b8063572b6c051461023857806391d14854146102935780639470ad85146102d95780639a86e8ce146102f957600080fd5b806336568abe116100c657806336568abe146101c55780633659cfe6146101e5578063485cc955146102055780634f1ef2861461022557600080fd5b806301ffc9a7146100f857806311ec58681461012d578063248a9ca3146101655780632f2ff15d146101a3575b600080fd5b34801561010457600080fd5b506101186101133660046115be565b6103b6565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b5060fd5461014d906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b34801561017157600080fd5b50610195610180366004611577565b600090815260c9602052604090206001015490565b604051908152602001610124565b3480156101af57600080fd5b506101c36101be36600461158f565b61044f565b005b3480156101d157600080fd5b506101c36101e036600461158f565b610481565b3480156101f157600080fd5b506101c36102003660046114e8565b610522565b34801561021157600080fd5b506101c36102203660046115fe565b610549565b6101c3610233366004611504565b610642565b34801561024457600080fd5b506101186102533660046114e8565b6001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610449565b34801561029f57600080fd5b506101186102ae36600461158f565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156102e557600080fd5b5060fc5461014d906001600160a01b031681565b34801561030557600080fd5b506101957f3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d881565b34801561033957600080fd5b50610195600081565b34801561034e57600080fd5b5061014d61035d366004611565565b610657565b34801561036e57600080fd5b506101957fe926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c81565b3480156103a257600080fd5b506101c36103b136600461158f565b610932565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061044957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600082815260c960205260409020600101546104728161046d61095a565b6109b7565b61047c8383610a37565b505050565b61048961095a565b6001600160a01b0316816001600160a01b0316146105145760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b61051e8282610ada565b5050565b61052b81610b7b565b61054681604051806020016040528060008152506000610bf9565b50565b600054610100900460ff1680610562575060005460ff16155b6105c55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156105e7576000805461ffff19166101011790555b6105ef610df2565b60fc80546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff199283161790925560fd805492851692909116919091179055801561047c576000805461ff0019169055505050565b61064b82610b7b565b61051e82826001610bf9565b60006106857fe926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c6102ae61095a565b6106d15760405162461bcd60e51b815260206004820152601760248201527f6f6e6c7920636f6c6c656374696f6e2063726561746f72000000000000000000604482015260640161050b565b6001600160a01b0383166107275760405162461bcd60e51b815260206004820152601460248201527f7a65726f20616464726573732063726561746f72000000000000000000000000604482015260640161050b565b60006001600160a01b031660fb836040516107429190611657565b908152604051908190036020019020546001600160a01b0316146107a85760405162461bcd60e51b815260206004820152601e60248201527f636f6c6c656374696f6e206e616d6520616c7265616479206578697374730000604482015260640161050b565b60006040516107b690611465565b604051809103906000f0801580156107d2573d6000803e3d6000fd5b5060fc5460fd546040517fac4a0fb60000000000000000000000000000000000000000000000000000000081529293506001600160a01b038085169363ac4a0fb69361082d9330938b938b93821692909116906004016116f4565b600060405180830381600087803b15801561084757600080fd5b505af115801561085b573d6000803e3d6000fd5b505060ff8054600090815260fe60205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038616179055546108a492509050600161174c565b60ff55604051819060fb906108ba908690611657565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19909116179055908216907f2660dd916ec25bcad9a3dd62c721e438ec0e975817265c1e03c2639b24ac700790610923908690611739565b60405180910390a29392505050565b600082815260c960205260409020600101546109508161046d61095a565b61047c8383610ada565b60006109a0336001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610449565b156109b2575060131936013560601c90565b503390565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661051e576109f5816001600160a01b03166014610dfc565b610a00836020610dfc565b604051602001610a11929190611673565b60408051601f198184030181529082905262461bcd60e51b825261050b91600401611739565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661051e57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610a9661095a565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff161561051e57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610b3761095a565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b3360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604090205460ff166105465760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c792041646d696e00000000000000000000000000000000000000000000604482015260640161050b565b6000610c2c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050610c378461102a565b600083511180610c445750815b15610c5557610c5384846110ec565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610deb57805460ff191660011781556040516001600160a01b0383166024820152610d0290869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe6000000000000000000000000000000000000000000000000000000001790526110ec565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03838116911614610dad5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f7572746865722075706772616465730000000000000000000000000000000000606482015260840161050b565b610db68561102a565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610dfa6111ee565b565b60606000610e0b836002611764565b610e1690600261174c565b67ffffffffffffffff811115610e3c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e66576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610eab57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f0457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610f28846002611764565b610f3390600161174c565b90505b6001811115610fd4577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610f8257634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610fa657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610fcd816117b3565b9050610f36565b5083156110235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161050b565b9392505050565b803b61109e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161050b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b6111625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161050b565b600080846001600160a01b03168460405161117d9190611657565b600060405180830381855af49150503d80600081146111b8576040519150601f19603f3d011682016040523d82523d6000602084013e6111bd565b606091505b50915091506111e5828260405180606001604052806027815260200161530060279139611209565b95945050505050565b6111f6611242565b6111fe611304565b610dfa6000336113aa565b60608315611218575081611023565b8251156112285782518084602001fd5b8160405162461bcd60e51b815260040161050b9190611739565b600054610100900460ff168061125b575060005460ff16155b6112be5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156112e0576000805461ffff19166101011790555b6112e86113b4565b6112f06113b4565b8015610546576000805461ff001916905550565b600054610100900460ff168061131d575060005460ff16155b6113805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156113a2576000805461ffff19166101011790555b6112e06113b4565b61051e8282610a37565b600054610100900460ff16806113cd575060005460ff16155b6114305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054610100900460ff161580156112f0576000805461ffff19166101011790558015610546576000805461ff001916905550565b613af48061180c83390190565b600067ffffffffffffffff8084111561148d5761148d6117e0565b604051601f8501601f19908116603f011681019082821181831017156114b5576114b56117e0565b816040528093508581528686860111156114ce57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156114f9578081fd5b8135611023816117f6565b60008060408385031215611516578081fd5b8235611521816117f6565b9150602083013567ffffffffffffffff81111561153c578182fd5b8301601f8101851361154c578182fd5b61155b85823560208401611472565b9150509250929050565b60008060408385031215611516578182fd5b600060208284031215611588578081fd5b5035919050565b600080604083850312156115a1578182fd5b8235915060208301356115b3816117f6565b809150509250929050565b6000602082840312156115cf578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611023578182fd5b60008060408385031215611610578182fd5b823561161b816117f6565b915060208301356115b3816117f6565b60008151808452611643816020860160208601611783565b601f01601f19169290920160200192915050565b60008251611669818460208701611783565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516116ab816017850160208801611783565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516116e8816028840160208801611783565b01602801949350505050565b60006001600160a01b038088168352808716602084015260a0604084015261171f60a084018761162b565b948116606084015292909216608090910152509392505050565b602081526000611023602083018461162b565b6000821982111561175f5761175f6117ca565b500190565b600081600019048311821515161561177e5761177e6117ca565b500290565b60005b8381101561179e578181015183820152602001611786565b838111156117ad576000848401525b50505050565b6000816117c2576117c26117ca565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461054657600080fdfe608060405234801561001057600080fd5b50613ad4806100206000396000f3fe6080604052600436106102185760003560e01c806354ea53571161011d578063aea0ffc3116100b0578063eb08ab281161007f578063f4e2efd011610064578063f4e2efd014610776578063f9d5727b14610796578063fe99049a146107b657600080fd5b8063eb08ab281461071c578063f242432a1461075657600080fd5b8063aea0ffc314610653578063c8274abe14610673578063d547741f146106b3578063e985e9c5146106d357600080fd5b80639a86e8ce116100ec5780639a86e8ce146105ca578063a217fddf146105fe578063a22cb46514610613578063ac4a0fb61461063357600080fd5b806354ea5357146104e8578063572b6c051461050857806391d14854146105635780639470ad85146105a957600080fd5b8063248a9ca3116101b057806333df048e1161017f5780633659cfe6116101645780633659cfe6146104885780634e1273f4146104a85780634f1ef286146104d557600080fd5b806333df048e1461041557806336568abe1461046857600080fd5b8063248a9ca314610371578063288809c7146103a15780632eb2c2d6146103d55780632f2ff15d146103f557600080fd5b80630e89341c116101ec5780630e89341c146102c457806311ec5868146102e457806321101e1e1461031d5780632210023d1461033d57600080fd5b8062fdd58e1461021d57806301ffc9a71461025057806302fe53051461028057806306fdde03146102a2575b600080fd5b34801561022957600080fd5b5061023d610238366004613233565b6107d6565b6040519081526020015b60405180910390f35b34801561025c57600080fd5b5061027061026b366004613417565b610881565b6040519015158152602001610247565b34801561028c57600080fd5b506102a061029b36600461344f565b6108a1565b005b3480156102ae57600080fd5b506102b7610906565b604051610247919061377f565b3480156102d057600080fd5b506102b76102df3660046133db565b610995565b3480156102f057600080fd5b5061012f54610305906001600160a01b031681565b6040516001600160a01b039091168152602001610247565b34801561032957600080fd5b506102a06103383660046134d9565b610a29565b34801561034957600080fd5b5061023d7f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b2648809581565b34801561037d57600080fd5b5061023d61038c3660046133db565b600090815260fb602052604090206001015490565b3480156103ad57600080fd5b5061023d6103bc3660046134bf565b60401b6bffffffff0000000000000000163060601b1790565b3480156103e157600080fd5b506102a06103f0366004612fd6565b610aab565b34801561040157600080fd5b506102a06104103660046133f3565b610e33565b34801561042157600080fd5b5061042a610e65565b604080516001600160a01b039788168152602081019690965285019390935293166060830152608082019290925260a081019190915260c001610247565b34801561047457600080fd5b506102a06104833660046133f3565b610f28565b34801561049457600080fd5b506102a06104a3366004612f82565b610fc4565b3480156104b457600080fd5b506104c86104c3366004613318565b610fe8565b6040516102479190613747565b6102a06104e33660046131e5565b61115e565b3480156104f457600080fd5b506102a06105033660046134d9565b611173565b34801561051457600080fd5b50610270610523366004612f82565b6001600160a01b03811660009081527f62c5b74fa86321b158cf52b86e58c6f8df25915113bba84ae36e7afe261046ae602052604081205460ff1661089b565b34801561056f57600080fd5b5061027061057e3660046133f3565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156105b557600080fd5b5061012e54610305906001600160a01b031681565b3480156105d657600080fd5b5061023d7f3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d881565b34801561060a57600080fd5b5061023d600081565b34801561061f57600080fd5b506102a061062e3660046131b4565b6111a2565b34801561063f57600080fd5b506102a061064e366004613080565b6112ca565b34801561065f57600080fd5b506102a061066e36600461325e565b611412565b34801561067f57600080fd5b5061069361068e366004612f82565b611558565b604080519485526020850193909352918301526060820152608001610247565b3480156106bf57600080fd5b506102a06106ce3660046133f3565b61160f565b3480156106df57600080fd5b506102706106ee366004612f9e565b6001600160a01b03918216600090815260ca6020908152604080832093909416825291909152205460ff1690565b34801561072857600080fd5b5061012f5461074190600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610247565b34801561076257600080fd5b506102a061077136600461314d565b611637565b34801561078257600080fd5b5061023d610791366004613557565b611880565b3480156107a257600080fd5b506102a06107b13660046134d9565b611905565b3480156107c257600080fd5b506102a06107d1366004613108565b611934565b60006001600160a01b0383166108595760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50600090815260c9602090815260408083206001600160a01b03949094168352929052205490565b600061088c82611a36565b8061089b575061089b82611ad1565b92915050565b6108ae600061057e611b0f565b6108fa5760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c792061646d696e000000000000000000000000000000000000000000006044820152606401610850565b61090381611b1e565b50565b61012d8054610914906138a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610940906138a5565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b505050505081565b606060cb80546109a4906138a5565b80601f01602080910402602001604051908101604052809291908181526020018280546109d0906138a5565b8015610a1d5780601f106109f257610100808354040283529160200191610a1d565b820191906000526020600020905b815481529060010190602001808311610a0057829003601f168201915b50505050509050919050565b61012f546001600160a01b031663f9715b8f604085901b6bffffffff0000000000000000163060601b175b84846040518463ffffffff1660e01b8152600401610a7493929190613792565b600060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b50505050505050565b8151835114610b225760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610850565b6001600160a01b038416610b865760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610850565b610b8e611b0f565b6001600160a01b0316856001600160a01b03161480610bb45750610bb4856106ee611b0f565b610c265760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610850565b6000610c30611b0f565b905060005b8451811015610dc5576000858281518110610c6057634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610c8c57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815260c9835260408082206001600160a01b038e168352909352919091205490915081811015610d205760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610850565b610d2a828261384b565b60c9600085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160c9600085815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610daa91906137ec565b9250508190555050505080610dbe9061390d565b9050610c35565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e1592919061375a565b60405180910390a4610e2b818787878787611b31565b505050505050565b600082815260fb6020526040902060010154610e5681610e51611b0f565b611ce6565b610e608383611d66565b505050565b61012e546040517fbb3bafd60000000000000000000000000000000000000000000000000000000081523060601b68010000000000000000176004820152600091829182918291829182916001600160a01b039091169063bb3bafd69060240160c06040518083038186803b158015610edd57600080fd5b505afa158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1591906132b9565b949b939a50919850965094509092509050565b610f30611b0f565b6001600160a01b0316816001600160a01b031614610fb65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610850565b610fc08282611e09565b5050565b610fcd81611eaa565b61090381604051806020016040528060008152506000611f28565b606081518351146110615760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610850565b6000835167ffffffffffffffff81111561108b57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156110b4578160200160208202803683370190505b50905060005b84518110156111565761111b8582815181106110e657634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061110e57634e487b7160e01b600052603260045260246000fd5b60200260200101516107d6565b82828151811061113b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261114f8161390d565b90506110ba565b509392505050565b61116782611eaa565b610fc082826001611f28565b61012f546001600160a01b031663c0ba9f55604085901b6bffffffff0000000000000000163060601b17610a54565b816001600160a01b03166111b4611b0f565b6001600160a01b031614156112315760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610850565b8060ca600061123e611b0f565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611282611b0f565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112be911515815260200190565b60405180910390a35050565b600054610100900460ff16806112e3575060005460ff16155b6113465760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015611368576000805461ffff19166101011790555b611370612120565b61137b60008761214b565b6113a57f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b264880958661214b565b83516113b99061012d906020870190612ded565b5061012e80546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff199283161790925561012f8054928516929091169190911790558015610e2b576000805461ff0019169055505050505050565b61143e7f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b2648809561057e611b0f565b6114795760405162461bcd60e51b815260206004820152600c60248201526b37b7363c9036b0b730b3b2b960a11b6044820152606401610850565b60015b61012f5463ffffffff600160a01b909104811690821611610aa25761012e546001600160a01b031663ad09608a604083901b6bffffffff0000000000000000163060601b176040516001600160e01b031960e084901b16815260048101919091526001600160a01b03808b166024830152604482018a9052606482018990528716608482015260a4810186905260c4810185905260e401600060405180830381600087803b15801561152d57600080fd5b505af1158015611541573d6000803e3d6000fd5b50505050808061155090613928565b91505061147c565b61012e546000908190819081906001600160a01b031663e24b0a2b680100000000000000003060601b176040516001600160e01b031960e084901b16815260048101919091526001600160a01b038816602482015260440160806040518083038186803b1580156115c857600080fd5b505afa1580156115dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611600919061348a565b93509350935093509193509193565b600082815260fb602052604090206001015461162d81610e51611b0f565b610e608383611e09565b6001600160a01b03841661169b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610850565b6116a3611b0f565b6001600160a01b0316856001600160a01b031614806116c957506116c9856106ee611b0f565b6117275760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610850565b6000611731611b0f565b905061175281878761174288612155565b61174b88612155565b5050505050565b600084815260c9602090815260408083206001600160a01b038a168452909152902054838110156117d85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610850565b6117e2848261384b565b600086815260c9602090815260408083206001600160a01b038c811685529252808320939093558816815290812080548692906118209084906137ec565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610aa28288888888886121ae565b60006118ae7f592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b2648809561057e611b0f565b6118e95760405162461bcd60e51b815260206004820152600c60248201526b37b7363c9036b0b730b3b2b960a11b6044820152606401610850565b6118fe6103bc6118f7611b0f565b85856122b9565b9392505050565b61012f546001600160a01b031663b85f8ca9604085901b6bffffffff0000000000000000163060601b17610a54565b6001600160a01b0383166119985760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610850565b6119a0611b0f565b6001600160a01b0316846001600160a01b031614806119c657506119c6846106ee611b0f565b611a245760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610850565b611a308484848461235b565b50505050565b60006001600160e01b031982167fd9b67a26000000000000000000000000000000000000000000000000000000001480611a9957506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061089b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461089b565b60006001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061089b575061089b82611a36565b6000611b196124a3565b905090565b8051610fc09060cb906020840190612ded565b6001600160a01b0384163b15610e2b5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611b7590899089908890889088906004016136a6565b602060405180830381600087803b158015611b8f57600080fd5b505af1925050508015611bbf575060408051601f3d908101601f19168201909252611bbc91810190613433565b60015b611c7557611bcb613978565b806308c379a01415611c055750611be061398f565b80611beb5750611c07565b8060405162461bcd60e51b8152600401610850919061377f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610850565b6001600160e01b0319811663bc197c8160e01b14610aa25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610850565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610fc057611d24816001600160a01b03166014612503565b611d2f836020612503565b604051602001611d40929190613625565b60408051601f198184030181529082905262461bcd60e51b82526108509160040161377f565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610fc057600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611dc5611b0f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1615610fc057600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19169055611e66611b0f565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b3360009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604090205460ff166109035760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c792041646d696e000000000000000000000000000000000000000000006044820152606401610850565b6000611f5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611f668461272a565b600083511180611f735750815b15611f8457611f8284846127ec565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661174b57805460ff191660011781556040516001600160a01b038316602482015261203190869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe6000000000000000000000000000000000000000000000000000000001790526127ec565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146120dc5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610850565b6120e58561272a565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050505050565b612141604051806060016040528060338152602001613a6c603391396128ee565b6121496129ba565b565b610fc08282611d66565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061219d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610e2b5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906121f29089908990889088908890600401613704565b602060405180830381600087803b15801561220c57600080fd5b505af192505050801561223c575060408051601f3d908101601f1916820190925261223991810190613433565b60015b61224857611bcb613978565b6001600160e01b0319811663f23a6e6160e01b14610aa25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610850565b61012f546000906122f59085906122de90600160a01b900463ffffffff166001613804565b63ffffffff168567ffffffffffffffff16856129c2565b61012f5461231190600160a01b900463ffffffff166001613804565b61012f80547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff16600160a01b63ffffffff9384168102919091179182905590041690509392505050565b600082815260c9602090815260408083206001600160a01b0388168452909152902054818110156123e15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610850565b6123eb828261384b565b600084815260c9602090815260408083206001600160a01b038a811685529252808320939093558616815290812080548492906124299084906137ec565b9091555060009050612439611b0f565b9050846001600160a01b0316866001600160a01b0316826001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051612493929190918252602082015260400190565b60405180910390a4505050505050565b60006124e9336001600160a01b03811660009081527f62c5b74fa86321b158cf52b86e58c6f8df25915113bba84ae36e7afe261046ae602052604081205460ff1661089b565b156124fb575060131936013560601c90565b503390565b90565b6060600061251283600261382c565b61251d9060026137ec565b67ffffffffffffffff81111561254357634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561256d576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106125b257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061260b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061262f84600261382c565b61263a9060016137ec565b90505b60018111156126db577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061268957634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106126ad57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936126d48161388e565b905061263d565b5083156118fe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610850565b803b61279e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610850565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b6128625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610850565b600080846001600160a01b03168460405161287d9190613609565b600060405180830381855af49150503d80600081146128b8576040519150601f19603f3d011682016040523d82523d6000602084013e6128bd565b606091505b50915091506128e58282604051806060016040528060278152602001613a4560279139612aec565b95945050505050565b600054610100900460ff1680612907575060005460ff16155b61296a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff1615801561298c576000805461ffff19166101011790555b612994612b25565b61299c612b25565b6129a582612bd7565b8015610fc0576000805461ff00191690555050565b612149612c7e565b6001600160a01b038416612a3e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610850565b6000612a48611b0f565b9050612a5a8160008761174288612155565b600084815260c9602090815260408083206001600160a01b038916845290915281208054859290612a8c9084906137ec565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461174b816000878787876121ae565b60608315612afb5750816118fe565b825115612b0b5782518084602001fd5b8160405162461bcd60e51b8152600401610850919061377f565b600054610100900460ff1680612b3e575060005460ff16155b612ba15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612bc3576000805461ffff19166101011790555b8015610903576000805461ff001916905550565b600054610100900460ff1680612bf0575060005460ff16155b612c535760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612c75576000805461ffff19166101011790555b6129a582611b1e565b612c86612c99565b612c8e612d47565b61214960003361214b565b600054610100900460ff1680612cb2575060005460ff16155b612d155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612d37576000805461ffff19166101011790555b612d3f612b25565b612bc3612b25565b600054610100900460ff1680612d60575060005460ff16155b612dc35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610850565b600054610100900460ff16158015612de5576000805461ffff19166101011790555b612d37612b25565b828054612df9906138a5565b90600052602060002090601f016020900481019282612e1b5760008555612e61565b82601f10612e3457805160ff1916838001178555612e61565b82800160010185558215612e61579182015b82811115612e61578251825591602001919060010190612e46565b50612e6d929150612e71565b5090565b5b80821115612e6d5760008155600101612e72565b600082601f830112612e96578081fd5b81356020612ea3826137c8565b604051612eb082826138e0565b8381528281019150858301600585901b87018401881015612ecf578586fd5b855b85811015612eed57813584529284019290840190600101612ed1565b5090979650505050505050565b600082601f830112612f0a578081fd5b813567ffffffffffffffff811115612f2457612f24613962565b604051612f3b601f8301601f1916602001826138e0565b818152846020838601011115612f4f578283fd5b816020850160208301379081016020019190915292915050565b803563ffffffff81168114612f7d57600080fd5b919050565b600060208284031215612f93578081fd5b81356118fe81613a19565b60008060408385031215612fb0578081fd5b8235612fbb81613a19565b91506020830135612fcb81613a19565b809150509250929050565b600080600080600060a08688031215612fed578081fd5b8535612ff881613a19565b9450602086013561300881613a19565b9350604086013567ffffffffffffffff80821115613024578283fd5b61303089838a01612e86565b94506060880135915080821115613045578283fd5b61305189838a01612e86565b93506080880135915080821115613066578283fd5b5061307388828901612efa565b9150509295509295909350565b600080600080600060a08688031215613097578081fd5b85356130a281613a19565b945060208601356130b281613a19565b9350604086013567ffffffffffffffff8111156130cd578182fd5b6130d988828901612efa565b93505060608601356130ea81613a19565b915060808601356130fa81613a19565b809150509295509295909350565b6000806000806080858703121561311d578182fd5b843561312881613a19565b9350602085013561313881613a19565b93969395505050506040820135916060013590565b600080600080600060a08688031215613164578283fd5b853561316f81613a19565b9450602086013561317f81613a19565b93506040860135925060608601359150608086013567ffffffffffffffff8111156131a8578182fd5b61307388828901612efa565b600080604083850312156131c6578182fd5b82356131d181613a19565b915060208301358015158114612fcb578182fd5b600080604083850312156131f7578182fd5b823561320281613a19565b9150602083013567ffffffffffffffff81111561321d578182fd5b61322985828601612efa565b9150509250929050565b60008060408385031215613245578182fd5b823561325081613a19565b946020939093013593505050565b60008060008060008060c08789031215613276578384fd5b863561328181613a19565b95506020870135945060408701359350606087013561329f81613a19565b9598949750929560808101359460a0909101359350915050565b60008060008060008060c087890312156132d1578384fd5b86516132dc81613a19565b80965050602087015194506040870151935060608701516132fc81613a19565b809350506080870151915060a087015190509295509295509295565b6000806040838503121561332a578182fd5b823567ffffffffffffffff80821115613341578384fd5b818501915085601f830112613354578384fd5b81356020613361826137c8565b60405161336e82826138e0565b8381528281019150858301600585901b870184018b101561338d578889fd5b8896505b848710156133b85780356133a481613a19565b835260019690960195918301918301613391565b50965050860135925050808211156133ce578283fd5b5061322985828601612e86565b6000602082840312156133ec578081fd5b5035919050565b60008060408385031215613405578182fd5b823591506020830135612fcb81613a19565b600060208284031215613428578081fd5b81356118fe81613a2e565b600060208284031215613444578081fd5b81516118fe81613a2e565b600060208284031215613460578081fd5b813567ffffffffffffffff811115613476578182fd5b61348284828501612efa565b949350505050565b6000806000806080858703121561349f578182fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156134d0578081fd5b6118fe82612f69565b6000806000604084860312156134ed578081fd5b6134f684612f69565b9250602084013567ffffffffffffffff80821115613512578283fd5b818601915086601f830112613525578283fd5b813581811115613533578384fd5b876020828501011115613544578384fd5b6020830194508093505050509250925092565b60008060408385031215613569578182fd5b823567ffffffffffffffff8082168214613581578384fd5b90925060208401359080821115613596578283fd5b5061322985828601612efa565b6000815180845260208085019450808401835b838110156135d2578151875295820195908201906001016135b6565b509495945050505050565b600081518084526135f5816020860160208601613862565b601f01601f19169290920160200192915050565b6000825161361b818460208701613862565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161365d816017850160208801613862565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161369a816028840160208801613862565b01602801949350505050565b60006001600160a01b03808816835280871660208401525060a060408301526136d260a08301866135a3565b82810360608401526136e481866135a3565b905082810360808401526136f881856135dd565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261373c60a08301846135dd565b979650505050505050565b6020815260006118fe60208301846135a3565b60408152600061376d60408301856135a3565b82810360208401526128e581856135a3565b6020815260006118fe60208301846135dd565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b600067ffffffffffffffff8211156137e2576137e2613962565b5060051b60200190565b600082198211156137ff576137ff61394c565b500190565b600063ffffffff8083168185168083038211156138235761382361394c565b01949350505050565b60008160001904831182151516156138465761384661394c565b500290565b60008282101561385d5761385d61394c565b500390565b60005b8381101561387d578181015183820152602001613865565b83811115611a305750506000910152565b60008161389d5761389d61394c565b506000190190565b600181811c908216806138b957607f821691505b602082108114156138da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561390657613906613962565b6040525050565b60006000198214156139215761392161394c565b5060010190565b600063ffffffff808316818114156139425761394261394c565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561250057600481823e5160e01c90565b600060443d101561399d5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156139cd57505050505090565b82850191508151818111156139e55750505050505090565b843d87010160208285010111156139ff5750505050505090565b613a0e602082860101876138e0565b509095945050505050565b6001600160a01b038116811461090357600080fd5b6001600160e01b03198116811461090357600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c656468747470733a2f2f6170692e66726565706f72742e636572652e6e6574776f726b2f657263313135352f7b69647d2e6a736f6ea26469706673582212202a8b40fb30e66a7dda805eeb1e0f6b48385f718bc954a8d2315fb176c6d3826764736f6c63430008040033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220388a82ade287baa4a97f83c755c8cfcdc4f8b469e6583a227a89f8fe3f4f2a6464736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12140:51",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:51",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "88:557:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "98:28:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "108:18:51",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "102:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "153:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "155:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "155:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "155:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "141:6:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "149:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "138:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "138:14:51"
                  },
                  "nodeType": "YulIf",
                  "src": "135:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:17:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "198:2:51",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "194:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "194:7:51"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "188:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "210:23:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "230:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "224:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:9:51"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "214:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "242:73:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "264:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:6:51"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "296:2:51",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "284:3:51"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "284:15:51"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "301:2:51"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "280:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "280:24:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "306:2:51",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "276:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "276:33:51"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "311:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "272:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "272:42:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "260:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:55:51"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "246:10:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "374:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "376:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "376:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "376:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "333:10:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "345:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "330:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "353:10:51"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "365:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "350:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "350:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "327:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "327:46:51"
                  },
                  "nodeType": "YulIf",
                  "src": "324:2:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:2:51",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "416:10:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "405:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "405:22:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "405:22:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "436:15:51",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "445:6:51"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "436:5:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "467:6:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "475:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "460:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "460:22:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "460:22:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "520:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "532:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "522:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "522:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "522:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "501:3:51"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "506:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:16:51"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "515:3:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "494:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:25:51"
                  },
                  "nodeType": "YulIf",
                  "src": "491:2:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "562:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "558:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:17:51"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "577:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "582:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "545:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "545:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "545:44:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "613:6:51"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "621:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "609:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "609:19:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "630:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "605:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "605:30:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "637:1:51",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "598:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:41:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "598:41:51"
                }
              ]
            },
            "name": "abi_decode_available_length_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "57:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "62:6:51",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "70:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "78:5:51",
                "type": ""
              }
            ],
            "src": "14:631:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "720:187:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "766:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "775:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "783:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "768:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "768:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "768:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "741:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "750:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "737:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "737:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "762:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "733:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "730:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "801:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "827:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "814:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "805:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "871:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "846:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "846:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "846:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "886:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "896:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "886:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "686:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "697:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "709:6:51",
                "type": ""
              }
            ],
            "src": "650:257:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1008:518:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1054:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1063:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1071:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1056:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1056:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1056:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1029:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1025:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1050:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1021:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1018:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1089:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1115:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1102:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1093:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1159:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1134:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1134:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1174:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1184:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1174:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1198:46:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1229:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1240:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1225:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1225:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1212:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1202:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1287:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1296:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1304:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1289:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1289:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1289:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1259:6:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1267:18:51",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:30:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1322:32:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1336:9:51"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1347:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1332:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:22:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1326:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1402:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1411:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1419:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1404:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1404:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1404:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1381:2:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1385:4:51",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1377:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1377:13:51"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:51"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1373:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:27:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1366:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1366:35:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1363:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1437:83:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1485:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1489:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:11:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1507:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1494:12:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1494:16:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1512:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "1447:33:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:73:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1437:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "966:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "977:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "989:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "997:6:51",
                "type": ""
              }
            ],
            "src": "912:614:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1628:518:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1674:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1683:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1691:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1676:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1676:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1676:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1649:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1658:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1645:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1645:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1670:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1641:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1641:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1638:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1709:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1735:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1722:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1713:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1779:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1754:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1754:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1754:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1794:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1804:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1818:46:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1849:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1860:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1845:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1845:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1832:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1832:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1822:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1907:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1916:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1924:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1909:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1909:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1909:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1879:6:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1887:18:51",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1876:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:30:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1873:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1942:32:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:51"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1967:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1952:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1952:22:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1946:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2022:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2031:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2039:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2024:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2024:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2024:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2001:2:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2005:4:51",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1997:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1997:13:51"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2012:7:51"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:27:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1986:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:35:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1983:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:83:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2105:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2109:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2101:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2101:11:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2127:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2114:12:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:16:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2132:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2067:33:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:73:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1586:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1597:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1609:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1617:6:51",
                "type": ""
              }
            ],
            "src": "1531:615:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2221:120:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2267:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2276:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2284:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2269:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2269:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2269:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2242:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2251:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2238:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2238:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2263:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2234:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2234:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2231:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2302:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2325:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2312:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2312:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2302:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2187:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2198:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2210:6:51",
                "type": ""
              }
            ],
            "src": "2151:190:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2433:238:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2479:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2488:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2496:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2481:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2481:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2481:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2454:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2463:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2450:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2450:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2475:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2446:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2446:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2443:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2514:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2537:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2524:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2524:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2514:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2556:45:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2586:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2597:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2582:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2582:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2569:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2569:32:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2560:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2635:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2610:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2610:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2650:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2660:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2650:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2391:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2402:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2414:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2422:6:51",
                "type": ""
              }
            ],
            "src": "2346:325:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2745:283:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2791:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2800:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2808:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2793:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2793:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2793:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2766:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2775:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2762:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2762:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2787:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2758:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2755:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2826:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2852:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2839:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2839:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2830:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2972:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2981:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2989:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2974:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2974:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2974:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2884:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2895:5:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2902:66:51",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2891:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2891:78:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2881:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2881:89:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2874:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:97:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2871:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3007:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3017:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3007:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2711:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2722:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2734:6:51",
                "type": ""
              }
            ],
            "src": "2676:352:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3159:311:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3205:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3214:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3222:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3207:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3207:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3207:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3180:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3189:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3176:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3176:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3201:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3172:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3172:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3169:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3240:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3266:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3253:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3244:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3310:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3285:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3285:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3325:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3335:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3325:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3349:47:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3381:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3392:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3377:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3377:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3364:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3364:32:51"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3353:7:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3430:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3405:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3405:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3405:33:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3447:17:51",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3457:7:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3447:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$4426t_contract$_NFTAttachment_$4806",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3117:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3128:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3140:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3148:6:51",
                "type": ""
              }
            ],
            "src": "3033:437:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3525:208:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3535:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3555:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3549:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3549:12:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3539:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3577:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3582:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3570:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:19:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3570:19:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3624:5:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3631:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3620:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3620:16:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3642:3:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3647:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3638:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3638:14:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3654:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3598:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:63:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3598:63:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3670:57:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3685:3:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3698:6:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3706:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3694:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3694:15:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3715:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3711:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3711:7:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3690:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3690:29:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3681:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3681:39:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3722:4:51",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3677:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3677:50:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3670:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3502:5:51",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3509:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3517:3:51",
                "type": ""
              }
            ],
            "src": "3475:258:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3875:137:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3885:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3905:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3899:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3899:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3889:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3947:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3955:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3943:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3943:17:51"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3962:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3967:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3921:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3921:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3921:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3983:23:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3994:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3999:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3990:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3983:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3851:3:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3856:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3867:3:51",
                "type": ""
              }
            ],
            "src": "3738:274:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4156:137:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4166:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4186:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4180:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4180:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4170:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4228:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4236:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4224:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4224:17:51"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4243:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4248:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4202:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4202:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4202:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4264:23:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4275:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4280:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4271:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4264:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4132:3:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4137:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4148:3:51",
                "type": ""
              }
            ],
            "src": "4017:276:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4687:397:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4704:3:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4709:25:51",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4697:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4697:38:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4697:38:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4744:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4764:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4758:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4758:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4748:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4806:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4814:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4802:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4802:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4825:3:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:2:51",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4821:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4821:12:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4835:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4780:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4780:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4780:62:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4851:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4865:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4870:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4861:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4861:16:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4855:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4897:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4901:2:51",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4893:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4893:11:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4906:19:51",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4886:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4886:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4886:40:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4935:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4957:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4951:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4951:13:51"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "4939:8:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4999:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5007:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4995:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4995:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5018:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5022:2:51",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5014:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5014:11:51"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "5027:8:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4973:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4973:63:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4973:63:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5045:33:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5060:2:51"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "5064:8:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5056:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5056:17:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5075:2:51",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5052:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5052:26:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5045:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4655:3:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4660:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4668:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4679:3:51",
                "type": ""
              }
            ],
            "src": "4298:786:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5190:125:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5200:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5212:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5223:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5208:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5208:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5200:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5242:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5257:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5265:42:51",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5253:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5253:55:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5235:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5235:74:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5235:74:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5159:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5170:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5181:4:51",
                "type": ""
              }
            ],
            "src": "5089:226:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5592:371:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5602:52:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5612:42:51",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5606:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5670:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5685:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5693:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5681:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5681:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5663:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5663:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5663:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5717:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5728:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5713:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5713:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5737:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5745:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5733:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5733:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5706:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5706:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5706:43:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5769:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5780:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5765:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5765:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5785:3:51",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5758:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5758:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5758:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5798:54:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5824:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5836:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5847:3:51",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5832:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5832:19:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "5806:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5806:46:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5798:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5872:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5883:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5868:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5868:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5892:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5900:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5888:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5888:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5861:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5861:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5861:43:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5924:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5935:3:51",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5920:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5920:19:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "5945:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5953:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5941:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5941:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5913:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5913:44:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_contract$_Freeport_$4426_t_contract$_NFTAttachment_$4806__to_t_address_t_address_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5529:9:51",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5540:6:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5548:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5556:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5564:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5572:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5583:4:51",
                "type": ""
              }
            ],
            "src": "5320:643:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6063:92:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6073:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6085:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6096:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6081:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6081:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6073:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6115:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6140:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6133:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6133:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6126:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6126:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6108:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6108:41:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6108:41:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6032:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6043:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6054:4:51",
                "type": ""
              }
            ],
            "src": "5968:187:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6261:76:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6271:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6283:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6294:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6279:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6279:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6271:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6313:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6324:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6306:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6306:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6306:25:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6230:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6241:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6252:4:51",
                "type": ""
              }
            ],
            "src": "6160:177:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6460:125:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6470:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6482:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6493:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6478:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6478:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6470:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6512:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6527:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6535:42:51",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6523:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6523:55:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6505:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6505:74:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6505:74:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$4426__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6429:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6440:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6451:4:51",
                "type": ""
              }
            ],
            "src": "6342:243:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6713:125:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6723:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6735:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6746:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6731:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6723:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6765:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6780:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6788:42:51",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6776:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6776:55:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6758:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6758:74:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6758:74:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_NFTAttachment_$4806__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6682:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6693:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6704:4:51",
                "type": ""
              }
            ],
            "src": "6590:248:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6964:99:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6981:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6992:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6974:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6974:21:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7004:53:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7030:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7042:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7053:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7038:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7038:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "7012:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7012:45:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7004:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6933:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6944:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6955:4:51",
                "type": ""
              }
            ],
            "src": "6843:220:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7242:182:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7259:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7270:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7252:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7252:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7252:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7293:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7304:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7289:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7289:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7309:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7282:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7282:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7282:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7332:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7343:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7328:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7328:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7348:34:51",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7321:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7321:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7321:62:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7392:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7404:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7415:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7400:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7392:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7219:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7233:4:51",
                "type": ""
              }
            ],
            "src": "7068:356:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7603:237:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7620:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7631:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7613:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7613:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7613:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7654:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7665:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7650:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7650:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7670:2:51",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7643:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7643:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7643:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7693:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7704:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7689:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7689:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7709:34:51",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7682:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7682:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7764:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7775:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7760:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7760:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7780:17:51",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7753:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7753:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7753:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7807:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7819:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7830:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7815:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7815:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7807:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7580:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7594:4:51",
                "type": ""
              }
            ],
            "src": "7429:411:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8019:173:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8036:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8047:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8029:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8029:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8029:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8070:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8081:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8066:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8066:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8086:2:51",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8059:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8059:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8059:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8109:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8120:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8105:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8105:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8125:25:51",
                        "type": "",
                        "value": "only collection creator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8098:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8098:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8098:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8160:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8172:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8183:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8168:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8168:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8160:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7996:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8010:4:51",
                "type": ""
              }
            ],
            "src": "7845:347:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8371:180:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8388:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8399:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8381:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8381:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8381:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8422:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8433:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8418:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8418:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8438:2:51",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8411:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8411:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8411:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8461:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8472:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8457:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8457:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8477:32:51",
                        "type": "",
                        "value": "collection name already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8450:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8450:60:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8450:60:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8519:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8531:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8542:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8527:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8527:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8519:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8348:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8362:4:51",
                "type": ""
              }
            ],
            "src": "8197:354:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8730:236:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8747:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8758:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8740:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8740:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8740:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8781:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8792:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8777:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8777:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8797:2:51",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8770:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8770:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8770:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8820:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8831:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8816:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8816:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8836:34:51",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8809:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8809:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8809:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8891:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8902:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8887:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8887:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8907:16:51",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8880:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8880:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8880:44:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8933:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8945:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8956:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8941:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8941:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8933:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8707:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8721:4:51",
                "type": ""
              }
            ],
            "src": "8556:410:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9145:170:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9162:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9173:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9155:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9155:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9155:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9196:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9207:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9192:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9192:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9212:2:51",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9185:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9185:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9185:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9235:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9246:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9231:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9231:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9251:22:51",
                        "type": "",
                        "value": "zero address creator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9224:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9224:50:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9224:50:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9283:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9295:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9306:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9291:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9291:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9283:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9122:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9136:4:51",
                "type": ""
              }
            ],
            "src": "8971:344:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9494:235:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9511:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9522:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9504:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9504:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9504:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9545:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9556:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9541:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9541:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9561:2:51",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9534:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9534:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9584:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9595:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9580:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9580:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9600:34:51",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9573:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9573:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9655:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9666:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9651:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9651:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9671:15:51",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9644:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9644:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9644:43:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9696:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9708:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9719:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9704:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9704:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9696:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9471:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9485:4:51",
                "type": ""
              }
            ],
            "src": "9320:409:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9908:228:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9925:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9936:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9918:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9918:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9918:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9959:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9970:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9955:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9955:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9975:2:51",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9948:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9948:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9948:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9998:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10009:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9994:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9994:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10014:34:51",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9987:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9987:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9987:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10069:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10080:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10065:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10065:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10085:8:51",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10058:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10058:36:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10058:36:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10103:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10115:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10126:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10111:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10111:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10103:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9885:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9899:4:51",
                "type": ""
              }
            ],
            "src": "9734:402:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10315:160:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10332:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10343:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10325:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10325:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10325:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10366:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10377:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10362:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10362:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10382:2:51",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10355:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10355:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10355:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10405:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10416:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10401:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10401:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10421:12:51",
                        "type": "",
                        "value": "Only Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10394:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10394:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10394:40:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10443:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10455:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10466:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10451:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10451:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10443:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10292:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10306:4:51",
                "type": ""
              }
            ],
            "src": "10141:334:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10654:237:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10671:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10682:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10664:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10664:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10664:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10705:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10716:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10701:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10701:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10721:2:51",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10694:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10694:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10694:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10744:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10755:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10740:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10740:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10760:34:51",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10733:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10815:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10826:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10811:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10811:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10831:17:51",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10804:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10804:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10804:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10858:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10870:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10881:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10866:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10866:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10858:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10631:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10645:4:51",
                "type": ""
              }
            ],
            "src": "10480:411:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10944:80:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10971:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10973:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10973:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10973:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10960:1:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10967:1:51"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10963:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10963:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10957:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10957:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "10954:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11002:16:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11013:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11016:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11009:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11009:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11002:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10927:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10930:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10936:3:51",
                "type": ""
              }
            ],
            "src": "10896:128:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11081:116:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11140:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11142:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11142:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11142:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11112:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11105:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11105:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11098:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11098:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11120:1:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11131:1:51",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11127:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11127:6:51"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11135:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11123:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11123:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11117:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11117:21:51"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11094:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11094:45:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11091:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11171:20:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11186:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11189:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11182:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11182:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11171:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11060:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11063:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11069:7:51",
                "type": ""
              }
            ],
            "src": "11029:168:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11255:205:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11265:10:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11274:1:51",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11269:1:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11334:63:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11359:3:51"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11364:1:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11355:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11355:11:51"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11378:3:51"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11383:1:51"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11374:3:51"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11374:11:51"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11368:5:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11368:18:51"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11348:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11348:39:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11348:39:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11295:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11298:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11292:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11292:13:51"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11306:19:51",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11308:15:51",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11317:1:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11320:2:51",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11313:3:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11313:10:51"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11308:1:51"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11288:3:51",
                    "statements": []
                  },
                  "src": "11284:113:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11423:31:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11436:3:51"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11441:6:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11432:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11432:16:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11450:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11425:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11425:27:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11425:27:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11412:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11415:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11409:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11409:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11406:2:51"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11233:3:51",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11238:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11243:6:51",
                "type": ""
              }
            ],
            "src": "11202:258:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11512:89:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11539:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11541:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11541:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11541:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11532:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11525:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11525:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11522:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11570:25:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11581:5:51"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11592:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11588:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11588:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11577:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11577:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11570:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11494:5:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11504:3:51",
                "type": ""
              }
            ],
            "src": "11465:136:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11638:152:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11655:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11658:77:51",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11648:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11648:88:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11648:88:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11752:1:51",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11755:4:51",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11745:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11745:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11745:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11776:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11779:4:51",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11769:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11769:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11769:15:51"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11606:184:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11827:152:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11844:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11847:77:51",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11837:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11837:88:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11837:88:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11941:1:51",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11944:4:51",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11934:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11934:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11934:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11965:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11968:4:51",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11958:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11958:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11958:15:51"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11795:184:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12029:109:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12116:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12125:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12128:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12118:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12118:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12118:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12052:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12063:5:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12070:42:51",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12059:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12059:54:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12049:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12049:65:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12042:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12042:73:51"
                  },
                  "nodeType": "YulIf",
                  "src": "12039:2:51"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12018:5:51",
                "type": ""
              }
            ],
            "src": "11984:154:51"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value1, value1) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value1, value1) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Freeport_$4426t_contract$_NFTAttachment_$4806(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_contract$_Freeport_$4426_t_contract$_NFTAttachment_$4806__to_t_address_t_address_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_string(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$4426__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_NFTAttachment_$4806__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"only collection creator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"collection name already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"zero address creator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 51,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "186:1949:29:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "186:1949:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:225:0;;;;;;;;;;-1:-1:-1;4473:225:0;;;;;:::i;:::-;;:::i;:::-;;;6133:14:51;;6126:22;6108:41;;6096:2;6081:18;4473:225:0;;;;;;;;665:34:29;;;;;;;;;;-1:-1:-1;665:34:29;;;;-1:-1:-1;;;;;665:34:29;;;;;;-1:-1:-1;;;;;5253:55:51;;;5235:74;;5223:2;5208:18;665:34:29;5190:125:51;5781:121:0;;;;;;;;;;-1:-1:-1;5781:121:0;;;;;:::i;:::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;;5781:121;;;;6306:25:51;;;6294:2;6279:18;5781:121:0;6261:76:51;6152:145:0;;;;;;;;;;-1:-1:-1;6152:145:0;;;;;:::i;:::-;;:::i;:::-;;7169:214;;;;;;;;;;-1:-1:-1;7169:214:0;;;;;:::i;:::-;;:::i;882:186:4:-;;;;;;;;;;-1:-1:-1;882:186:4;;;;;:::i;:::-;;:::i;237:199:29:-;;;;;;;;;;-1:-1:-1;237:199:29;;;;;:::i;:::-;;:::i;1074:214:4:-;;;;;;:::i;:::-;;:::i;426:143:43:-;;;;;;;;;;-1:-1:-1;426:143:43;;;;;:::i;:::-;-1:-1:-1;;;;;4886:29:0;;502:4:43;4886:29:0;;;:12;;:29;:12;:29;;;;;525:37:43;4785:137:0;;;;;;;;;;;-1:-1:-1;4785:137:0;;;;;:::i;:::-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;;;;4785:137;589:24:29;;;;;;;;;;-1:-1:-1;589:24:29;;;;-1:-1:-1;;;;;589:24:29;;;345:74:43;;;;;;;;;;;;389:30;345:74;;2794:49:0;;;;;;;;;;-1:-1:-1;2794:49:0;2839:4;2794:49;;1386:747:29;;;;;;;;;;-1:-1:-1;1386:747:29;;;;;:::i;:::-;;:::i;998:86::-;;;;;;;;;;;;1048:36;998:86;;6531:147:0;;;;;;;;;;-1:-1:-1;6531:147:0;;;;;:::i;:::-;;:::i;4473:225::-;4558:4;4581:58;;;4596:43;4581:58;;:110;;-1:-1:-1;1142:36:15;1127:51;;;;4655:36:0;4574:117;4473:225;-1:-1:-1;;4473:225:0:o;6152:145::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;4358:30;4369:4;4375:12;:10;:12::i;:::-;4358:10;:30::i;:::-;6265:25:::1;6276:4;6282:7;6265:10;:25::i;:::-;6152:145:::0;;;:::o;7169:214::-;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7264:23:0;:7;-1:-1:-1;;;;;7264:23:0;;7256:83;;;;-1:-1:-1;;;7256:83:0;;10682:2:51;7256:83:0;;;10664:21:51;10721:2;10701:18;;;10694:30;10760:34;10740:18;;;10733:62;10831:17;10811:18;;;10804:45;10866:19;;7256:83:0;;;;;;;;;7350:26;7362:4;7368:7;7350:11;:26::i;:::-;7169:214;;:::o;882:186:4:-;955:36;973:17;955;:36::i;:::-;1001:60;1025:17;1044:9;;;;;;;;;;;;1055:5;1001:23;:60::i;:::-;882:186;:::o;237:199:29:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8758:2:51;1448:89:3;;;8740:21:51;8797:2;8777:18;;;8770:30;8836:34;8816:18;;;8809:62;-1:-1:-1;;;8887:18:51;;;8880:44;8941:19;;1448:89:3;8730:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;336:22:29::1;:20;:22::i;:::-;369:8;:20:::0;;-1:-1:-1;;;;;369:20:29;;::::1;-1:-1:-1::0;;369:20:29;;::::1;;::::0;;;399:13:::1;:30:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1714:66:3;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;237:199:29;;;:::o;1074:214:4:-;1181:36;1199:17;1181;:36::i;:::-;1227:54;1251:17;1270:4;1276;1227:23;:54::i;1386:747:29:-;1465:7;1492:46;1048:36;1525:12;:10;:12::i;1492:46::-;1484:82;;;;-1:-1:-1;;;1484:82:29;;8047:2:51;1484:82:29;;;8029:21:51;8086:2;8066:18;;;8059:30;8125:25;8105:18;;;8098:53;8168:18;;1484:82:29;8019:173:51;1484:82:29;-1:-1:-1;;;;;1584:21:29;;1576:54;;;;-1:-1:-1;;;1576:54:29;;9173:2:51;1576:54:29;;;9155:21:51;9212:2;9192:18;;;9185:30;9251:22;9231:18;;;9224:50;9291:18;;1576:54:29;9145:170:51;1576:54:29;1682:1;-1:-1:-1;;;;;1648:36:29;:16;1665:4;1648:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1648:22:29;:36;1640:79;;;;-1:-1:-1;;;1640:79:29;;8399:2:51;1640:79:29;;;8381:21:51;8438:2;8418:18;;;8411:30;8477:32;8457:18;;;8450:60;8527:18;;1640:79:29;8371:180:51;1640:79:29;1730:21;1754:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1832:8:29;;1842:13;;1780:76;;;;;1730:40;;-1:-1:-1;;;;;;1780:21:29;;;;;;:76;;1810:4;;1817:7;;1826:4;;1832:8;;;1842:13;;;;1780:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1884:17:29;;;1867:35;;;;:16;:35;;;;;:57;;-1:-1:-1;;1867:57:29;-1:-1:-1;;;;;1867:57:29;;;;;1954:17;:21;;-1:-1:-1;1954:17:29;-1:-1:-1;;1954:21:29;:::i;:::-;1934:17;:41;1986:22;;2019:10;;1986:16;;:22;;2003:4;;1986:22;:::i;:::-;;;;;;;;;;;;;;:44;;-1:-1:-1;;;;;1986:44:29;;;-1:-1:-1;;1986:44:29;;;;;;2046;;;;;;;;2064:4;;2046:44;:::i;:::-;;;;;;;;2115:10;1386:747;-1:-1:-1;;;1386:747:29:o;6531:147:0:-;5847:7;5873:12;;;:6;:12;;;;;:22;;;4358:30;4369:4;4375:12;:10;:12::i;4358:30::-;6645:26:::1;6657:4;6663:7;6645:11;:26::i;575:371:43:-:0;637:14;667:30;686:10;-1:-1:-1;;;;;4886:29:0;;502:4:43;4886:29:0;;;:12;;:29;:12;:29;;;;;525:37:43;4785:137:0;667:30:43;663:277;;;-1:-1:-1;;;852:14:43;848:23;835:37;831:2;827:46;575:371;:::o;816:58::-;-1:-1:-1;901:10:11;;575:371:43:o;5203:397:0:-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;5278:316;;5411:52;5450:7;-1:-1:-1;;;;;5411:52:0;5460:2;5411:30;:52::i;:::-;5518:49;5557:4;5564:2;5518:30;:49::i;:::-;5334:247;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5334:247:0;;;;;;;;;;-1:-1:-1;;;5320:263:0;;;;;;;:::i;8381:224::-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;8450:149;;8493:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8493:29:0;;;;;;;;;:36;;-1:-1:-1;;8493:36:0;8525:4;8493:36;;;8575:12;:10;:12::i;:::-;-1:-1:-1;;;;;8548:40:0;8566:7;-1:-1:-1;;;;;8548:40:0;8560:4;8548:40;;;;;;;;;;8381:224;;:::o;8611:225::-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;8681:149;;;8755:5;8723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8723:29:0;;;;;;;;;:37;;-1:-1:-1;;8723:37:0;;;8806:12;:10;:12::i;:::-;-1:-1:-1;;;;;8779:40:0;8797:7;-1:-1:-1;;;;;8779:40:0;8791:4;8779:40;;;;;;;;;;8611:225;;:::o;575:151:48:-;693:10;2839:4:0;4886:29;;;:12;;:29;:12;:29;;;;;657:62:48;;;;-1:-1:-1;;;657:62:48;;10343:2:51;657:62:48;;;10325:21:51;10382:2;10362:18;;;10355:30;10421:12;10401:18;;;10394:40;10451:18;;657:62:48;10315:160:51;2851:1322:1;2965:25;2993:20;1185:66;1535:65;-1:-1:-1;;;;;1535:65:1;;1456:151;2993:20;2965:48;;3066:37;3085:17;3066:18;:37::i;:::-;3131:1;3117:4;:11;:15;:28;;;;3136:9;3117:28;3113:105;;;3161:46;3183:17;3202:4;3161:21;:46::i;:::-;;3113:105;844:66;3417:21;;;;3412:755;;3530:28;;-1:-1:-1;;3530:28:1;3554:4;3530:28;;;3646:122;;-1:-1:-1;;;;;5253:55:51;;3646:122:1;;;5235:74:51;3572:210:1;;3611:17;;5208:18:51;;3646:122:1;;;-1:-1:-1;;3646:122:1;;;;;;;;;;;;;;;;;;;;3572:21;:210::i;:::-;-1:-1:-1;3796:29:1;;-1:-1:-1;;3796:29:1;;;1185:66;1535:65;-1:-1:-1;;;;;3891:41:1;;;1535:65;;3891:41;3883:101;;;;-1:-1:-1;;;3883:101:1;;7631:2:51;3883:101:1;;;7613:21:51;7670:2;7650:18;;;7643:30;7709:34;7689:18;;;7682:62;7780:17;7760:18;;;7753:45;7815:19;;3883:101:1;7603:237:51;3883:101:1;4073:37;4092:17;4073:18;:37::i;:::-;4129:27;;-1:-1:-1;;;;;4129:27:1;;;;;;;;3412:755;2851:1322;;;;;:::o;261:78:43:-;312:20;:18;:20::i;:::-;261:78::o;1542:437:13:-;1617:13;1642:19;1674:10;1678:6;1674:1;:10;:::i;:::-;:14;;1687:1;1674:14;:::i;:::-;1664:25;;;;;;-1:-1:-1;;;1664:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:25:13;;1642:47;;1699:15;:6;1706:1;1699:9;;;;;;-1:-1:-1;;;1699:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1699:15:13;;;;;;;;;1724;:6;1731:1;1724:9;;;;;;-1:-1:-1;;;1724:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1724:15:13;;;;;;;;-1:-1:-1;1754:9:13;1766:10;1770:6;1766:1;:10;:::i;:::-;:14;;1779:1;1766:14;:::i;:::-;1754:26;;1749:128;1786:1;1782;:5;1749:128;;;1820:8;1829:5;1837:3;1829:11;1820:21;;;;;-1:-1:-1;;;1820:21:13;;;;;;;;;;;;1808:6;1815:1;1808:9;;;;;;-1:-1:-1;;;1808:9:13;;;;;;;;;;;;:33;-1:-1:-1;;;;;1808:33:13;;;;;;;;-1:-1:-1;1865:1:13;1855:11;;;;;1789:3;;;:::i;:::-;;;1749:128;;;-1:-1:-1;1894:10:13;;1886:55;;;;-1:-1:-1;;;1886:55:13;;7270:2:51;1886:55:13;;;7252:21:51;;;7289:18;;;7282:30;7348:34;7328:18;;;7321:62;7400:18;;1886:55:13;7242:182:51;1886:55:13;1965:6;1542:437;-1:-1:-1;;;1542:437:13:o;1698:281:1:-;1089:20:10;;1771:106:1;;;;-1:-1:-1;;;1771:106:1;;9522:2:51;1771:106:1;;;9504:21:51;9561:2;9541:18;;;9534:30;9600:34;9580:18;;;9573:62;9671:15;9651:18;;;9644:43;9704:19;;1771:106:1;9494:235:51;1771:106:1;1185:66;1887:85;;-1:-1:-1;;1887:85:1;-1:-1:-1;;;;;1887:85:1;;;;;;;;;;1698:281::o;7352:437::-;7435:12;1089:20:10;;7459:88:1;;;;-1:-1:-1;;;7459:88:1;;9936:2:51;7459:88:1;;;9918:21:51;9975:2;9955:18;;;9948:30;10014:34;9994:18;;;9987:62;10085:8;10065:18;;;10058:36;10111:19;;7459:88:1;9908:228:51;7459:88:1;7618:12;7632:23;7659:6;-1:-1:-1;;;;;7659:19:1;7679:4;7659:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:67;;;;7701:81;7719:7;7728:10;7701:81;;;;;;;;;;;;;;;;;:17;:81::i;:::-;7694:88;7352:437;-1:-1:-1;;;;;7352:437:1:o;404:165:48:-;453:24;:22;:24::i;:::-;487:22;:20;:22::i;:::-;520:42;2839:4:0;551:10:48;520;:42::i;7795:725:1:-;7910:12;7938:7;7934:580;;;-1:-1:-1;7968:10:1;7961:17;;7934:580;8079:17;;:21;8075:429;;8337:10;8331:17;8397:15;8384:10;8380:2;8376:19;8369:44;8286:145;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;650:149:4:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8758:2:51;1448:89:3;;;8740:21:51;8797:2;8777:18;;;8770:30;8836:34;8816:18;;;8809:62;-1:-1:-1;;;8887:18:51;;;8880:44;8941:19;;1448:89:3;8730:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;715:33:4::1;:31;:33::i;:::-;758:34;:32;:34::i;:::-;1718:14:3::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;650:149:4;:::o;2390:173:0:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8758:2:51;1448:89:3;;;8740:21:51;8797:2;8777:18;;;8770:30;8836:34;8816:18;;;8809:62;-1:-1:-1;;;8887:18:51;;;8880:44;8941:19;;1448:89:3;8730:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;2453:26:0::1;:24;:26::i;7948:110::-:0;8026:25;8037:4;8043:7;8026:10;:25::i;647:71:1:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8758:2:51;1448:89:3;;;8740:21:51;8797:2;8777:18;;;8770:30;8836:34;8816:18;;;8809:62;-1:-1:-1;;;8887:18:51;;;8880:44;8941:19;;1448:89:3;8730:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1714:66;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;647:71:1;:::o;-1:-1:-1:-;;;;;;;;:::o;14:631:51:-;78:5;108:18;149:2;141:6;138:14;135:2;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:51;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:2;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:2;;;532:1;529;522:12;491:2;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;88:557;;;;;:::o;650:257::-;709:6;762:2;750:9;741:7;737:23;733:32;730:2;;;783:6;775;768:22;730:2;827:9;814:23;846:31;871:5;846:31;:::i;912:614::-;989:6;997;1050:2;1038:9;1029:7;1025:23;1021:32;1018:2;;;1071:6;1063;1056:22;1018:2;1115:9;1102:23;1134:31;1159:5;1134:31;:::i;:::-;1184:5;-1:-1:-1;1240:2:51;1225:18;;1212:32;1267:18;1256:30;;1253:2;;;1304:6;1296;1289:22;1253:2;1332:22;;1385:4;1377:13;;1373:27;-1:-1:-1;1363:2:51;;1419:6;1411;1404:22;1363:2;1447:73;1512:7;1507:2;1494:16;1489:2;1485;1481:11;1447:73;:::i;:::-;1437:83;;;1008:518;;;;;:::o;1531:615::-;1609:6;1617;1670:2;1658:9;1649:7;1645:23;1641:32;1638:2;;;1691:6;1683;1676:22;2151:190;2210:6;2263:2;2251:9;2242:7;2238:23;2234:32;2231:2;;;2284:6;2276;2269:22;2231:2;-1:-1:-1;2312:23:51;;2221:120;-1:-1:-1;2221:120:51:o;2346:325::-;2414:6;2422;2475:2;2463:9;2454:7;2450:23;2446:32;2443:2;;;2496:6;2488;2481:22;2443:2;2537:9;2524:23;2514:33;;2597:2;2586:9;2582:18;2569:32;2610:31;2635:5;2610:31;:::i;:::-;2660:5;2650:15;;;2433:238;;;;;:::o;2676:352::-;2734:6;2787:2;2775:9;2766:7;2762:23;2758:32;2755:2;;;2808:6;2800;2793:22;2755:2;2852:9;2839:23;2902:66;2895:5;2891:78;2884:5;2881:89;2871:2;;2989:6;2981;2974:22;3033:437;3140:6;3148;3201:2;3189:9;3180:7;3176:23;3172:32;3169:2;;;3222:6;3214;3207:22;3169:2;3266:9;3253:23;3285:31;3310:5;3285:31;:::i;:::-;3335:5;-1:-1:-1;3392:2:51;3377:18;;3364:32;3405:33;3364:32;3405:33;:::i;3475:258::-;3517:3;3555:5;3549:12;3582:6;3577:3;3570:19;3598:63;3654:6;3647:4;3642:3;3638:14;3631:4;3624:5;3620:16;3598:63;:::i;:::-;3715:2;3694:15;-1:-1:-1;;3690:29:51;3681:39;;;;3722:4;3677:50;;3525:208;-1:-1:-1;;3525:208:51:o;3738:274::-;3867:3;3905:6;3899:13;3921:53;3967:6;3962:3;3955:4;3947:6;3943:17;3921:53;:::i;:::-;3990:16;;;;;3875:137;-1:-1:-1;;3875:137:51:o;4298:786::-;4709:25;4704:3;4697:38;4679:3;4764:6;4758:13;4780:62;4835:6;4830:2;4825:3;4821:12;4814:4;4806:6;4802:17;4780:62;:::i;:::-;4906:19;4901:2;4861:16;;;4893:11;;;4886:40;4951:13;;4973:63;4951:13;5022:2;5014:11;;5007:4;4995:17;;4973:63;:::i;:::-;5056:17;5075:2;5052:26;;4687:397;-1:-1:-1;;;;4687:397:51:o;5320:643::-;5583:4;-1:-1:-1;;;;;5693:2:51;5685:6;5681:15;5670:9;5663:34;5745:2;5737:6;5733:15;5728:2;5717:9;5713:18;5706:43;5785:3;5780:2;5769:9;5765:18;5758:31;5806:46;5847:3;5836:9;5832:19;5824:6;5806:46;:::i;:::-;5888:15;;;5883:2;5868:18;;5861:43;5941:15;;;;5935:3;5920:19;;;5913:44;-1:-1:-1;5798:54:51;5592:371;-1:-1:-1;;;5592:371:51:o;6843:220::-;6992:2;6981:9;6974:21;6955:4;7012:45;7053:2;7042:9;7038:18;7030:6;7012:45;:::i;10896:128::-;10936:3;10967:1;10963:6;10960:1;10957:13;10954:2;;;10973:18;;:::i;:::-;-1:-1:-1;11009:9:51;;10944:80::o;11029:168::-;11069:7;11135:1;11131;11127:6;11123:14;11120:1;11117:21;11112:1;11105:9;11098:17;11094:45;11091:2;;;11142:18;;:::i;:::-;-1:-1:-1;11182:9:51;;11081:116::o;11202:258::-;11274:1;11284:113;11298:6;11295:1;11292:13;11284:113;;;11374:11;;;11368:18;11355:11;;;11348:39;11320:2;11313:10;11284:113;;;11415:6;11412:1;11409:13;11406:2;;;11450:1;11441:6;11436:3;11432:16;11425:27;11406:2;;11255:205;;;:::o;11465:136::-;11504:3;11532:5;11522:2;;11541:18;;:::i;:::-;-1:-1:-1;;;11577:18:51;;11512:89::o;11606:184::-;-1:-1:-1;;;11655:1:51;11648:88;11755:4;11752:1;11745:15;11779:4;11776:1;11769:15;11795:184;-1:-1:-1;;;11844:1:51;11837:88;11944:4;11941:1;11934:15;11968:4;11965:1;11958:15;11984:154;-1:-1:-1;;;;;12063:5:51;12059:54;12052:5;12049:65;12039:2;;12128:1;12125;12118:12",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./Collection.sol\";\n\n/** This is a contract for creating standalone contracts (collections) for users.\n *\n */\ncontract CollectionFactory is MetaTxContext  {\n    function initialize(Freeport _freeport, NFTAttachment _nftAttachment) public initializer {\n        __MetaTxContext_init();\n\n        freeport = _freeport;\n        nftAttachment = _nftAttachment;\n    }\n\n    // Standalone user collections mapped to its names.\n    mapping(string => address) nameToCollection;\n\n    // The address of Freeport contract.\n    Freeport public freeport;\n    // The address of NFTAttachment contract.\n    NFTAttachment public nftAttachment;\n\n    // Collection id to address.\n    mapping(uint256 => address) private addressesProxies;\n    uint256 private collectionCounter;\n\n    /** Collection creator role.\n     *  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT.\n     */\n    bytes32 public constant COLLECTION_CREATOR_ROLE = keccak256(\"COLLECTION_CREATOR_ROLE\");\n\n    /** An event emitted when new collection is created.\n     *\n     * Contains unique name of collection and its address.\n     */\n    event CollectionCreated(string name, address indexed addr);\n\n    /** Deploying a new user collection.\n     *\n     *  Emits a {CollectionCreated} event.\n     */\n    function createCollection(address creator, string memory name) public returns (address) {\n        require(hasRole(COLLECTION_CREATOR_ROLE, _msgSender()), \"only collection creator\");\n        require(creator != address(0), \"zero address creator\");\n        require(nameToCollection[name] == address(0), \"collection name already exists\");\n\n        Collection collection = new Collection();\n        collection.initialize(address(this), creator, name, freeport, nftAttachment);\n\n        addressesProxies[collectionCounter] = address(collection);\n        collectionCounter = collectionCounter + 1;\n\n        nameToCollection[name] = address(collection);\n\n        emit CollectionCreated(name, address(collection));\n        return address(collection);\n    }\n}\n",
  "sourcePath": "/Users/neanvo/WorkFlow/cere/Freeport-Smart-Contracts/contracts/CollectionFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CollectionFactory.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        5747
      ],
      "Collection": [
        3932
      ],
      "CollectionFactory": [
        4092
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        5821
      ],
      "ERC1155Upgradeable": [
        8640
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        5949
      ],
      "Freeport": [
        4426
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        6210
      ],
      "JointAccounts": [
        6554
      ],
      "MetaTxContext": [
        6631
      ],
      "NFTAttachment": [
        4806
      ],
      "SimpleExchange": [
        6879
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        7495
      ],
      "TransferOperator": [
        7539
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        7580
      ]
    },
    "id": 4093,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3934,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 3935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4093,
        "sourceUnit": 6632,
        "src": "25:43:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 3936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4093,
        "sourceUnit": 3933,
        "src": "69:26:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3938,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6631,
              "src": "216:13:29"
            },
            "id": 3939,
            "nodeType": "InheritanceSpecifier",
            "src": "216:13:29"
          }
        ],
        "contractDependencies": [
          3932
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3937,
          "nodeType": "StructuredDocumentation",
          "src": "97:88:29",
          "text": "This is a contract for creating standalone contracts (collections) for users."
        },
        "fullyImplemented": true,
        "id": 4092,
        "linearizedBaseContracts": [
          4092,
          6631,
          7580,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "CollectionFactory",
        "nameLocation": "195:17:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3961,
              "nodeType": "Block",
              "src": "326:110:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3950,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6566,
                      "src": "336:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:22:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3952,
                  "nodeType": "ExpressionStatement",
                  "src": "336:22:29"
                },
                {
                  "expression": {
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3953,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3969,
                      "src": "369:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3954,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3942,
                      "src": "380:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "369:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 3956,
                  "nodeType": "ExpressionStatement",
                  "src": "369:20:29"
                },
                {
                  "expression": {
                    "id": 3959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3957,
                      "name": "nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3972,
                      "src": "399:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3958,
                      "name": "_nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3945,
                      "src": "415:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "src": "399:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "id": 3960,
                  "nodeType": "ExpressionStatement",
                  "src": "399:30:29"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 3962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3948,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3947,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "314:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "314:11:29"
              }
            ],
            "name": "initialize",
            "nameLocation": "246:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3942,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "266:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3962,
                  "src": "257:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4426",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 3941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3940,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4426,
                      "src": "257:8:29"
                    },
                    "referencedDeclaration": 4426,
                    "src": "257:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3945,
                  "mutability": "mutable",
                  "name": "_nftAttachment",
                  "nameLocation": "291:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3962,
                  "src": "277:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                    "typeString": "contract NFTAttachment"
                  },
                  "typeName": {
                    "id": 3944,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3943,
                      "name": "NFTAttachment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4806,
                      "src": "277:13:29"
                    },
                    "referencedDeclaration": 4806,
                    "src": "277:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "256:50:29"
            },
            "returnParameters": {
              "id": 3949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:29"
            },
            "scope": 4092,
            "src": "237:199:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3966,
            "mutability": "mutable",
            "name": "nameToCollection",
            "nameLocation": "525:16:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "498:43:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3965,
              "keyType": {
                "id": 3963,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "506:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "498:26:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3964,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9470ad85",
            "id": 3969,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "605:8:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "589:24:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4426",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 3968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3967,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4426,
                "src": "589:8:29"
              },
              "referencedDeclaration": 4426,
              "src": "589:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4426",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ec5868",
            "id": 3972,
            "mutability": "mutable",
            "name": "nftAttachment",
            "nameLocation": "686:13:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "665:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTAttachment_$4806",
              "typeString": "contract NFTAttachment"
            },
            "typeName": {
              "id": 3971,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3970,
                "name": "NFTAttachment",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4806,
                "src": "665:13:29"
              },
              "referencedDeclaration": 4806,
              "src": "665:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                "typeString": "contract NFTAttachment"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3976,
            "mutability": "mutable",
            "name": "addressesProxies",
            "nameLocation": "775:16:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "739:52:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3975,
              "keyType": {
                "id": 3973,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "747:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "739:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3974,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "758:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3978,
            "mutability": "mutable",
            "name": "collectionCounter",
            "nameLocation": "813:17:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "797:33:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3977,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "797:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 3979,
              "nodeType": "StructuredDocumentation",
              "src": "837:156:29",
              "text": "Collection creator role.\n  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
            },
            "functionSelector": "caff99ce",
            "id": 3984,
            "mutability": "constant",
            "name": "COLLECTION_CREATOR_ROLE",
            "nameLocation": "1022:23:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "998:86:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3980,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "998:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4c4c454354494f4e5f43524541544f525f524f4c45",
                  "id": 3982,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1058:25:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  },
                  "value": "COLLECTION_CREATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  }
                ],
                "id": 3981,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1048:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1048:36:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3985,
              "nodeType": "StructuredDocumentation",
              "src": "1091:126:29",
              "text": "An event emitted when new collection is created.\n Contains unique name of collection and its address."
            },
            "id": 3991,
            "name": "CollectionCreated",
            "nameLocation": "1228:17:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1253:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "1246:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3989,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1275:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "1259:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:35:29"
            },
            "src": "1222:59:29"
          },
          {
            "body": {
              "id": 4090,
              "nodeType": "Block",
              "src": "1474:659:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4003,
                            "name": "COLLECTION_CREATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3984,
                            "src": "1500:23:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4004,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6603
                              ],
                              "referencedDeclaration": 6603,
                              "src": "1525:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1525:12:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4002,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "1492:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1492:46:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920636f6c6c656374696f6e2063726561746f72",
                        "id": 4007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        },
                        "value": "only collection creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        }
                      ],
                      "id": 4001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1484:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:82:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4009,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:82:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4011,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3994,
                          "src": "1584:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1603:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1595:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4012,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1595:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1595:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1584:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20616464726573732063726561746f72",
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:22:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        },
                        "value": "zero address creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        }
                      ],
                      "id": 4010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1576:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:54:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4019,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:54:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4021,
                            "name": "nameToCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3966,
                            "src": "1648:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 4023,
                          "indexExpression": {
                            "id": 4022,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3996,
                            "src": "1665:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1648:22:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1674:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4024,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1674:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1648:36:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e206e616d6520616c726561647920657869737473",
                        "id": 4029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1686:32:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        },
                        "value": "collection name already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        }
                      ],
                      "id": 4020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1640:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:79:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4031,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:79:29"
                },
                {
                  "assignments": [
                    4034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4034,
                      "mutability": "mutable",
                      "name": "collection",
                      "nameLocation": "1741:10:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 4090,
                      "src": "1730:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$3932",
                        "typeString": "contract Collection"
                      },
                      "typeName": {
                        "id": 4033,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4032,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3932,
                          "src": "1730:10:29"
                        },
                        "referencedDeclaration": 3932,
                        "src": "1730:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4039,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1754:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Collection_$3932_$",
                        "typeString": "function () returns (contract Collection)"
                      },
                      "typeName": {
                        "id": 4036,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4035,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3932,
                          "src": "1758:10:29"
                        },
                        "referencedDeclaration": 3932,
                        "src": "1758:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      }
                    },
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:16:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$3932",
                      "typeString": "contract Collection"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1730:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4045,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1810:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4092",
                              "typeString": "contract CollectionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4092",
                              "typeString": "contract CollectionFactory"
                            }
                          ],
                          "id": 4044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1802:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1802:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1802:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4047,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3994,
                        "src": "1817:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4048,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "1826:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4049,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "1832:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4426",
                          "typeString": "contract Freeport"
                        }
                      },
                      {
                        "id": 4050,
                        "name": "nftAttachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3972,
                        "src": "1842:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                          "typeString": "contract NFTAttachment"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_Freeport_$4426",
                          "typeString": "contract Freeport"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                          "typeString": "contract NFTAttachment"
                        }
                      ],
                      "expression": {
                        "id": 4040,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4034,
                        "src": "1780:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      },
                      "id": 4042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "1780:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_contract$_Freeport_$4426_$_t_contract$_NFTAttachment_$4806_$returns$__$",
                        "typeString": "function (address,address,string memory,contract Freeport,contract NFTAttachment) external"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:76:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:76:29"
                },
                {
                  "expression": {
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4053,
                        "name": "addressesProxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3976,
                        "src": "1867:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4055,
                      "indexExpression": {
                        "id": 4054,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "1884:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1867:35:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4058,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4034,
                          "src": "1913:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1905:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1905:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1905:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1867:57:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4061,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:57:29"
                },
                {
                  "expression": {
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4062,
                      "name": "collectionCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3978,
                      "src": "1934:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4063,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "1954:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 4064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1954:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1934:41:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4067,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:41:29"
                },
                {
                  "expression": {
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4068,
                        "name": "nameToCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3966,
                        "src": "1986:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 4070,
                      "indexExpression": {
                        "id": 4069,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "2003:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1986:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4073,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4034,
                          "src": "2019:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2011:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2011:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1986:44:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4076,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:44:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4078,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "2064:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4081,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4034,
                            "src": "2078:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$3932",
                              "typeString": "contract Collection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Collection_$3932",
                              "typeString": "contract Collection"
                            }
                          ],
                          "id": 4080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2070:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4079,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2070:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2070:19:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4077,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3991,
                      "src": "2046:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:44:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4084,
                  "nodeType": "EmitStatement",
                  "src": "2041:49:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4087,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4034,
                        "src": "2115:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      ],
                      "id": 4086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2107:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4085,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2107:7:29",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:19:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4000,
                  "id": 4089,
                  "nodeType": "Return",
                  "src": "2100:26:29"
                }
              ]
            },
            "documentation": {
              "id": 3992,
              "nodeType": "StructuredDocumentation",
              "src": "1287:94:29",
              "text": "Deploying a new user collection.\n  Emits a {CollectionCreated} event."
            },
            "functionSelector": "b577fd73",
            "id": 4091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollection",
            "nameLocation": "1395:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3994,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1420:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "1412:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3996,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1443:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "1429:18:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3995,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1411:37:29"
            },
            "returnParameters": {
              "id": 4000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "1465:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1464:9:29"
            },
            "scope": 4092,
            "src": "1386:747:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4093,
        "src": "186:1949:29",
        "usedErrors": []
      }
    ],
    "src": "0:2136:29"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CollectionFactory.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        5747
      ],
      "Collection": [
        3932
      ],
      "CollectionFactory": [
        4092
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        5821
      ],
      "ERC1155Upgradeable": [
        8640
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        5949
      ],
      "Freeport": [
        4426
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        6210
      ],
      "JointAccounts": [
        6554
      ],
      "MetaTxContext": [
        6631
      ],
      "NFTAttachment": [
        4806
      ],
      "SimpleExchange": [
        6879
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        7495
      ],
      "TransferOperator": [
        7539
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        7580
      ]
    },
    "id": 4093,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3934,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 3935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4093,
        "sourceUnit": 6632,
        "src": "25:43:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 3936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4093,
        "sourceUnit": 3933,
        "src": "69:26:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3938,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6631,
              "src": "216:13:29"
            },
            "id": 3939,
            "nodeType": "InheritanceSpecifier",
            "src": "216:13:29"
          }
        ],
        "contractDependencies": [
          3932
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3937,
          "nodeType": "StructuredDocumentation",
          "src": "97:88:29",
          "text": "This is a contract for creating standalone contracts (collections) for users."
        },
        "fullyImplemented": true,
        "id": 4092,
        "linearizedBaseContracts": [
          4092,
          6631,
          7580,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "CollectionFactory",
        "nameLocation": "195:17:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3961,
              "nodeType": "Block",
              "src": "326:110:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3950,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6566,
                      "src": "336:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:22:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3952,
                  "nodeType": "ExpressionStatement",
                  "src": "336:22:29"
                },
                {
                  "expression": {
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3953,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3969,
                      "src": "369:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3954,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3942,
                      "src": "380:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "369:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 3956,
                  "nodeType": "ExpressionStatement",
                  "src": "369:20:29"
                },
                {
                  "expression": {
                    "id": 3959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3957,
                      "name": "nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3972,
                      "src": "399:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3958,
                      "name": "_nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3945,
                      "src": "415:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "src": "399:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "id": 3960,
                  "nodeType": "ExpressionStatement",
                  "src": "399:30:29"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 3962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3948,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3947,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "314:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "314:11:29"
              }
            ],
            "name": "initialize",
            "nameLocation": "246:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3942,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "266:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3962,
                  "src": "257:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4426",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 3941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3940,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4426,
                      "src": "257:8:29"
                    },
                    "referencedDeclaration": 4426,
                    "src": "257:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3945,
                  "mutability": "mutable",
                  "name": "_nftAttachment",
                  "nameLocation": "291:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3962,
                  "src": "277:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                    "typeString": "contract NFTAttachment"
                  },
                  "typeName": {
                    "id": 3944,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3943,
                      "name": "NFTAttachment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4806,
                      "src": "277:13:29"
                    },
                    "referencedDeclaration": 4806,
                    "src": "277:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "256:50:29"
            },
            "returnParameters": {
              "id": 3949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:29"
            },
            "scope": 4092,
            "src": "237:199:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3966,
            "mutability": "mutable",
            "name": "nameToCollection",
            "nameLocation": "525:16:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "498:43:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3965,
              "keyType": {
                "id": 3963,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "506:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "498:26:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3964,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9470ad85",
            "id": 3969,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "605:8:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "589:24:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4426",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 3968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3967,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4426,
                "src": "589:8:29"
              },
              "referencedDeclaration": 4426,
              "src": "589:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4426",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ec5868",
            "id": 3972,
            "mutability": "mutable",
            "name": "nftAttachment",
            "nameLocation": "686:13:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "665:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTAttachment_$4806",
              "typeString": "contract NFTAttachment"
            },
            "typeName": {
              "id": 3971,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3970,
                "name": "NFTAttachment",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4806,
                "src": "665:13:29"
              },
              "referencedDeclaration": 4806,
              "src": "665:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                "typeString": "contract NFTAttachment"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3976,
            "mutability": "mutable",
            "name": "addressesProxies",
            "nameLocation": "775:16:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "739:52:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3975,
              "keyType": {
                "id": 3973,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "747:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "739:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3974,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "758:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3978,
            "mutability": "mutable",
            "name": "collectionCounter",
            "nameLocation": "813:17:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "797:33:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3977,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "797:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 3979,
              "nodeType": "StructuredDocumentation",
              "src": "837:156:29",
              "text": "Collection creator role.\n  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
            },
            "functionSelector": "caff99ce",
            "id": 3984,
            "mutability": "constant",
            "name": "COLLECTION_CREATOR_ROLE",
            "nameLocation": "1022:23:29",
            "nodeType": "VariableDeclaration",
            "scope": 4092,
            "src": "998:86:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3980,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "998:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4c4c454354494f4e5f43524541544f525f524f4c45",
                  "id": 3982,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1058:25:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  },
                  "value": "COLLECTION_CREATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  }
                ],
                "id": 3981,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1048:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1048:36:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3985,
              "nodeType": "StructuredDocumentation",
              "src": "1091:126:29",
              "text": "An event emitted when new collection is created.\n Contains unique name of collection and its address."
            },
            "id": 3991,
            "name": "CollectionCreated",
            "nameLocation": "1228:17:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1253:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "1246:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3989,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1275:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "1259:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:35:29"
            },
            "src": "1222:59:29"
          },
          {
            "body": {
              "id": 4090,
              "nodeType": "Block",
              "src": "1474:659:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4003,
                            "name": "COLLECTION_CREATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3984,
                            "src": "1500:23:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4004,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6603
                              ],
                              "referencedDeclaration": 6603,
                              "src": "1525:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1525:12:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4002,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "1492:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1492:46:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920636f6c6c656374696f6e2063726561746f72",
                        "id": 4007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        },
                        "value": "only collection creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        }
                      ],
                      "id": 4001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1484:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:82:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4009,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:82:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4011,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3994,
                          "src": "1584:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1603:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1595:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4012,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1595:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1595:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1584:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20616464726573732063726561746f72",
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:22:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        },
                        "value": "zero address creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        }
                      ],
                      "id": 4010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1576:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:54:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4019,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:54:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4021,
                            "name": "nameToCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3966,
                            "src": "1648:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 4023,
                          "indexExpression": {
                            "id": 4022,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3996,
                            "src": "1665:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1648:22:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1674:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4024,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1674:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1648:36:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e206e616d6520616c726561647920657869737473",
                        "id": 4029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1686:32:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        },
                        "value": "collection name already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        }
                      ],
                      "id": 4020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1640:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:79:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4031,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:79:29"
                },
                {
                  "assignments": [
                    4034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4034,
                      "mutability": "mutable",
                      "name": "collection",
                      "nameLocation": "1741:10:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 4090,
                      "src": "1730:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$3932",
                        "typeString": "contract Collection"
                      },
                      "typeName": {
                        "id": 4033,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4032,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3932,
                          "src": "1730:10:29"
                        },
                        "referencedDeclaration": 3932,
                        "src": "1730:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4039,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1754:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Collection_$3932_$",
                        "typeString": "function () returns (contract Collection)"
                      },
                      "typeName": {
                        "id": 4036,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4035,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3932,
                          "src": "1758:10:29"
                        },
                        "referencedDeclaration": 3932,
                        "src": "1758:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      }
                    },
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:16:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$3932",
                      "typeString": "contract Collection"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1730:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4045,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1810:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4092",
                              "typeString": "contract CollectionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4092",
                              "typeString": "contract CollectionFactory"
                            }
                          ],
                          "id": 4044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1802:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1802:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1802:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4047,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3994,
                        "src": "1817:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4048,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "1826:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4049,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "1832:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4426",
                          "typeString": "contract Freeport"
                        }
                      },
                      {
                        "id": 4050,
                        "name": "nftAttachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3972,
                        "src": "1842:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                          "typeString": "contract NFTAttachment"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_Freeport_$4426",
                          "typeString": "contract Freeport"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4806",
                          "typeString": "contract NFTAttachment"
                        }
                      ],
                      "expression": {
                        "id": 4040,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4034,
                        "src": "1780:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      },
                      "id": 4042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "1780:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_contract$_Freeport_$4426_$_t_contract$_NFTAttachment_$4806_$returns$__$",
                        "typeString": "function (address,address,string memory,contract Freeport,contract NFTAttachment) external"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:76:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:76:29"
                },
                {
                  "expression": {
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4053,
                        "name": "addressesProxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3976,
                        "src": "1867:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4055,
                      "indexExpression": {
                        "id": 4054,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "1884:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1867:35:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4058,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4034,
                          "src": "1913:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1905:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1905:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1905:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1867:57:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4061,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:57:29"
                },
                {
                  "expression": {
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4062,
                      "name": "collectionCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3978,
                      "src": "1934:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4063,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "1954:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 4064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1954:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1934:41:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4067,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:41:29"
                },
                {
                  "expression": {
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4068,
                        "name": "nameToCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3966,
                        "src": "1986:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 4070,
                      "indexExpression": {
                        "id": 4069,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "2003:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1986:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4073,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4034,
                          "src": "2019:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3932",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2011:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2011:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1986:44:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4076,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:44:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4078,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "2064:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4081,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4034,
                            "src": "2078:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$3932",
                              "typeString": "contract Collection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Collection_$3932",
                              "typeString": "contract Collection"
                            }
                          ],
                          "id": 4080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2070:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4079,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2070:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2070:19:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4077,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3991,
                      "src": "2046:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:44:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4084,
                  "nodeType": "EmitStatement",
                  "src": "2041:49:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4087,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4034,
                        "src": "2115:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Collection_$3932",
                          "typeString": "contract Collection"
                        }
                      ],
                      "id": 4086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2107:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4085,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2107:7:29",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:19:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4000,
                  "id": 4089,
                  "nodeType": "Return",
                  "src": "2100:26:29"
                }
              ]
            },
            "documentation": {
              "id": 3992,
              "nodeType": "StructuredDocumentation",
              "src": "1287:94:29",
              "text": "Deploying a new user collection.\n  Emits a {CollectionCreated} event."
            },
            "functionSelector": "b577fd73",
            "id": 4091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollection",
            "nameLocation": "1395:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3994,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1420:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "1412:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3996,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1443:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "1429:18:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3995,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1411:37:29"
            },
            "returnParameters": {
              "id": 4000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "1465:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1464:9:29"
            },
            "scope": 4092,
            "src": "1386:747:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4093,
        "src": "186:1949:29",
        "usedErrors": []
      }
    ],
    "src": "0:2136:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        "0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        "0x2660dd916ec25bcad9a3dd62c721e438ec0e975817265c1e03c2639b24ac7007": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "CollectionCreated",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xd63CEb7bAeC0465669f974D87ffBEdfE531f5ed8",
      "transactionHash": "0x373e2ae386ee075b5c85336ba60920f215b0e085ba5812f2eb5587a9cb52b34f"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-06-23T12:59:33.713Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "CollectionCreated(string,address)": {
        "notice": "An event emitted when new collection is created. Contains unique name of collection and its address."
      }
    },
    "kind": "user",
    "methods": {
      "COLLECTION_CREATOR_ROLE()": {
        "notice": "Collection creator role.  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
      },
      "createCollection(address,string)": {
        "notice": "Deploying a new user collection.  Emits a {CollectionCreated} event."
      }
    },
    "notice": "This is a contract for creating standalone contracts (collections) for users.",
    "version": 1
  }
}