{
  "contractName": "NFTAttachment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "anonym",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "AnonymAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "MinterAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "OwnerAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "minterAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "ownerAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "anonymAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "_minterFromNftId",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"anonym\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"AnonymAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"MinterAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"OwnerAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"_minterFromNftId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"anonymAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"minterAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"ownerAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AnonymAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means.\"},\"MinterAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\"},\"OwnerAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event.\"}},\"kind\":\"user\",\"methods\":{\"_minterFromNftId(uint256)\":{\"notice\":\"Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\"},\"anonymAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as any account.\"},\"freeport()\":{\"notice\":\"This attachment contract refers to the NFT contract in this variable.\"},\"initialize(address)\":{\"notice\":\"Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\"},\"minterAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format.\"},\"ownerAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards.\"}},\"notice\":\"The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTAttachment.sol\":\"NFTAttachment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed\",\"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xda94a85ba0a26d49cd327cc63b8b54fa5dde8f5d1c5f3c942237096ef896eff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a591e20787048963a028302f0157fea70eab83db641f020169a789effc7d7907\",\"dweb:/ipfs/QmXY3LKPvw5BMrjG4JxWZZ15RR2jhUDktNrZqHqyCewXBG\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429b36651fab917b4cdfa5e9431b96c5bd3ba73392a31e62a4d92b4b4ae85184\",\"dweb:/ipfs/QmY1SgWuSbxgYCPAibNHT4phA71QzzqagZRunwC7Gm19wq\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352\",\"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6014667ab9e057c1810fcb7ef844123c581a34eb8dafc1aaa15f4e0f704620b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3abfde5dc879cf0ef670cd7357410b4fcf2a7ec76306e82f96cb4715b2c51d0\",\"dweb:/ipfs/Qme48SqUCFLhgtgg9ZSpmQuwvitujCkHjDhmDCAtsDgjA3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xd841c561258151c3c22f05feb68c702fc414b112606bd72b848e8a65af128c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e949bb10f10df25903b0ec5eb13a8b9878996abd49897884062645a4123ffb2\",\"dweb:/ipfs/QmQ2Z3qegGykZLAf7Wt1y24wCxxnA3stRMHzy1LBFvxhtX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a\",\"dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d\",\"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f\",\"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0xbcd1257b45589e0b7dc9e40a6874970f15ecbe661acbfa49e273e1a7187f070a\",\"urls\":[\"bzz-raw://937632fcbf6f446b76c44c47d522c057de96f32d14913f7d4b0c26096b72ccb4\",\"dweb:/ipfs/QmYRSnKWvShYEtbTjVK36mcC8sAws5p6yKgZcYkKqBmTjH\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x38f603b6c69541ab197956454fd07a2aecce0c03e19320d7a29902a6af656301\",\"urls\":[\"bzz-raw://5219d3947953ef384ac070fdbacdbb39a6623107ca799383dcec44d86832456e\",\"dweb:/ipfs/QmbiUcxRdGz9cuqoapQuL4pqAguY9Wtf6xq3iw4UncL121\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x589571f85ae8cc227de3ea3b2c7b3d6f8dd5b977755c4c7303cc18c1aede3322\",\"urls\":[\"bzz-raw://33479f8d906835f681a11ae5eeb51af792726764e7a45dab082b84b617ef175c\",\"dweb:/ipfs/QmWaQQNmegKf1Nd2y4M5pnUNNKJQ6NaHQjXJgUC2MqUKwH\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0xc4e1878c459f9b7741a965245659e9e90d241ded479264c22f31efe15ed04aec\",\"urls\":[\"bzz-raw://d4bcafd88cde0d2cca84f87f999c4ba7d04409c3c62384da56f462a96eac3dc5\",\"dweb:/ipfs/QmfMnUk5CYRp6q9JiXTtc1cpoXDatwzSqRfkZjTAKdGHr2\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x7298ad1106ffa5af90d35bf47e214dc28c705f99a3796d644e92b3a492d273b7\",\"urls\":[\"bzz-raw://2ad2298e77090a93310f10e78ba2bfdd5712f2183d662328e197665e1e1d8857\",\"dweb:/ipfs/QmWdotY9DB6a6W2m6qkNKDXeuL7M7Shff45QTii2ktwBUm\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x1d3f9d778f91e75758a3415184eacbbdcd48cea32e05cc66ad0dbda5d2743263\",\"urls\":[\"bzz-raw://e39ed264fcdee725fb2eed77788a13df9e879f28662dd388cd11455e01fc1f4f\",\"dweb:/ipfs/QmdGom9qXRX7YeNS92Rn9QmjLSZ3MbB5hhspeESeRb5V5B\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0x46b10096522c8032a7084f545ee845dcfee110eb896918b4b8fd5e9bfffe8b23\",\"urls\":[\"bzz-raw://9f7983f8e796bb0bb7ddb1b962434787a3c6daf1d459edaf84c58ccc166bba13\",\"dweb:/ipfs/QmYUhfPvvXkYWLdTCHw4yeriaUzn5FW6G1bdQDX1y8UNsi\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0xdd37428ab4740cc4cba878f25999c0f94949a1446c2d5ee30d164352a909cc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c7a0d9223e6d7ef3cf4cbe2d22db198823c11ffb8ed269a7cd31b1c8ba8e1d\",\"dweb:/ipfs/QmWsD5hNAfT6zktKkUbYrMhF1ZGP8t9cC31jk9mUFSkmgY\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0x348f15d2a3b15f56a76622a8ec483cd5c7f6d7b10f5a50658abbf6b29194606b\",\"urls\":[\"bzz-raw://dffbe14631b53fd6f0d78e9cd7498262f29633b61ea31dc5bc8cf25be967c6e3\",\"dweb:/ipfs/QmQD9bXVaUMK4dpJRbqtFTsWKbh4WdCUBXT3MBHSGeWWy7\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0x430f18b7e8e7a369ec254705a064d2411fe0fe2cd1ce546baaedd03aa965edc2\",\"urls\":[\"bzz-raw://b4f8a0c647e900ec91c0ea26614b8318fdaf6cfccc9234538b99e31c92ef635f\",\"dweb:/ipfs/QmUASapjiTqxuYC1dp5EmBKjs4Nh9VzaQGbs2CPTokM9TQ\"]},\"project:/contracts/freeportParts/Upgradeable.sol\":{\"keccak256\":\"0x6edf744da7d19533558fd19dd9db50151671d137603363efd2c69c6bad46434a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dedf9f686f3f736a593d0e3f4b7609c1fe919c969ac82036d1ad68d4c04fdd\",\"dweb:/ipfs/QmU7BcQKJHBVQ91kYacbeUKUC8YBuF2GTrGdrYLBDBzdBi\"]},\"project:/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xd0615c826e26d02b5a981f933b8a9bd27f9459e440397b165e5fcc014b41a835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c02c9558d39e1b6a85b74d07b3c621acdd7740718bb59b2beef8fed0c3b4203\",\"dweb:/ipfs/QmVe9NXaqmuYcWpkaznDqGfv1sGFQsteb5RzaVHZT8UuGZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506114d0806100206000396000f3fe6080604052600436106100ce5760003560e01c806301ffc9a7146100d3578063248a9ca3146101085780632f2ff15d1461013657806336568abe146101585780633659cfe6146101785780634f1ef28614610198578063572b6c05146101ab57806391d14854146101cb5780639470ad85146101eb5780639a86e8ce14610218578063a217fddf1461023a578063b85f8ca91461024f578063c0ba9f551461026f578063c4d66de81461028f578063d2e9277b146102af578063d547741f146102d0578063f9715b8f146102f0575b600080fd5b3480156100df57600080fd5b506100f36100ee366004610ff7565b610310565b60405190151581526020015b60405180910390f35b34801561011457600080fd5b50610128610123366004611021565b610347565b6040519081526020016100ff565b34801561014257600080fd5b5061015661015136600461104f565b61035c565b005b34801561016457600080fd5b5061015661017336600461104f565b610385565b34801561018457600080fd5b5061015661019336600461107f565b610418565b6101566101a63660046110b2565b61043f565b3480156101b757600080fd5b506100f36101c636600461107f565b610454565b3480156101d757600080fd5b506100f36101e636600461104f565b61046a565b3480156101f757600080fd5b5060fb5461020b906001600160a01b031681565b6040516100ff9190611175565b34801561022457600080fd5b5061012860008051602061147b83398151915281565b34801561024657600080fd5b50610128600081565b34801561025b57600080fd5b5061015661026a366004611189565b610495565b34801561027b57600080fd5b5061015661028a366004611189565b610566565b34801561029b57600080fd5b506101566102aa36600461107f565b610689565b3480156102bb57600080fd5b5061020b6102ca366004611021565b60601c90565b3480156102dc57600080fd5b506101566102eb36600461104f565b61072b565b3480156102fc57600080fd5b5061015661030b366004611189565b61074a565b60006001600160e01b03198216637965db0b60e01b148061034157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600090815260c9602052604090206001015490565b61036582610347565b610376816103716107bd565b6107df565b6103808383610843565b505050565b61038d6107bd565b6001600160a01b0316816001600160a01b03161461040a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61041482826108ca565b5050565b6104218161094f565b61043c81604051806020016040528060008152506000610993565b50565b6104488261094f565b61041482826001610993565b600061034160008051602061147b833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b826104b25760405162461bcd60e51b815260040161040190611204565b60006104bc6107bd565b905060006104ca8560601c90565b9050806001600160a01b0316826001600160a01b03161461051b5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610401565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d3228686604051610557929190611235565b60405180910390a35050505050565b826105835760405162461bcd60e51b815260040161040190611204565b600061058d6107bd565b60fb54604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e90604401602060405180830381865afa1580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190611264565b90506000811161064d5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b6044820152606401610401565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610557929190611235565b600054610100900460ff16806106a2575060005460ff16155b6106be5760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff161580156106e0576000805461ffff19166101011790555b6106e8610b0f565b6001600160a01b0382166106fb57600080fd5b60fb80546001600160a01b0319166001600160a01b0384161790558015610414576000805461ff00191690555050565b61073482610347565b610740816103716107bd565b61038083836108ca565b826107675760405162461bcd60e51b815260040161040190611204565b60006107716107bd565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516107af929190611235565b60405180910390a350505050565b60006107c833610454565b156107da575060131936013560601c90565b503390565b6107e9828261046a565b61041457610801816001600160a01b03166014610b19565b61080c836020610b19565b60405160200161081d9291906112fb565b60408051601f198184030181529082905262461bcd60e51b82526104019160040161136a565b61084d828261046a565b61041457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108866107bd565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108d4828261046a565b1561041457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff1916905561090b6107bd565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61095a60003361046a565b61043c5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b6044820152606401610401565b600061099d610cbb565b90506109a884610cd7565b6000835111806109b55750815b156109c6576109c48484610d6a565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610b0857805460ff19166001178155604051610a41908690610a12908590602401611175565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610d6a565b50805460ff19168155610a52610cbb565b6001600160a01b0316826001600160a01b031614610aca5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610401565b610ad385610cd7565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610b17610e55565b565b60606000610b288360026113b3565b610b339060026113d2565b6001600160401b03811115610b4a57610b4a61109c565b6040519080825280601f01601f191660200182016040528015610b74576020820181803683370190505b509050600360fc1b81600081518110610b8f57610b8f6113ea565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610bbe57610bbe6113ea565b60200101906001600160f81b031916908160001a9053506000610be28460026113b3565b610bed9060016113d2565b90505b6001811115610c65576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c2157610c216113ea565b1a60f81b828281518110610c3757610c376113ea565b60200101906001600160f81b031916908160001a90535060049490941c93610c5e81611400565b9050610bf0565b508315610cb45760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610401565b9392505050565b600080516020611434833981519152546001600160a01b031690565b803b610d3b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610401565b60008051602061143483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b610dc95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610401565b600080846001600160a01b031684604051610de49190611417565b600060405180830381855af49150503d8060008114610e1f576040519150601f19603f3d011682016040523d82523d6000602084013e610e24565b606091505b5091509150610e4c828260405180606001604052806027815260200161145460279139610e70565b95945050505050565b610e5d610ea9565b610e65610f24565b610b17600033610f83565b60608315610e7f575081610cb4565b825115610e8f5782518084602001fd5b8160405162461bcd60e51b8152600401610401919061136a565b600054610100900460ff1680610ec2575060005460ff16155b610ede5760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff16158015610f00576000805461ffff19166101011790555b610f08610f8d565b610f10610f8d565b801561043c576000805461ff001916905550565b600054610100900460ff1680610f3d575060005460ff16155b610f595760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff16158015610f7b576000805461ffff19166101011790555b610f00610f8d565b6104148282610843565b600054610100900460ff1680610fa6575060005460ff16155b610fc25760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff16158015610f10576000805461ffff1916610101179055801561043c576000805461ff001916905550565b60006020828403121561100957600080fd5b81356001600160e01b031981168114610cb457600080fd5b60006020828403121561103357600080fd5b5035919050565b6001600160a01b038116811461043c57600080fd5b6000806040838503121561106257600080fd5b8235915060208301356110748161103a565b809150509250929050565b60006020828403121561109157600080fd5b8135610cb48161103a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156110c557600080fd5b82356110d08161103a565b915060208301356001600160401b03808211156110ec57600080fd5b818501915085601f83011261110057600080fd5b8135818111156111125761111261109c565b604051601f8201601f19908116603f0116810190838211818310171561113a5761113a61109c565b8160405282815288602084870101111561115357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6001600160a01b0391909116815260200190565b60008060006040848603121561119e57600080fd5b8335925060208401356001600160401b03808211156111bc57600080fd5b818601915086601f8301126111d057600080fd5b8135818111156111df57600080fd5b8760208285010111156111f157600080fd5b6020830194508093505050509250925092565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006020828403121561127657600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b838110156112e65781810151838201526020016112ce565b838111156112f5576000848401525b50505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161132d8160178501602088016112cb565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161135e8160288401602088016112cb565b01602801949350505050565b60208152600082518060208401526113898160408501602087016112cb565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156113cd576113cd61139d565b500290565b600082198211156113e5576113e561139d565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161140f5761140f61139d565b506000190190565b600082516114298184602087016112cb565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65643d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220e3305585625e8927af21b689e587a592aac800f9265e17def00a8123f89bf37e64736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100ce5760003560e01c806301ffc9a7146100d3578063248a9ca3146101085780632f2ff15d1461013657806336568abe146101585780633659cfe6146101785780634f1ef28614610198578063572b6c05146101ab57806391d14854146101cb5780639470ad85146101eb5780639a86e8ce14610218578063a217fddf1461023a578063b85f8ca91461024f578063c0ba9f551461026f578063c4d66de81461028f578063d2e9277b146102af578063d547741f146102d0578063f9715b8f146102f0575b600080fd5b3480156100df57600080fd5b506100f36100ee366004610ff7565b610310565b60405190151581526020015b60405180910390f35b34801561011457600080fd5b50610128610123366004611021565b610347565b6040519081526020016100ff565b34801561014257600080fd5b5061015661015136600461104f565b61035c565b005b34801561016457600080fd5b5061015661017336600461104f565b610385565b34801561018457600080fd5b5061015661019336600461107f565b610418565b6101566101a63660046110b2565b61043f565b3480156101b757600080fd5b506100f36101c636600461107f565b610454565b3480156101d757600080fd5b506100f36101e636600461104f565b61046a565b3480156101f757600080fd5b5060fb5461020b906001600160a01b031681565b6040516100ff9190611175565b34801561022457600080fd5b5061012860008051602061147b83398151915281565b34801561024657600080fd5b50610128600081565b34801561025b57600080fd5b5061015661026a366004611189565b610495565b34801561027b57600080fd5b5061015661028a366004611189565b610566565b34801561029b57600080fd5b506101566102aa36600461107f565b610689565b3480156102bb57600080fd5b5061020b6102ca366004611021565b60601c90565b3480156102dc57600080fd5b506101566102eb36600461104f565b61072b565b3480156102fc57600080fd5b5061015661030b366004611189565b61074a565b60006001600160e01b03198216637965db0b60e01b148061034157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600090815260c9602052604090206001015490565b61036582610347565b610376816103716107bd565b6107df565b6103808383610843565b505050565b61038d6107bd565b6001600160a01b0316816001600160a01b03161461040a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61041482826108ca565b5050565b6104218161094f565b61043c81604051806020016040528060008152506000610993565b50565b6104488261094f565b61041482826001610993565b600061034160008051602061147b833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b826104b25760405162461bcd60e51b815260040161040190611204565b60006104bc6107bd565b905060006104ca8560601c90565b9050806001600160a01b0316826001600160a01b03161461051b5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610401565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d3228686604051610557929190611235565b60405180910390a35050505050565b826105835760405162461bcd60e51b815260040161040190611204565b600061058d6107bd565b60fb54604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e90604401602060405180830381865afa1580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190611264565b90506000811161064d5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b6044820152606401610401565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610557929190611235565b600054610100900460ff16806106a2575060005460ff16155b6106be5760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff161580156106e0576000805461ffff19166101011790555b6106e8610b0f565b6001600160a01b0382166106fb57600080fd5b60fb80546001600160a01b0319166001600160a01b0384161790558015610414576000805461ff00191690555050565b61073482610347565b610740816103716107bd565b61038083836108ca565b826107675760405162461bcd60e51b815260040161040190611204565b60006107716107bd565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516107af929190611235565b60405180910390a350505050565b60006107c833610454565b156107da575060131936013560601c90565b503390565b6107e9828261046a565b61041457610801816001600160a01b03166014610b19565b61080c836020610b19565b60405160200161081d9291906112fb565b60408051601f198184030181529082905262461bcd60e51b82526104019160040161136a565b61084d828261046a565b61041457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108866107bd565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108d4828261046a565b1561041457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff1916905561090b6107bd565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61095a60003361046a565b61043c5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b6044820152606401610401565b600061099d610cbb565b90506109a884610cd7565b6000835111806109b55750815b156109c6576109c48484610d6a565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610b0857805460ff19166001178155604051610a41908690610a12908590602401611175565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610d6a565b50805460ff19168155610a52610cbb565b6001600160a01b0316826001600160a01b031614610aca5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610401565b610ad385610cd7565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610b17610e55565b565b60606000610b288360026113b3565b610b339060026113d2565b6001600160401b03811115610b4a57610b4a61109c565b6040519080825280601f01601f191660200182016040528015610b74576020820181803683370190505b509050600360fc1b81600081518110610b8f57610b8f6113ea565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610bbe57610bbe6113ea565b60200101906001600160f81b031916908160001a9053506000610be28460026113b3565b610bed9060016113d2565b90505b6001811115610c65576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c2157610c216113ea565b1a60f81b828281518110610c3757610c376113ea565b60200101906001600160f81b031916908160001a90535060049490941c93610c5e81611400565b9050610bf0565b508315610cb45760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610401565b9392505050565b600080516020611434833981519152546001600160a01b031690565b803b610d3b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610401565b60008051602061143483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b610dc95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610401565b600080846001600160a01b031684604051610de49190611417565b600060405180830381855af49150503d8060008114610e1f576040519150601f19603f3d011682016040523d82523d6000602084013e610e24565b606091505b5091509150610e4c828260405180606001604052806027815260200161145460279139610e70565b95945050505050565b610e5d610ea9565b610e65610f24565b610b17600033610f83565b60608315610e7f575081610cb4565b825115610e8f5782518084602001fd5b8160405162461bcd60e51b8152600401610401919061136a565b600054610100900460ff1680610ec2575060005460ff16155b610ede5760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff16158015610f00576000805461ffff19166101011790555b610f08610f8d565b610f10610f8d565b801561043c576000805461ff001916905550565b600054610100900460ff1680610f3d575060005460ff16155b610f595760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff16158015610f7b576000805461ffff19166101011790555b610f00610f8d565b6104148282610843565b600054610100900460ff1680610fa6575060005460ff16155b610fc25760405162461bcd60e51b81526004016104019061127d565b600054610100900460ff16158015610f10576000805461ffff1916610101179055801561043c576000805461ff001916905550565b60006020828403121561100957600080fd5b81356001600160e01b031981168114610cb457600080fd5b60006020828403121561103357600080fd5b5035919050565b6001600160a01b038116811461043c57600080fd5b6000806040838503121561106257600080fd5b8235915060208301356110748161103a565b809150509250929050565b60006020828403121561109157600080fd5b8135610cb48161103a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156110c557600080fd5b82356110d08161103a565b915060208301356001600160401b03808211156110ec57600080fd5b818501915085601f83011261110057600080fd5b8135818111156111125761111261109c565b604051601f8201601f19908116603f0116810190838211818310171561113a5761113a61109c565b8160405282815288602084870101111561115357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6001600160a01b0391909116815260200190565b60008060006040848603121561119e57600080fd5b8335925060208401356001600160401b03808211156111bc57600080fd5b818601915086601f8301126111d057600080fd5b8135818111156111df57600080fd5b8760208285010111156111f157600080fd5b6020830194508093505050509250925092565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006020828403121561127657600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b838110156112e65781810151838201526020016112ce565b838111156112f5576000848401525b50505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161132d8160178501602088016112cb565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161135e8160288401602088016112cb565b01602801949350505050565b60208152600082518060208401526113898160408501602087016112cb565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156113cd576113cd61139d565b500290565b600082198211156113e5576113e561139d565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161140f5761140f61139d565b506000190190565b600082516114298184602087016112cb565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65643d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220e3305585625e8927af21b689e587a592aac800f9265e17def00a8123f89bf37e64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11413:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:53",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:53",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:53"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:53",
                "type": ""
              }
            ],
            "src": "14:286:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:53"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:53",
                "type": ""
              }
            ],
            "src": "305:187:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "567:110:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "613:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "622:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "625:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "615:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "615:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "615:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "588:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "597:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "584:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "609:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "580:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "577:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "638:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "661:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "648:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "533:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "544:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "556:6:53",
                "type": ""
              }
            ],
            "src": "497:180:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "783:76:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "793:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "816:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "793:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "835:9:53"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "828:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:25:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "828:25:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "752:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "763:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "774:4:53",
                "type": ""
              }
            ],
            "src": "682:177:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "909:86:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "932:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "943:5:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "958:3:53",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "963:1:53",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "954:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "954:11:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "967:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "950:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "950:19:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "939:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "939:31:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "929:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:42:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "922:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:50:53"
                  },
                  "nodeType": "YulIf",
                  "src": "919:70:53"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "898:5:53",
                "type": ""
              }
            ],
            "src": "864:131:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1087:228:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1133:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1142:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1145:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1135:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1135:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1135:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1108:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1117:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1104:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1129:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1100:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1097:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1181:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1168:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1168:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1158:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1200:45:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1230:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1241:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1226:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1226:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1213:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:32:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1204:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1279:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1254:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1254:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1254:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1294:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1304:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1294:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1045:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1056:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1068:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1076:6:53",
                "type": ""
              }
            ],
            "src": "1000:315:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1390:177:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1436:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1445:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1448:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1438:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1438:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1411:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1420:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1407:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1432:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1403:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1400:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1461:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1487:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1474:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1465:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1531:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1506:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1506:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1506:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1556:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1356:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1367:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1379:6:53",
                "type": ""
              }
            ],
            "src": "1320:247:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1604:95:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1621:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1628:3:53",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1633:10:53",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1624:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1624:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1614:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1614:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1614:31:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1661:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1664:4:53",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1654:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1654:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1654:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1685:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1688:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1678:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1678:15:53"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1572:127:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1800:960:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1846:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1855:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1858:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1848:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1848:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1848:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1821:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1830:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1817:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1817:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1842:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1813:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1810:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1871:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1897:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1884:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1875:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1941:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1916:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1916:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1916:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1956:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1966:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1956:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1980:46:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2022:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1994:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:32:53"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1984:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2035:28:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2053:2:53",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:1:53",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2049:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:10:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:1:53",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2045:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:18:53"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2039:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2090:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2099:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2102:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2092:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2092:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2092:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2078:6:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2086:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2075:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:14:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2072:34:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2115:32:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2129:9:53"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2140:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2125:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:22:53"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2119:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2195:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2204:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2207:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2197:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2197:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2197:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2174:2:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2178:4:53",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2170:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2170:13:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2185:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2166:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2166:27:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2159:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2159:35:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2156:55:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2220:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2243:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2230:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2230:16:53"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2224:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2269:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2271:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2271:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2271:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2261:2:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2265:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2258:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2258:10:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2255:36:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2300:17:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2314:2:53",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2310:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:7:53"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2304:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2326:23:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2346:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2340:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:9:53"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2330:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2358:71:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2380:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "2404:2:53"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2408:4:53",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2400:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2400:13:53"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2415:2:53"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2396:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2396:22:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2420:2:53",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2392:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2392:31:53"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2425:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2388:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:40:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2376:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2376:53:53"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2362:10:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2488:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2490:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2490:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2490:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2447:10:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2459:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2444:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2444:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2467:10:53"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2479:6:53"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2464:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2441:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2441:46:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2438:72:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2526:2:53",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2530:10:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2519:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2519:22:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2519:22:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2557:6:53"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2565:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2550:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2550:18:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2550:18:53"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2614:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2623:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2626:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2616:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2616:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2616:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2591:2:53"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2595:2:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2587:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2587:11:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2600:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2583:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:20:53"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2605:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2580:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:33:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2577:53:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2656:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2664:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2652:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2652:15:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2673:2:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2677:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2669:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2669:11:53"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2682:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2639:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2639:46:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2639:46:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2709:6:53"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2717:2:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2705:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2705:15:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2722:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2701:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2701:24:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2727:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2694:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2694:35:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2694:35:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2738:16:53",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2748:6:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1758:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1769:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1781:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1789:6:53",
                "type": ""
              }
            ],
            "src": "1704:1056:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2883:102:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2893:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2905:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2916:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2901:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2893:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2935:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2950:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2966:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2971:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2962:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2962:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2975:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2958:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2958:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2946:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2928:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2928:51:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$4467__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2852:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2863:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2874:4:53",
                "type": ""
              }
            ],
            "src": "2765:220:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3096:553:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3142:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3151:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3154:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3144:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3144:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3144:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3117:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3126:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3113:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3138:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3109:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3109:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3106:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3167:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3190:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3177:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3177:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3167:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3209:46:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3240:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3251:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3236:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3236:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3223:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:32:53"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3213:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3264:28:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3282:2:53",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3286:1:53",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3278:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3278:10:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3290:1:53",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3274:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3274:18:53"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3268:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3319:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3328:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3331:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3321:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3321:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3321:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3307:6:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3315:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3304:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:14:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3301:34:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3344:32:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3358:9:53"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3369:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3354:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3354:22:53"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3348:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3424:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3433:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3436:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3426:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3426:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3426:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3403:2:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3407:4:53",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3399:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3399:13:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3414:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3395:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3395:27:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3388:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:35:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3385:55:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3449:30:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3476:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3463:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:16:53"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3453:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3506:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3515:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3518:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3508:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3508:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3508:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3494:6:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3502:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3491:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3491:14:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3488:34:53"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3572:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3581:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3584:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3574:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3574:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3574:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3545:2:53"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3549:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3541:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3541:15:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3558:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3537:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3537:24:53"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3563:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3534:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3534:37:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3531:57:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3597:21:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3611:2:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3615:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3607:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3607:11:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3597:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3627:16:53",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "3637:6:53"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3627:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3046:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3057:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3069:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3077:6:53",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3085:6:53",
                "type": ""
              }
            ],
            "src": "2990:659:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3741:177:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3787:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3796:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3799:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3789:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3789:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3789:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3762:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3771:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3758:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3758:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3783:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3754:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3751:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3812:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3838:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3825:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3825:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3816:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3882:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3857:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3857:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3857:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3907:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3897:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$4467",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3707:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3718:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3730:6:53",
                "type": ""
              }
            ],
            "src": "3654:264:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3993:110:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4039:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4048:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4051:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4041:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4041:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4041:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4014:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4023:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4010:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4010:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4035:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4006:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "4003:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4064:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4087:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4074:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4064:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3959:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3970:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3982:6:53",
                "type": ""
              }
            ],
            "src": "3923:180:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4209:102:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4219:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4231:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4242:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4227:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4219:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4261:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4276:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4292:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4297:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4288:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4288:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4301:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4284:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4284:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4272:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4272:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4254:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4254:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4254:51:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4178:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4189:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4200:4:53",
                "type": ""
              }
            ],
            "src": "4108:203:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4490:237:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4507:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4518:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4500:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4500:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4541:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4552:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4537:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4537:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4557:2:53",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4530:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4530:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4530:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4580:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4591:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4576:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4576:18:53"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4596:34:53",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4569:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4569:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4569:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4651:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4662:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4647:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4647:18:53"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4667:17:53",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4640:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4640:45:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4640:45:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4694:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4706:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4717:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4702:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4702:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4694:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4467:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4481:4:53",
                "type": ""
              }
            ],
            "src": "4316:411:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4906:173:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4923:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4934:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4916:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4916:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4916:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4957:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4968:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4953:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4953:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4973:2:53",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4946:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4946:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4946:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4996:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5007:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4992:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4992:18:53"
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5012:25:53",
                        "type": "",
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4985:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4985:53:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4985:53:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5047:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5059:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5070:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5055:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5055:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5047:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4883:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4897:4:53",
                "type": ""
              }
            ],
            "src": "4732:347:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5258:161:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5275:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5286:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5268:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5268:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5268:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5309:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5320:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5305:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5305:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5325:2:53",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5298:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5298:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5348:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5359:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5344:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5344:18:53"
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5364:13:53",
                        "type": "",
                        "value": "Only minter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5337:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:41:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5337:41:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5387:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5399:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5410:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5395:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5395:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5387:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5235:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5249:4:53",
                "type": ""
              }
            ],
            "src": "5084:335:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5553:259:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5570:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5581:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5563:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5563:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5563:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5604:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5615:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5600:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5600:18:53"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5620:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5593:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5593:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5593:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5653:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5664:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5649:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5649:18:53"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5669:6:53"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5677:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5636:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:48:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5636:48:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5708:9:53"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5719:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5704:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5704:22:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5728:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5700:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5700:31:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5733:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5693:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5693:42:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5693:42:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5744:62:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5760:9:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5779:6:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5787:2:53",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5775:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5775:15:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5796:2:53",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5792:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5792:7:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5771:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5771:29:53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5756:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:45:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5803:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5752:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5752:54:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5744:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5514:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5525:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5533:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5544:4:53",
                "type": ""
              }
            ],
            "src": "5424:388:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5946:145:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5956:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5968:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5979:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5964:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5964:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5956:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5998:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6013:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6029:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6034:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6025:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6025:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6038:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6021:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6021:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6009:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5991:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5991:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5991:51:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6062:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6073:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6058:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6058:18:53"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6078:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6051:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6051:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6051:34:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5907:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5918:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5926:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5937:4:53",
                "type": ""
              }
            ],
            "src": "5817:274:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6177:103:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6223:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6232:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6235:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6225:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6225:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6225:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6198:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6207:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6194:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6194:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6219:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6190:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6190:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "6187:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6248:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6264:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6258:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6258:16:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6248:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6143:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6154:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6166:6:53",
                "type": ""
              }
            ],
            "src": "6096:184:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6459:168:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6476:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6487:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6469:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6469:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6469:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6510:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6521:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6506:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6506:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6526:2:53",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6499:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6499:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6499:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6549:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6560:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6545:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6545:18:53"
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6565:20:53",
                        "type": "",
                        "value": "Only current owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6538:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6538:48:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6538:48:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6595:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6607:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6618:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6603:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6595:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6436:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6450:4:53",
                "type": ""
              }
            ],
            "src": "6285:342:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6806:236:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6823:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6834:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6816:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6816:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6816:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6857:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6868:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6853:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6853:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6873:2:53",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6846:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6846:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6846:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6896:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6907:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6892:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6892:18:53"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6912:34:53",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6967:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6978:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6963:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6963:18:53"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6983:16:53",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6956:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6956:44:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6956:44:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7009:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7021:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7032:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7017:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7017:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7009:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6783:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6797:4:53",
                "type": ""
              }
            ],
            "src": "6632:410:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7100:205:53",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7110:10:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7119:1:53",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7114:1:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7179:63:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7204:3:53"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7209:1:53"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7200:3:53"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7200:11:53"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7223:3:53"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7228:1:53"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7219:3:53"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7219:11:53"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7213:5:53"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7213:18:53"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7193:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7193:39:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7193:39:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7140:1:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7143:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7137:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:13:53"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7151:19:53",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7153:15:53",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7162:1:53"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7165:2:53",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7158:3:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7158:10:53"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7153:1:53"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7133:3:53",
                    "statements": []
                  },
                  "src": "7129:113:53"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7268:31:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7281:3:53"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7286:6:53"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7277:3:53"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7277:16:53"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7295:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7270:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7270:27:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7270:27:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7257:1:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7260:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7254:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7254:13:53"
                  },
                  "nodeType": "YulIf",
                  "src": "7251:48:53"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7078:3:53",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7083:3:53",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7088:6:53",
                "type": ""
              }
            ],
            "src": "7047:258:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7699:397:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7716:3:53"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7721:25:53",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7709:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:38:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7709:38:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7756:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7776:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7770:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7770:13:53"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7760:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7818:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7826:4:53",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7814:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7814:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7837:3:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7842:2:53",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7833:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7833:12:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7847:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7792:21:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7792:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7792:62:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7863:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7877:3:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7882:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7873:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7873:16:53"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7867:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7909:2:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7913:2:53",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7905:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7905:11:53"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7918:19:53",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7898:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7898:40:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7898:40:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7947:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7969:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7963:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7963:13:53"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "7951:8:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8011:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8019:4:53",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8007:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8007:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8030:2:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8034:2:53",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8026:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8026:11:53"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "8039:8:53"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7985:21:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7985:63:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7985:63:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8057:33:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8072:2:53"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "8076:8:53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8068:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8068:17:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8087:2:53",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8064:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8064:26:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8057:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7667:3:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7672:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7680:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7691:3:53",
                "type": ""
              }
            ],
            "src": "7310:786:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8222:262:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8239:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8250:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8232:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8232:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8232:21:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8262:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8282:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8276:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8276:13:53"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8266:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8309:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8320:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8305:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8305:18:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8325:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8298:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8298:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8298:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8367:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8375:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8363:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8363:15:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8384:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8395:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8380:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8380:18:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8400:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8341:21:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8341:66:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8341:66:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8416:62:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8432:9:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8451:6:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8459:2:53",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8447:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8447:15:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8468:2:53",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8464:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8464:7:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8443:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8443:29:53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8428:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8428:45:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8475:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8424:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8424:54:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8416:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8191:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8202:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8213:4:53",
                "type": ""
              }
            ],
            "src": "8101:383:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8663:160:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8680:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8691:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8673:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8673:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8673:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8714:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8725:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8710:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8710:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8730:2:53",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8703:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8703:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8703:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8753:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8764:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8749:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8749:18:53"
                      },
                      {
                        "hexValue": "4f6e6c792041646d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8769:12:53",
                        "type": "",
                        "value": "Only Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8742:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8742:40:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8742:40:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8791:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8803:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8814:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8799:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8799:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8791:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8640:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8654:4:53",
                "type": ""
              }
            ],
            "src": "8489:334:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9002:237:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9019:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9030:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9012:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9012:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9012:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9053:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9064:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9049:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9049:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9069:2:53",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9042:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9042:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9092:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9103:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9088:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9088:18:53"
                      },
                      {
                        "hexValue": "45524331393637557067726164653a207570677261646520627265616b732066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9108:34:53",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9081:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9081:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9081:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9163:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9174:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9159:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9159:18:53"
                      },
                      {
                        "hexValue": "757274686572207570677261646573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9179:17:53",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9152:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9152:45:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9152:45:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9206:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9218:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9229:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9214:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9206:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8979:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8993:4:53",
                "type": ""
              }
            ],
            "src": "8828:411:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9276:95:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9293:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9300:3:53",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9305:10:53",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9296:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9296:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9286:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9286:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9286:31:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9333:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9336:4:53",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9326:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9326:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9326:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9357:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9360:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9350:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9350:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9350:15:53"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9244:127:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9428:116:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9487:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9489:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9489:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9489:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9459:1:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9452:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9452:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9445:6:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9445:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9467:1:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9478:1:53",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9474:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9474:6:53"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9482:1:53"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "9470:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9470:14:53"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9464:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9464:21:53"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9441:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9441:45:53"
                  },
                  "nodeType": "YulIf",
                  "src": "9438:71:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9518:20:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9533:1:53"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9536:1:53"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9529:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9529:9:53"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "9518:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9407:1:53",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9410:1:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "9416:7:53",
                "type": ""
              }
            ],
            "src": "9376:168:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9597:80:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9624:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9626:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9626:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9626:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9613:1:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9620:1:53"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9616:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9616:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9610:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9610:13:53"
                  },
                  "nodeType": "YulIf",
                  "src": "9607:39:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9655:16:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9666:1:53"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9669:1:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9662:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9662:9:53"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9655:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9580:1:53",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9583:1:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9589:3:53",
                "type": ""
              }
            ],
            "src": "9549:128:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9714:95:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9731:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9738:3:53",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9743:10:53",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9734:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9734:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9724:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9724:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9724:31:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9771:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9774:4:53",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9764:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9764:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9764:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9795:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9798:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9788:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9788:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9788:15:53"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "9682:127:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9861:89:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9888:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9890:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9890:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9890:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9881:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9874:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9874:13:53"
                  },
                  "nodeType": "YulIf",
                  "src": "9871:39:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9919:25:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9930:5:53"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9941:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9937:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9937:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9926:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9926:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9919:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9843:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9853:3:53",
                "type": ""
              }
            ],
            "src": "9814:136:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10129:182:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10146:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10157:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10139:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10139:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10139:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10180:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10191:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10176:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10176:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10196:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10169:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10169:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10169:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10219:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10230:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10215:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10215:18:53"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10235:34:53",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10208:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10208:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10208:62:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10279:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10291:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10302:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10287:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10287:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10279:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10106:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10120:4:53",
                "type": ""
              }
            ],
            "src": "9955:356:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10490:235:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10507:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10518:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10500:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10500:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10500:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10541:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10552:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10537:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10537:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10557:2:53",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10530:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10530:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10530:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10580:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10591:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10576:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10576:18:53"
                      },
                      {
                        "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10596:34:53",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10569:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10569:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10569:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10651:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10662:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10647:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10647:18:53"
                      },
                      {
                        "hexValue": "6f74206120636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10667:15:53",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10640:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10640:43:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10640:43:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10692:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10704:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10715:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10700:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10700:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10692:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10467:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10481:4:53",
                "type": ""
              }
            ],
            "src": "10316:409:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10904:228:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10921:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10932:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10914:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10914:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10914:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10955:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10966:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10951:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10951:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10971:2:53",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10944:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10944:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10944:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10994:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11005:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10990:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10990:18:53"
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11010:34:53",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10983:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10983:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10983:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11065:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11076:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11061:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11061:18:53"
                      },
                      {
                        "hexValue": "6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11081:8:53",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11054:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11054:36:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11054:36:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11099:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11111:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11122:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11107:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11107:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11099:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10881:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10895:4:53",
                "type": ""
              }
            ],
            "src": "10730:402:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11274:137:53",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11284:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11304:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11298:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11298:13:53"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11288:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11346:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11354:4:53",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11342:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11342:17:53"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11361:3:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11366:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "11320:21:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11320:53:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11320:53:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11382:23:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11393:3:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11398:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11389:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11389:16:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11382:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11250:3:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11255:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11266:3:53",
                "type": ""
              }
            ],
            "src": "11137:274:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$4467__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_contract$_Freeport_$4467(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"0 is not a valid NFT ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Only minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only current owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "626:3629:32:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "626:3629:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:225:0;;;;;;;;;;-1:-1:-1;4473:225:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:53;;463:22;445:41;;433:2;418:18;4473:225:0;;;;;;;;5781:121;;;;;;;;;;-1:-1:-1;5781:121:0;;;;;:::i;:::-;;:::i;:::-;;;828:25:53;;;816:2;801:18;5781:121:0;682:177:53;6152:145:0;;;;;;;;;;-1:-1:-1;6152:145:0;;;;;:::i;:::-;;:::i;:::-;;7169:214;;;;;;;;;;-1:-1:-1;7169:214:0;;;;;:::i;:::-;;:::i;882:186:4:-;;;;;;;;;;-1:-1:-1;882:186:4;;;;;:::i;:::-;;:::i;1074:214::-;;;;;;:::i;:::-;;:::i;426:143:45:-;;;;;;;;;;-1:-1:-1;426:143:45;;;;;:::i;:::-;;:::i;4785:137:0:-;;;;;;;;;;-1:-1:-1;4785:137:0;;;;;:::i;:::-;;:::i;780:24:32:-;;;;;;;;;;-1:-1:-1;780:24:32;;;;-1:-1:-1;;;;;780:24:32;;;;;;;;;;:::i;345:74:45:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;345:74:45;;2794:49:0;;;;;;;;;;-1:-1:-1;2794:49:0;2839:4;2794:49;;2553:360:32;;;;;;;;;;-1:-1:-1;2553:360:32;;;;;:::i;:::-;;:::i;3101:356::-;;;;;;;;;;-1:-1:-1;3101:356:32;;;;;:::i;:::-;;:::i;1178:180::-;;;;;;;;;;-1:-1:-1;1178:180:32;;;;;:::i;:::-;;:::i;4021:232::-;;;;;;;;;;-1:-1:-1;4021:232:32;;;;;:::i;:::-;4213:7;4135:86;;4021:232;6531:147:0;;;;;;;;;;-1:-1:-1;6531:147:0;;;;;:::i;:::-;;:::i;3545:248:32:-;;;;;;;;;;-1:-1:-1;3545:248:32;;;;;:::i;:::-;;:::i;4473:225:0:-;4558:4;-1:-1:-1;;;;;;4581:58:0;;-1:-1:-1;;;4581:58:0;;:110;;-1:-1:-1;;;;;;;;;;1127:51:15;;;4655:36:0;4574:117;4473:225;-1:-1:-1;;4473:225:0:o;5781:121::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;;5781:121::o;6152:145::-;6235:18;6248:4;6235:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;:::-;4358:10;:30::i;:::-;6265:25:::1;6276:4;6282:7;6265:10;:25::i;:::-;6152:145:::0;;;:::o;7169:214::-;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7264:23:0;:7;-1:-1:-1;;;;;7264:23:0;;7256:83;;;;-1:-1:-1;;;7256:83:0;;4518:2:53;7256:83:0;;;4500:21:53;4557:2;4537:18;;;4530:30;4596:34;4576:18;;;4569:62;-1:-1:-1;;;4647:18:53;;;4640:45;4702:19;;7256:83:0;;;;;;;;;7350:26;7362:4;7368:7;7350:11;:26::i;:::-;7169:214;;:::o;882:186:4:-;955:36;973:17;955;:36::i;:::-;1001:60;1025:17;1044:9;;;;;;;;;;;;1055:5;1001:23;:60::i;:::-;882:186;:::o;1074:214::-;1181:36;1199:17;1181;:36::i;:::-;1227:54;1251:17;1270:4;1276;1227:23;:54::i;426:143:45:-;502:4;525:37;-1:-1:-1;;;;;;;;;;;552:9:45;4785:137:0;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;;;;4785:137::o;2553:360:32:-;2651:5;2643:53;;;;-1:-1:-1;;;2643:53:32;;;;;;;:::i;:::-;2706:14;2723:12;:10;:12::i;:::-;2706:29;;2745:20;2768:23;2785:5;4213:7;4135:86;;4021:232;2768:23;2745:46;;2819:12;-1:-1:-1;;;;;2809:22:32;:6;-1:-1:-1;;;;;2809:22:32;;2801:46;;;;-1:-1:-1;;;2801:46:32;;5286:2:53;2801:46:32;;;5268:21:53;5325:2;5305:18;;;5298:30;-1:-1:-1;;;5344:18:53;;;5337:41;5395:18;;2801:46:32;5084:335:53;2801:46:32;2888:5;2880:6;-1:-1:-1;;;;;2862:44:32;;2895:10;;2862:44;;;;;;;:::i;:::-;;;;;;;;2633:280;;2553:360;;;:::o;3101:356::-;3198:5;3190:53;;;;-1:-1:-1;;;3190:53:32;;;;;;;:::i;:::-;3253:13;3269:12;:10;:12::i;:::-;3309:8;;:32;;-1:-1:-1;;;3309:32:32;;-1:-1:-1;;;;;6009:32:53;;;3309::32;;;5991:51:53;6058:18;;;6051:34;;;3253:28:32;;-1:-1:-1;3291:15:32;;3309:8;;;;:18;;5964::53;;3309:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3291:50;;3369:1;3359:7;:11;3351:42;;;;-1:-1:-1;;;3351:42:32;;6487:2:53;3351:42:32;;;6469:21:53;6526:2;6506:18;;;6499:30;-1:-1:-1;;;6545:18:53;;;6538:48;6603:18;;3351:42:32;6285:342:53;3351:42:32;3432:5;3425;-1:-1:-1;;;;;3408:42:32;;3439:10;;3408:42;;;;;;;:::i;1178:180::-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;1247:22:32::1;:20;:22::i;:::-;-1:-1:-1::0;;;;;1288:32:32;::::1;1280:41;;;::::0;::::1;;1331:8;:20:::0;;-1:-1:-1;;;;;;1331:20:32::1;-1:-1:-1::0;;;;;1331:20:32;::::1;;::::0;;1714:66:3;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;1438:348;1178:180:32;:::o;6531:147:0:-;6615:18;6628:4;6615:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;4358:30::-;6645:26:::1;6657:4;6663:7;6645:11;:26::i;3545:248:32:-:0;3643:5;3635:53;;;;-1:-1:-1;;;3635:53:32;;;;;;;:::i;:::-;3698:14;3715:12;:10;:12::i;:::-;3698:29;;3768:5;3760:6;-1:-1:-1;;;;;3742:44:32;;3775:10;;3742:44;;;;;;;:::i;:::-;;;;;;;;3625:168;3545:248;;;:::o;575:371:45:-;637:14;667:30;686:10;667:18;:30::i;:::-;663:277;;;-1:-1:-1;;;852:14:45;848:23;835:37;831:2;827:46;575:371;:::o;663:277::-;-1:-1:-1;901:10:11;;575:371:45:o;5203:397:0:-;5282:22;5290:4;5296:7;5282;:22::i;:::-;5278:316;;5411:52;5450:7;-1:-1:-1;;;;;5411:52:0;5460:2;5411:30;:52::i;:::-;5518:49;5557:4;5564:2;5518:30;:49::i;:::-;5334:247;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5334:247:0;;;;;;;;;;-1:-1:-1;;;5320:263:0;;;;;;;:::i;8381:224::-;8455:22;8463:4;8469:7;8455;:22::i;:::-;8450:149;;8493:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8493:29:0;;;;;;;;;:36;;-1:-1:-1;;8493:36:0;8525:4;8493:36;;;8575:12;:10;:12::i;:::-;-1:-1:-1;;;;;8548:40:0;8566:7;-1:-1:-1;;;;;8548:40:0;8560:4;8548:40;;;;;;;;;;8381:224;;:::o;8611:225::-;8685:22;8693:4;8699:7;8685;:22::i;:::-;8681:149;;;8755:5;8723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8723:29:0;;;;;;;;;:37;;-1:-1:-1;;8723:37:0;;;8806:12;:10;:12::i;:::-;-1:-1:-1;;;;;8779:40:0;8797:7;-1:-1:-1;;;;;8779:40:0;8791:4;8779:40;;;;;;;;;;8611:225;;:::o;575:151:49:-;665:39;2839:4:0;693:10:49;665:7;:39::i;:::-;657:62;;;;-1:-1:-1;;;657:62:49;;8691:2:53;657:62:49;;;8673:21:53;8730:2;8710:18;;;8703:30;-1:-1:-1;;;8749:18:53;;;8742:40;8799:18;;657:62:49;8489:334:53;2851:1322:1;2965:25;2993:20;:18;:20::i;:::-;2965:48;;3066:37;3085:17;3066:18;:37::i;:::-;3131:1;3117:4;:11;:15;:28;;;;3136:9;3117:28;3113:105;;;3161:46;3183:17;3202:4;3161:21;:46::i;:::-;;3113:105;844:66;3417:21;;;;3412:755;;3530:28;;-1:-1:-1;;3530:28:1;3554:4;3530:28;;;3646:122;;3572:210;;3611:17;;3646:122;;3733:17;;3646:122;;;:::i;:::-;;;;-1:-1:-1;;3646:122:1;;;;;;;;;;;;;;-1:-1:-1;;;;;3646:122:1;-1:-1:-1;;;3646:122:1;;;3572:21;:210::i;:::-;-1:-1:-1;3796:29:1;;-1:-1:-1;;3796:29:1;;;3912:20;:18;:20::i;:::-;-1:-1:-1;;;;;3891:41:1;:17;-1:-1:-1;;;;;3891:41:1;;3883:101;;;;-1:-1:-1;;;3883:101:1;;9030:2:53;3883:101:1;;;9012:21:53;9069:2;9049:18;;;9042:30;9108:34;9088:18;;;9081:62;-1:-1:-1;;;9159:18:53;;;9152:45;9214:19;;3883:101:1;8828:411:53;3883:101:1;4073:37;4092:17;4073:18;:37::i;:::-;4129:27;;-1:-1:-1;;;;;4129:27:1;;;;;;;;3412:755;2955:1218;;2851:1322;;;:::o;261:78:45:-;312:20;:18;:20::i;:::-;261:78::o;1542:437:13:-;1617:13;1642:19;1674:10;1678:6;1674:1;:10;:::i;:::-;:14;;1687:1;1674:14;:::i;:::-;-1:-1:-1;;;;;1664:25:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:25:13;;1642:47;;-1:-1:-1;;;1699:6:13;1706:1;1699:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1699:15:13;;;;;;;;;-1:-1:-1;;;1724:6:13;1731:1;1724:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1724:15:13;;;;;;;;-1:-1:-1;1754:9:13;1766:10;1770:6;1766:1;:10;:::i;:::-;:14;;1779:1;1766:14;:::i;:::-;1754:26;;1749:128;1786:1;1782;:5;1749:128;;;-1:-1:-1;;;1829:5:13;1837:3;1829:11;1820:21;;;;;;;:::i;:::-;;;;1808:6;1815:1;1808:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1808:33:13;;;;;;;;-1:-1:-1;1865:1:13;1855:11;;;;;1789:3;;;:::i;:::-;;;1749:128;;;-1:-1:-1;1894:10:13;;1886:55;;;;-1:-1:-1;;;1886:55:13;;10157:2:53;1886:55:13;;;10139:21:53;;;10176:18;;;10169:30;10235:34;10215:18;;;10208:62;10287:18;;1886:55:13;9955:356:53;1886:55:13;1965:6;1542:437;-1:-1:-1;;;1542:437:13:o;1456:151:1:-;-1:-1:-1;;;;;;;;;;;1535:65:1;-1:-1:-1;;;;;1535:65:1;;1456:151::o;1698:281::-;1089:20:10;;1771:106:1;;;;-1:-1:-1;;;1771:106:1;;10518:2:53;1771:106:1;;;10500:21:53;10557:2;10537:18;;;10530:30;10596:34;10576:18;;;10569:62;-1:-1:-1;;;10647:18:53;;;10640:43;10700:19;;1771:106:1;10316:409:53;1771:106:1;-1:-1:-1;;;;;;;;;;;1887:85:1;;-1:-1:-1;;;;;;1887:85:1;-1:-1:-1;;;;;1887:85:1;;;;;;;;;;1698:281::o;7352:437::-;7435:12;1089:20:10;;7459:88:1;;;;-1:-1:-1;;;7459:88:1;;10932:2:53;7459:88:1;;;10914:21:53;10971:2;10951:18;;;10944:30;11010:34;10990:18;;;10983:62;-1:-1:-1;;;11061:18:53;;;11054:36;11107:19;;7459:88:1;10730:402:53;7459:88:1;7618:12;7632:23;7659:6;-1:-1:-1;;;;;7659:19:1;7679:4;7659:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:67;;;;7701:81;7719:7;7728:10;7701:81;;;;;;;;;;;;;;;;;:17;:81::i;:::-;7694:88;7352:437;-1:-1:-1;;;;;7352:437:1:o;404:165:49:-;453:24;:22;:24::i;:::-;487:22;:20;:22::i;:::-;520:42;2839:4:0;551:10:49;520;:42::i;7795:725:1:-;7910:12;7938:7;7934:580;;;-1:-1:-1;7968:10:1;7961:17;;7934:580;8079:17;;:21;8075:429;;8337:10;8331:17;8397:15;8384:10;8380:2;8376:19;8369:44;8075:429;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;650:149:4:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;715:33:4::1;:31;:33::i;:::-;758:34;:32;:34::i;:::-;1718:14:3::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;1438:348;650:149:4:o;2390:173:0:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;2453:26:0::1;:24;:26::i;7948:110::-:0;8026:25;8037:4;8043:7;8026:10;:25::i;647:71:1:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1714:66;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;1438:348;647:71:1:o;14:286:53:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:53;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:53;;497:180;-1:-1:-1;497:180:53:o;864:131::-;-1:-1:-1;;;;;939:31:53;;929:42;;919:70;;985:1;982;975:12;1000:315;1068:6;1076;1129:2;1117:9;1108:7;1104:23;1100:32;1097:52;;;1145:1;1142;1135:12;1097:52;1181:9;1168:23;1158:33;;1241:2;1230:9;1226:18;1213:32;1254:31;1279:5;1254:31;:::i;:::-;1304:5;1294:15;;;1000:315;;;;;:::o;1320:247::-;1379:6;1432:2;1420:9;1411:7;1407:23;1403:32;1400:52;;;1448:1;1445;1438:12;1400:52;1487:9;1474:23;1506:31;1531:5;1506:31;:::i;1572:127::-;1633:10;1628:3;1624:20;1621:1;1614:31;1664:4;1661:1;1654:15;1688:4;1685:1;1678:15;1704:1056;1781:6;1789;1842:2;1830:9;1821:7;1817:23;1813:32;1810:52;;;1858:1;1855;1848:12;1810:52;1897:9;1884:23;1916:31;1941:5;1916:31;:::i;:::-;1966:5;-1:-1:-1;2022:2:53;2007:18;;1994:32;-1:-1:-1;;;;;2075:14:53;;;2072:34;;;2102:1;2099;2092:12;2072:34;2140:6;2129:9;2125:22;2115:32;;2185:7;2178:4;2174:2;2170:13;2166:27;2156:55;;2207:1;2204;2197:12;2156:55;2243:2;2230:16;2265:2;2261;2258:10;2255:36;;;2271:18;;:::i;:::-;2346:2;2340:9;2314:2;2400:13;;-1:-1:-1;;2396:22:53;;;2420:2;2392:31;2388:40;2376:53;;;2444:18;;;2464:22;;;2441:46;2438:72;;;2490:18;;:::i;:::-;2530:10;2526:2;2519:22;2565:2;2557:6;2550:18;2605:7;2600:2;2595;2591;2587:11;2583:20;2580:33;2577:53;;;2626:1;2623;2616:12;2577:53;2682:2;2677;2673;2669:11;2664:2;2656:6;2652:15;2639:46;2727:1;2722:2;2717;2709:6;2705:15;2701:24;2694:35;2748:6;2738:16;;;;;;;1704:1056;;;;;:::o;2765:220::-;-1:-1:-1;;;;;2946:32:53;;;;2928:51;;2916:2;2901:18;;2765:220::o;2990:659::-;3069:6;3077;3085;3138:2;3126:9;3117:7;3113:23;3109:32;3106:52;;;3154:1;3151;3144:12;3106:52;3177:23;;;-1:-1:-1;3251:2:53;3236:18;;3223:32;-1:-1:-1;;;;;3304:14:53;;;3301:34;;;3331:1;3328;3321:12;3301:34;3369:6;3358:9;3354:22;3344:32;;3414:7;3407:4;3403:2;3399:13;3395:27;3385:55;;3436:1;3433;3426:12;3385:55;3476:2;3463:16;3502:2;3494:6;3491:14;3488:34;;;3518:1;3515;3508:12;3488:34;3563:7;3558:2;3549:6;3545:2;3541:15;3537:24;3534:37;3531:57;;;3584:1;3581;3574:12;3531:57;3615:2;3611;3607:11;3597:21;;3637:6;3627:16;;;;;2990:659;;;;;:::o;4732:347::-;4934:2;4916:21;;;4973:2;4953:18;;;4946:30;-1:-1:-1;;;5007:2:53;4992:18;;4985:53;5070:2;5055:18;;4732:347::o;5424:388::-;5581:2;5570:9;5563:21;5620:6;5615:2;5604:9;5600:18;5593:34;5677:6;5669;5664:2;5653:9;5649:18;5636:48;5733:1;5704:22;;;5728:2;5700:31;;;5693:42;;;;5796:2;5775:15;;;-1:-1:-1;;5771:29:53;5756:45;5752:54;;5424:388;-1:-1:-1;5424:388:53:o;6096:184::-;6166:6;6219:2;6207:9;6198:7;6194:23;6190:32;6187:52;;;6235:1;6232;6225:12;6187:52;-1:-1:-1;6258:16:53;;6096:184;-1:-1:-1;6096:184:53:o;6632:410::-;6834:2;6816:21;;;6873:2;6853:18;;;6846:30;6912:34;6907:2;6892:18;;6885:62;-1:-1:-1;;;6978:2:53;6963:18;;6956:44;7032:3;7017:19;;6632:410::o;7047:258::-;7119:1;7129:113;7143:6;7140:1;7137:13;7129:113;;;7219:11;;;7213:18;7200:11;;;7193:39;7165:2;7158:10;7129:113;;;7260:6;7257:1;7254:13;7251:48;;;7295:1;7286:6;7281:3;7277:16;7270:27;7251:48;;7047:258;;;:::o;7310:786::-;-1:-1:-1;;;7716:3:53;7709:38;7691:3;7776:6;7770:13;7792:62;7847:6;7842:2;7837:3;7833:12;7826:4;7818:6;7814:17;7792:62;:::i;:::-;-1:-1:-1;;;7913:2:53;7873:16;;;7905:11;;;7898:40;7963:13;;7985:63;7963:13;8034:2;8026:11;;8019:4;8007:17;;7985:63;:::i;:::-;8068:17;8087:2;8064:26;;7310:786;-1:-1:-1;;;;7310:786:53:o;8101:383::-;8250:2;8239:9;8232:21;8213:4;8282:6;8276:13;8325:6;8320:2;8309:9;8305:18;8298:34;8341:66;8400:6;8395:2;8384:9;8380:18;8375:2;8367:6;8363:15;8341:66;:::i;:::-;8468:2;8447:15;-1:-1:-1;;8443:29:53;8428:45;;;;8475:2;8424:54;;8101:383;-1:-1:-1;;8101:383:53:o;9244:127::-;9305:10;9300:3;9296:20;9293:1;9286:31;9336:4;9333:1;9326:15;9360:4;9357:1;9350:15;9376:168;9416:7;9482:1;9478;9474:6;9470:14;9467:1;9464:21;9459:1;9452:9;9445:17;9441:45;9438:71;;;9489:18;;:::i;:::-;-1:-1:-1;9529:9:53;;9376:168::o;9549:128::-;9589:3;9620:1;9616:6;9613:1;9610:13;9607:39;;;9626:18;;:::i;:::-;-1:-1:-1;9662:9:53;;9549:128::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:136;9853:3;9881:5;9871:39;;9890:18;;:::i;:::-;-1:-1:-1;;;9926:18:53;;9814:136::o;11137:274::-;11266:3;11304:6;11298:13;11320:53;11366:6;11361:3;11354:4;11346:6;11342:17;11320:53;:::i;:::-;11389:16;;;;;11137:274;-1:-1:-1;;11137:274:53:o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./Freeport.sol\";\n\n/** The contract NFTAttachment allows users to attach objects to NFTs.\n * Some application can listen for the events and interpret the objects in some way.\n *\n * There are three roles who can attach objects to an NFT:\n * the minter, any current owner, or any anonymous account.\n * A different event is emitted for each role.\n *\n * The attachment data is meant to identify an object hosted externally,\n * such as a CID, a.k.a. Content Identifier, or a DDC URL.\n * The content may be retrieved from Cere DDC or some other store.\n */\ncontract NFTAttachment is /* AccessControl, */ MetaTxContext {\n\n    /** This attachment contract refers to the NFT contract in this variable.\n     */\n    Freeport public freeport;\n\n    /** The token ID that represents the internal currency for all payments in Freeport. */\n    uint256 constant CURRENCY = 0;\n\n    /** Set which NFT contract to refer to.\n     *\n     * The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n     *\n     * The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\n     */\n    function initialize(Freeport _freeport) public initializer {\n        __MetaTxContext_init();\n\n        require(address(_freeport) != address(0));\n        freeport = _freeport;\n    }\n\n    /** The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\n     */\n    event MinterAttachToNFT(\n        address indexed minter,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `owner` owned at least one NFT of this type at the time of the event.\n     */\n    event OwnerAttachToNFT(\n        address indexed owner,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the attachment means.\n     */\n    event AnonymAttachToNFT(\n        address indexed anonym,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n     *\n     * This only works for NFT IDs in the Freeport format.\n     */\n    function minterAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address minter = _msgSender();\n        address actualMinter = _minterFromNftId(nftId);\n        require(minter == actualMinter, \"Only minter\");\n        emit MinterAttachToNFT(minter, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n     *\n     * This works for NFTs in the ERC-1155 or Freeport standards.\n     */\n    function ownerAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address owner = _msgSender();\n        uint256 balance = freeport.balanceOf(owner, nftId);\n        require(balance > 0, \"Only current owner\");\n        emit OwnerAttachToNFT(owner, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as any account.\n     */\n    function anonymAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address anonym = _msgSender();\n        emit AnonymAttachToNFT(anonym, nftId, attachment);\n    }\n\n    /** Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n     *\n     * This does not imply that the NFTs exist.\n     *\n     * This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\n     */\n    function _minterFromNftId(uint256 id)\n    public pure returns (address minter) {\n        minter = address(uint160((id & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000) >> (32 + 64)));\n        return minter;\n    }\n}\n",
  "sourcePath": "/home/nadtech/Visual_Studio/Freeport-Smart-Contracts/contracts/NFTAttachment.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        6197
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        6271
      ],
      "ERC1155Upgradeable": [
        9374
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        6399
      ],
      "Freeport": [
        4467
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        6660
      ],
      "JointAccounts": [
        7065
      ],
      "MetaTxContext": [
        7142
      ],
      "NFTAttachment": [
        4847
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        8060
      ],
      "TransferOperator": [
        8104
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        8145
      ]
    },
    "id": 4848,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4639,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 4640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4848,
        "sourceUnit": 7143,
        "src": "25:43:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 4641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4848,
        "sourceUnit": 4468,
        "src": "69:24:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4643,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7142,
              "src": "673:13:32"
            },
            "id": 4644,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:32"
          }
        ],
        "canonicalName": "NFTAttachment",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4642,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:32",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 4847,
        "linearizedBaseContracts": [
          4847,
          7142,
          8145,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "NFTAttachment",
        "nameLocation": "635:13:32",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4645,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:32",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 4648,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:32",
            "nodeType": "VariableDeclaration",
            "scope": 4847,
            "src": "780:24:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4467",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 4647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4646,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4467,
                "src": "780:8:32"
              },
              "referencedDeclaration": 4467,
              "src": "780:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4467",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4649,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:32",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 4652,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:32",
            "nodeType": "VariableDeclaration",
            "scope": 4847,
            "src": "903:29:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4650,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 4651,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:32",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "1237:121:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4661,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7077,
                      "src": "1247:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:22:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4663,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:22:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4667,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4656,
                              "src": "1296:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$4467",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$4467",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 4666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1288:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4665,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1288:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:18:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:1:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1310:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4669,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1310:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:10:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1288:32:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:41:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4675,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:41:32"
                },
                {
                  "expression": {
                    "id": 4678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4676,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4648,
                      "src": "1331:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4467",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4677,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4656,
                      "src": "1342:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4467",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1331:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4467",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 4679,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:20:32"
                }
              ]
            },
            "documentation": {
              "id": 4653,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:32",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "functionSelector": "c4d66de8",
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4658,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1225:11:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:11:32"
              }
            ],
            "name": "initialize",
            "nameLocation": "1187:10:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4656,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1207:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "1198:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4467",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 4655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4654,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4467,
                      "src": "1198:8:32"
                    },
                    "referencedDeclaration": 4467,
                    "src": "1198:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4467",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:20:32"
            },
            "returnParameters": {
              "id": 4660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:32"
            },
            "scope": 4847,
            "src": "1178:180:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4682,
              "nodeType": "StructuredDocumentation",
              "src": "1364:213:32",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "eventSelector": "5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322",
            "id": 4690,
            "name": "MinterAttachToNFT",
            "nameLocation": "1588:17:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1631:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "1615:22:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1663:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "1647:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4688,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1684:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "1678:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4687,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:90:32"
            },
            "src": "1582:114:32"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4691,
              "nodeType": "StructuredDocumentation",
              "src": "1702:179:32",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "eventSelector": "70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a55",
            "id": 4699,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1892:16:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4693,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1934:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4699,
                  "src": "1918:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4695,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1965:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4699,
                  "src": "1949:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4697,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1986:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4699,
                  "src": "1980:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4696,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:89:32"
            },
            "src": "1886:112:32"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4700,
              "nodeType": "StructuredDocumentation",
              "src": "2004:260:32",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "eventSelector": "4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf",
            "id": 4708,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2275:17:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4702,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2318:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4708,
                  "src": "2302:22:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4704,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2350:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4708,
                  "src": "2334:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4706,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2371:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4708,
                  "src": "2365:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4705,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:90:32"
            },
            "src": "2269:114:32"
          },
          {
            "body": {
              "id": 4747,
              "nodeType": "Block",
              "src": "2633:280:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4717,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4711,
                          "src": "2651:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4718,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "2660:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2651:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4722,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:53:32"
                },
                {
                  "assignments": [
                    4724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4724,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2714:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4747,
                      "src": "2706:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4727,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4725,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7114
                      ],
                      "referencedDeclaration": 7114,
                      "src": "2723:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:12:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:29:32"
                },
                {
                  "assignments": [
                    4729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4729,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2753:12:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4747,
                      "src": "2745:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4728,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2745:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4733,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4731,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4711,
                        "src": "2785:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4730,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "2768:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 4732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2745:46:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4735,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4724,
                          "src": "2809:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4736,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4729,
                          "src": "2819:12:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:22:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 4734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:46:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:46:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4742,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4724,
                        "src": "2880:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4743,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4711,
                        "src": "2888:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4744,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4713,
                        "src": "2895:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4741,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4690,
                      "src": "2862:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4746,
                  "nodeType": "EmitStatement",
                  "src": "2857:49:32"
                }
              ]
            },
            "documentation": {
              "id": 4709,
              "nodeType": "StructuredDocumentation",
              "src": "2389:159:32",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 4748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2562:17:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4711,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2588:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "2580:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4713,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2610:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "2595:25:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4712,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:42:32"
            },
            "returnParameters": {
              "id": 4715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:32"
            },
            "scope": 4847,
            "src": "2553:360:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4789,
              "nodeType": "Block",
              "src": "3180:277:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4757,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4751,
                          "src": "3198:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4758,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "3207:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3198:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4762,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:53:32"
                },
                {
                  "assignments": [
                    4764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4764,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3261:5:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4789,
                      "src": "3253:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4763,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4767,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4765,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7114
                      ],
                      "referencedDeclaration": 7114,
                      "src": "3269:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:12:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3253:28:32"
                },
                {
                  "assignments": [
                    4769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4769,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3299:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4789,
                      "src": "3291:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3291:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4775,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4772,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4764,
                        "src": "3328:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4773,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "3335:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4770,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4648,
                        "src": "3309:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4467",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 4771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8453,
                      "src": "3309:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3291:50:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4777,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4769,
                          "src": "3359:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3369:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3359:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 4780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3372:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 4776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:42:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4782,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:42:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4784,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4764,
                        "src": "3425:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4785,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "3432:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4786,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4753,
                        "src": "3439:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4783,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4699,
                      "src": "3408:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:42:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4788,
                  "nodeType": "EmitStatement",
                  "src": "3403:47:32"
                }
              ]
            },
            "documentation": {
              "id": 4749,
              "nodeType": "StructuredDocumentation",
              "src": "2919:177:32",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 4790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3110:16:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4751,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3135:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "3127:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4753,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3157:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "3142:25:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4752,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3126:42:32"
            },
            "returnParameters": {
              "id": 4755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:32"
            },
            "scope": 4847,
            "src": "3101:356:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4816,
              "nodeType": "Block",
              "src": "3625:168:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4799,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4793,
                          "src": "3643:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4800,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "3652:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3643:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3662:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3635:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4804,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:53:32"
                },
                {
                  "assignments": [
                    4806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4806,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3706:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4816,
                      "src": "3698:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3698:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4809,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4807,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7114
                      ],
                      "referencedDeclaration": 7114,
                      "src": "3715:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:12:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3698:29:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4811,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4806,
                        "src": "3760:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4812,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4793,
                        "src": "3768:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4813,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4795,
                        "src": "3775:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4810,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4708,
                      "src": "3742:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4815,
                  "nodeType": "EmitStatement",
                  "src": "3737:49:32"
                }
              ]
            },
            "documentation": {
              "id": 4791,
              "nodeType": "StructuredDocumentation",
              "src": "3463:77:32",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 4817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3554:17:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4793,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3580:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4817,
                  "src": "3572:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4795,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3602:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4817,
                  "src": "3587:25:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4794,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:42:32"
            },
            "returnParameters": {
              "id": 4797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:0:32"
            },
            "scope": 4847,
            "src": "3545:248:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4845,
              "nodeType": "Block",
              "src": "4100:153:32",
              "statements": [
                {
                  "expression": {
                    "id": 4841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4825,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4823,
                      "src": "4110:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4830,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4820,
                                      "src": "4136:2:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 4831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4141:66:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4136:71:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4833,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4135:73:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 4836,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 4834,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4213:2:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 4835,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4218:2:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4213:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 4837,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4212:9:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4135:86:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4127:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4828,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4127:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:95:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4119:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:32",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4119:104:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4110:113:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4842,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:113:32"
                },
                {
                  "expression": {
                    "id": 4843,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4823,
                    "src": "4240:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4824,
                  "id": 4844,
                  "nodeType": "Return",
                  "src": "4233:13:32"
                }
              ]
            },
            "documentation": {
              "id": 4818,
              "nodeType": "StructuredDocumentation",
              "src": "3799:217:32",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 4846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "4030:16:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4820,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4055:2:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4846,
                  "src": "4047:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:12:32"
            },
            "returnParameters": {
              "id": 4824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4823,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4092:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4846,
                  "src": "4084:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:16:32"
            },
            "scope": 4847,
            "src": "4021:232:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4848,
        "src": "626:3629:32",
        "usedErrors": []
      }
    ],
    "src": "0:4256:32"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        6197
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        6271
      ],
      "ERC1155Upgradeable": [
        9374
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        6399
      ],
      "Freeport": [
        4467
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        6660
      ],
      "JointAccounts": [
        7065
      ],
      "MetaTxContext": [
        7142
      ],
      "NFTAttachment": [
        4847
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        8060
      ],
      "TransferOperator": [
        8104
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        8145
      ]
    },
    "id": 4848,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4639,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 4640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4848,
        "sourceUnit": 7143,
        "src": "25:43:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 4641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4848,
        "sourceUnit": 4468,
        "src": "69:24:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4643,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7142,
              "src": "673:13:32"
            },
            "id": 4644,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:32"
          }
        ],
        "canonicalName": "NFTAttachment",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4642,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:32",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 4847,
        "linearizedBaseContracts": [
          4847,
          7142,
          8145,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "NFTAttachment",
        "nameLocation": "635:13:32",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4645,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:32",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 4648,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:32",
            "nodeType": "VariableDeclaration",
            "scope": 4847,
            "src": "780:24:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4467",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 4647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4646,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4467,
                "src": "780:8:32"
              },
              "referencedDeclaration": 4467,
              "src": "780:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4467",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4649,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:32",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 4652,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:32",
            "nodeType": "VariableDeclaration",
            "scope": 4847,
            "src": "903:29:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4650,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 4651,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:32",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "1237:121:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4661,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7077,
                      "src": "1247:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:22:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4663,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:22:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4667,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4656,
                              "src": "1296:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$4467",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$4467",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 4666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1288:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4665,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1288:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:18:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:1:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1310:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4669,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1310:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:10:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1288:32:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:41:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4675,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:41:32"
                },
                {
                  "expression": {
                    "id": 4678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4676,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4648,
                      "src": "1331:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4467",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4677,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4656,
                      "src": "1342:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4467",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1331:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4467",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 4679,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:20:32"
                }
              ]
            },
            "documentation": {
              "id": 4653,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:32",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "functionSelector": "c4d66de8",
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4658,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1225:11:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:11:32"
              }
            ],
            "name": "initialize",
            "nameLocation": "1187:10:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4656,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1207:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "1198:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4467",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 4655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4654,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4467,
                      "src": "1198:8:32"
                    },
                    "referencedDeclaration": 4467,
                    "src": "1198:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4467",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:20:32"
            },
            "returnParameters": {
              "id": 4660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:32"
            },
            "scope": 4847,
            "src": "1178:180:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4682,
              "nodeType": "StructuredDocumentation",
              "src": "1364:213:32",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "eventSelector": "5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322",
            "id": 4690,
            "name": "MinterAttachToNFT",
            "nameLocation": "1588:17:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1631:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "1615:22:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1663:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "1647:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4688,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1684:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "1678:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4687,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:90:32"
            },
            "src": "1582:114:32"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4691,
              "nodeType": "StructuredDocumentation",
              "src": "1702:179:32",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "eventSelector": "70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a55",
            "id": 4699,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1892:16:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4693,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1934:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4699,
                  "src": "1918:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4695,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1965:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4699,
                  "src": "1949:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4697,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1986:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4699,
                  "src": "1980:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4696,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:89:32"
            },
            "src": "1886:112:32"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4700,
              "nodeType": "StructuredDocumentation",
              "src": "2004:260:32",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "eventSelector": "4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf",
            "id": 4708,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2275:17:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4702,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2318:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4708,
                  "src": "2302:22:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4704,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2350:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4708,
                  "src": "2334:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4706,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2371:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4708,
                  "src": "2365:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4705,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:90:32"
            },
            "src": "2269:114:32"
          },
          {
            "body": {
              "id": 4747,
              "nodeType": "Block",
              "src": "2633:280:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4717,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4711,
                          "src": "2651:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4718,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "2660:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2651:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4722,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:53:32"
                },
                {
                  "assignments": [
                    4724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4724,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2714:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4747,
                      "src": "2706:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4727,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4725,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7114
                      ],
                      "referencedDeclaration": 7114,
                      "src": "2723:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:12:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:29:32"
                },
                {
                  "assignments": [
                    4729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4729,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2753:12:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4747,
                      "src": "2745:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4728,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2745:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4733,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4731,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4711,
                        "src": "2785:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4730,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "2768:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 4732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2745:46:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4735,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4724,
                          "src": "2809:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4736,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4729,
                          "src": "2819:12:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:22:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 4734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:46:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:46:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4742,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4724,
                        "src": "2880:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4743,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4711,
                        "src": "2888:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4744,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4713,
                        "src": "2895:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4741,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4690,
                      "src": "2862:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4746,
                  "nodeType": "EmitStatement",
                  "src": "2857:49:32"
                }
              ]
            },
            "documentation": {
              "id": 4709,
              "nodeType": "StructuredDocumentation",
              "src": "2389:159:32",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 4748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2562:17:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4711,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2588:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "2580:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4713,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2610:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "2595:25:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4712,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:42:32"
            },
            "returnParameters": {
              "id": 4715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:32"
            },
            "scope": 4847,
            "src": "2553:360:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4789,
              "nodeType": "Block",
              "src": "3180:277:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4757,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4751,
                          "src": "3198:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4758,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "3207:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3198:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4762,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:53:32"
                },
                {
                  "assignments": [
                    4764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4764,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3261:5:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4789,
                      "src": "3253:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4763,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4767,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4765,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7114
                      ],
                      "referencedDeclaration": 7114,
                      "src": "3269:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:12:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3253:28:32"
                },
                {
                  "assignments": [
                    4769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4769,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3299:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4789,
                      "src": "3291:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3291:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4775,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4772,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4764,
                        "src": "3328:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4773,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "3335:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4770,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4648,
                        "src": "3309:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4467",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 4771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8453,
                      "src": "3309:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3291:50:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4777,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4769,
                          "src": "3359:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3369:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3359:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 4780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3372:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 4776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:42:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4782,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:42:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4784,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4764,
                        "src": "3425:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4785,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "3432:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4786,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4753,
                        "src": "3439:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4783,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4699,
                      "src": "3408:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:42:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4788,
                  "nodeType": "EmitStatement",
                  "src": "3403:47:32"
                }
              ]
            },
            "documentation": {
              "id": 4749,
              "nodeType": "StructuredDocumentation",
              "src": "2919:177:32",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 4790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3110:16:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4751,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3135:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "3127:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4753,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3157:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "3142:25:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4752,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3126:42:32"
            },
            "returnParameters": {
              "id": 4755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:32"
            },
            "scope": 4847,
            "src": "3101:356:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4816,
              "nodeType": "Block",
              "src": "3625:168:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4799,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4793,
                          "src": "3643:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4800,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "3652:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3643:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3662:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3635:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4804,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:53:32"
                },
                {
                  "assignments": [
                    4806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4806,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3706:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 4816,
                      "src": "3698:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3698:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4809,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4807,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7114
                      ],
                      "referencedDeclaration": 7114,
                      "src": "3715:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:12:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3698:29:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4811,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4806,
                        "src": "3760:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4812,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4793,
                        "src": "3768:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4813,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4795,
                        "src": "3775:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4810,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4708,
                      "src": "3742:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:44:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4815,
                  "nodeType": "EmitStatement",
                  "src": "3737:49:32"
                }
              ]
            },
            "documentation": {
              "id": 4791,
              "nodeType": "StructuredDocumentation",
              "src": "3463:77:32",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 4817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3554:17:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4793,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3580:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4817,
                  "src": "3572:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4795,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3602:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4817,
                  "src": "3587:25:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4794,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:42:32"
            },
            "returnParameters": {
              "id": 4797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:0:32"
            },
            "scope": 4847,
            "src": "3545:248:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4845,
              "nodeType": "Block",
              "src": "4100:153:32",
              "statements": [
                {
                  "expression": {
                    "id": 4841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4825,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4823,
                      "src": "4110:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4830,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4820,
                                      "src": "4136:2:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 4831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4141:66:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4136:71:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4833,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4135:73:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 4836,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 4834,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4213:2:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 4835,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4218:2:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4213:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 4837,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4212:9:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4135:86:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4127:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4828,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4127:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:95:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4119:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:32",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4119:104:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4110:113:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4842,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:113:32"
                },
                {
                  "expression": {
                    "id": 4843,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4823,
                    "src": "4240:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4824,
                  "id": 4844,
                  "nodeType": "Return",
                  "src": "4233:13:32"
                }
              ]
            },
            "documentation": {
              "id": 4818,
              "nodeType": "StructuredDocumentation",
              "src": "3799:217:32",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 4846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "4030:16:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4820,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4055:2:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4846,
                  "src": "4047:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:12:32"
            },
            "returnParameters": {
              "id": 4824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4823,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4092:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4846,
                  "src": "4084:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:16:32"
            },
            "scope": 4847,
            "src": "4021:232:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4848,
        "src": "626:3629:32",
        "usedErrors": []
      }
    ],
    "src": "0:4256:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {},
      "links": {},
      "address": "0x651f2C6942F1c290632Ad5bB61D9ece789f82f35",
      "transactionHash": "0xef845d373ce27fdd9561113a6c4600bdc790c0ba64e7fb82680fcdb748be6e3a"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x84766787c6b9131927A76634F7DDCfcf3ff2e9d1",
      "transactionHash": "0x92ec7022f08438d916fd2d98943743e2675e69644821e7cff383912cf8604e8d"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-05-06T11:33:35.604Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AnonymAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means."
      },
      "MinterAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
      },
      "OwnerAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event."
      }
    },
    "kind": "user",
    "methods": {
      "_minterFromNftId(uint256)": {
        "notice": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
      },
      "anonymAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as any account."
      },
      "freeport()": {
        "notice": "This attachment contract refers to the NFT contract in this variable."
      },
      "initialize(address)": {
        "notice": "Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
      },
      "minterAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format."
      },
      "ownerAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards."
      }
    },
    "notice": "The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.",
    "version": 1
  }
}