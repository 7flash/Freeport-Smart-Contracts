{
  "contractName": "NFTAttachment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "anonym",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "AnonymAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "MinterAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "OwnerAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "minterAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "ownerAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "anonymAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "_minterFromNftId",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"anonym\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"AnonymAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"MinterAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"OwnerAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"_minterFromNftId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"anonymAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"minterAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"ownerAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AnonymAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means.\"},\"MinterAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\"},\"OwnerAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event.\"}},\"kind\":\"user\",\"methods\":{\"_minterFromNftId(uint256)\":{\"notice\":\"Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\"},\"anonymAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as any account.\"},\"freeport()\":{\"notice\":\"This attachment contract refers to the NFT contract in this variable.\"},\"initialize(address)\":{\"notice\":\"Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\"},\"minterAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format.\"},\"ownerAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards.\"}},\"notice\":\"The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTAttachment.sol\":\"NFTAttachment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed\",\"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xda94a85ba0a26d49cd327cc63b8b54fa5dde8f5d1c5f3c942237096ef896eff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a591e20787048963a028302f0157fea70eab83db641f020169a789effc7d7907\",\"dweb:/ipfs/QmXY3LKPvw5BMrjG4JxWZZ15RR2jhUDktNrZqHqyCewXBG\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429b36651fab917b4cdfa5e9431b96c5bd3ba73392a31e62a4d92b4b4ae85184\",\"dweb:/ipfs/QmY1SgWuSbxgYCPAibNHT4phA71QzzqagZRunwC7Gm19wq\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352\",\"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6014667ab9e057c1810fcb7ef844123c581a34eb8dafc1aaa15f4e0f704620b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3abfde5dc879cf0ef670cd7357410b4fcf2a7ec76306e82f96cb4715b2c51d0\",\"dweb:/ipfs/Qme48SqUCFLhgtgg9ZSpmQuwvitujCkHjDhmDCAtsDgjA3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xd841c561258151c3c22f05feb68c702fc414b112606bd72b848e8a65af128c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e949bb10f10df25903b0ec5eb13a8b9878996abd49897884062645a4123ffb2\",\"dweb:/ipfs/QmQ2Z3qegGykZLAf7Wt1y24wCxxnA3stRMHzy1LBFvxhtX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a\",\"dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d\",\"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f\",\"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0x001501a3c0ca27f755dd356ace2fae4bf88b31eeb2ac39464177861b0d75f9c5\",\"urls\":[\"bzz-raw://81bfe2fa98823dfc4791f279b165492022cca0030927f918294b62589e5a722f\",\"dweb:/ipfs/QmcSjxP44iN1MRHaSocw6aLeySA7g2dWKpsfQ55tH1xbXi\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x38f603b6c69541ab197956454fd07a2aecce0c03e19320d7a29902a6af656301\",\"urls\":[\"bzz-raw://5219d3947953ef384ac070fdbacdbb39a6623107ca799383dcec44d86832456e\",\"dweb:/ipfs/QmbiUcxRdGz9cuqoapQuL4pqAguY9Wtf6xq3iw4UncL121\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x589571f85ae8cc227de3ea3b2c7b3d6f8dd5b977755c4c7303cc18c1aede3322\",\"urls\":[\"bzz-raw://33479f8d906835f681a11ae5eeb51af792726764e7a45dab082b84b617ef175c\",\"dweb:/ipfs/QmWaQQNmegKf1Nd2y4M5pnUNNKJQ6NaHQjXJgUC2MqUKwH\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0xc4e1878c459f9b7741a965245659e9e90d241ded479264c22f31efe15ed04aec\",\"urls\":[\"bzz-raw://d4bcafd88cde0d2cca84f87f999c4ba7d04409c3c62384da56f462a96eac3dc5\",\"dweb:/ipfs/QmfMnUk5CYRp6q9JiXTtc1cpoXDatwzSqRfkZjTAKdGHr2\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x7298ad1106ffa5af90d35bf47e214dc28c705f99a3796d644e92b3a492d273b7\",\"urls\":[\"bzz-raw://2ad2298e77090a93310f10e78ba2bfdd5712f2183d662328e197665e1e1d8857\",\"dweb:/ipfs/QmWdotY9DB6a6W2m6qkNKDXeuL7M7Shff45QTii2ktwBUm\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x1d3f9d778f91e75758a3415184eacbbdcd48cea32e05cc66ad0dbda5d2743263\",\"urls\":[\"bzz-raw://e39ed264fcdee725fb2eed77788a13df9e879f28662dd388cd11455e01fc1f4f\",\"dweb:/ipfs/QmdGom9qXRX7YeNS92Rn9QmjLSZ3MbB5hhspeESeRb5V5B\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0xf35f669c65346b421322355b744f2a071275f298a1fa9a630b7a73df91fdf540\",\"urls\":[\"bzz-raw://7ec2c162ecd046754a762d80eff3c113421bb0c82bc888f1caf50314174d706e\",\"dweb:/ipfs/QmNVdvKAaPwRJLvQBBj381fr1xDhuqD1KFoFDbLDs3z9BQ\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0xdd37428ab4740cc4cba878f25999c0f94949a1446c2d5ee30d164352a909cc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c7a0d9223e6d7ef3cf4cbe2d22db198823c11ffb8ed269a7cd31b1c8ba8e1d\",\"dweb:/ipfs/QmWsD5hNAfT6zktKkUbYrMhF1ZGP8t9cC31jk9mUFSkmgY\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x8815647aaba57fe5175439ca22f5cfe7adffdf959cf19f74ad6079b329dc46ba\",\"urls\":[\"bzz-raw://999515bd8f5e71417a672e4426d2b1961bc0a94ffa01c9154f8f4907c0afb15f\",\"dweb:/ipfs/QmfZ2tcZT6LoWVLWyaUGUqUa8wU8bvxpmnnEUERJBuc3g5\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xcb640511c6c8316cc452ec87d9cdc2c74b75dacb01d636e1b94b266f7771ca2d\",\"urls\":[\"bzz-raw://7fd1e06a180dc3995714fd50bba969445a0a1164fd2db6b5407b37edee3eb01a\",\"dweb:/ipfs/QmU75hREyE73AiHioN81T7Sp5z3FFPQx55T7t3nwFwi3uQ\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0x430f18b7e8e7a369ec254705a064d2411fe0fe2cd1ce546baaedd03aa965edc2\",\"urls\":[\"bzz-raw://b4f8a0c647e900ec91c0ea26614b8318fdaf6cfccc9234538b99e31c92ef635f\",\"dweb:/ipfs/QmUASapjiTqxuYC1dp5EmBKjs4Nh9VzaQGbs2CPTokM9TQ\"]},\"project:/contracts/freeportParts/Upgradeable.sol\":{\"keccak256\":\"0x6edf744da7d19533558fd19dd9db50151671d137603363efd2c69c6bad46434a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dedf9f686f3f736a593d0e3f4b7609c1fe919c969ac82036d1ad68d4c04fdd\",\"dweb:/ipfs/QmU7BcQKJHBVQ91kYacbeUKUC8YBuF2GTrGdrYLBDBzdBi\"]},\"project:/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xd0615c826e26d02b5a981f933b8a9bd27f9459e440397b165e5fcc014b41a835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c02c9558d39e1b6a85b74d07b3c621acdd7740718bb59b2beef8fed0c3b4203\",\"dweb:/ipfs/QmVe9NXaqmuYcWpkaznDqGfv1sGFQsteb5RzaVHZT8UuGZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506118f7806100206000396000f3fe60806040526004361061010e5760003560e01c80639470ad85116100a5578063c0ba9f5511610074578063d2e9277b11610059578063d2e9277b1461037d578063d547741f1461039e578063f9715b8f146103be57600080fd5b8063c0ba9f551461033d578063c4d66de81461035d57600080fd5b80639470ad851461029c5780639a86e8ce146102d4578063a217fddf14610308578063b85f8ca91461031d57600080fd5b80633659cfe6116100e15780633659cfe6146101c85780634f1ef286146101e8578063572b6c05146101fb57806391d148541461025657600080fd5b806301ffc9a714610113578063248a9ca3146101485780632f2ff15d1461018657806336568abe146101a8575b600080fd5b34801561011f57600080fd5b5061013361012e36600461160d565b6103de565b60405190151581526020015b60405180910390f35b34801561015457600080fd5b506101786101633660046115c6565b600090815260c9602052604090206001015490565b60405190815260200161013f565b34801561019257600080fd5b506101a66101a13660046115de565b610477565b005b3480156101b457600080fd5b506101a66101c33660046115de565b6104a9565b3480156101d457600080fd5b506101a66101e33660046114eb565b61054a565b6101a66101f6366004611507565b610571565b34801561020757600080fd5b506101336102163660046114eb565b6001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610471565b34801561026257600080fd5b506101336102713660046115de565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156102a857600080fd5b5060fb546102bc906001600160a01b031681565b6040516001600160a01b03909116815260200161013f565b3480156102e057600080fd5b506101787f3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d881565b34801561031457600080fd5b50610178600081565b34801561032957600080fd5b506101a6610338366004611665565b610586565b34801561034957600080fd5b506101a6610358366004611665565b610699565b34801561036957600080fd5b506101a66103783660046114eb565b61081f565b34801561038957600080fd5b506102bc6103983660046115c6565b60601c90565b3480156103aa57600080fd5b506101a66103b93660046115de565b610915565b3480156103ca57600080fd5b506101a66103d9366004611665565b61093d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061047157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600082815260c9602052604090206001015461049a816104956109e0565b610a3d565b6104a48383610abd565b505050565b6104b16109e0565b6001600160a01b0316816001600160a01b03161461053c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6105468282610b60565b5050565b61055381610c01565b61056e81604051806020016040528060008152506000610c7f565b50565b61057a82610c01565b61054682826001610c7f565b826105d35760405162461bcd60e51b815260206004820152601760248201527f30206973206e6f7420612076616c6964204e46542049440000000000000000006044820152606401610533565b60006105dd6109e0565b905060006105eb8560601c90565b9050806001600160a01b0316826001600160a01b03161461064e5760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c79206d696e7465720000000000000000000000000000000000000000006044820152606401610533565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322868660405161068a929190611779565b60405180910390a35050505050565b826106e65760405162461bcd60e51b815260206004820152601760248201527f30206973206e6f7420612076616c6964204e46542049440000000000000000006044820152606401610533565b60006106f06109e0565b60fb546040517efdd58e0000000000000000000000000000000000000000000000000000000081526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b15801561075957600080fd5b505afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610791919061164d565b9050600081116107e35760405162461bcd60e51b815260206004820152601260248201527f4f6e6c792063757272656e74206f776e657200000000000000000000000000006044820152606401610533565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a55868660405161068a929190611779565b600054610100900460ff1680610838575060005460ff16155b61089b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff161580156108bd576000805461ffff19166101011790555b6108c5610e78565b6001600160a01b0382166108d857600080fd5b60fb805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790558015610546576000805461ff00191690555050565b600082815260c96020526040902060010154610933816104956109e0565b6104a48383610b60565b8261098a5760405162461bcd60e51b815260206004820152601760248201527f30206973206e6f7420612076616c6964204e46542049440000000000000000006044820152606401610533565b60006109946109e0565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516109d2929190611779565b60405180910390a350505050565b6000610a26336001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610471565b15610a38575060131936013560601c90565b503390565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661054657610a7b816001600160a01b03166014610e82565b610a86836020610e82565b604051602001610a979291906116f8565b60408051601f198184030181529082905262461bcd60e51b8252610533916004016117a8565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661054657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610b1c6109e0565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff161561054657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610bbd6109e0565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b3360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604090205460ff1661056e5760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c792041646d696e000000000000000000000000000000000000000000006044820152606401610533565b6000610cb27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050610cbd846110b0565b600083511180610cca5750815b15610cdb57610cd98484611172565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610e7157805460ff191660011781556040516001600160a01b0383166024820152610d8890869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe600000000000000000000000000000000000000000000000000000000179052611172565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03838116911614610e335760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610533565b610e3c856110b0565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610e80611274565b565b60606000610e918360026117f3565b610e9c9060026117db565b67ffffffffffffffff811115610ec257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610eec576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610f3157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f8a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610fae8460026117f3565b610fb99060016117db565b90505b600181111561105a577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061100857634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061102c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361105381611842565b9050610fbc565b5083156110a95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610533565b9392505050565b803b6111245760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610533565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b6111e85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610533565b600080846001600160a01b03168460405161120391906116dc565b600060405180830381855af49150503d806000811461123e576040519150601f19603f3d011682016040523d82523d6000602084013e611243565b606091505b509150915061126b828260405180606001604052806027815260200161189b6027913961128f565b95945050505050565b61127c6112c8565b61128461138a565b610e80600033611430565b6060831561129e5750816110a9565b8251156112ae5782518084602001fd5b8160405162461bcd60e51b815260040161053391906117a8565b600054610100900460ff16806112e1575060005460ff16155b6113445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff16158015611366576000805461ffff19166101011790555b61136e61143a565b61137661143a565b801561056e576000805461ff001916905550565b600054610100900460ff16806113a3575060005460ff16155b6114065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff16158015611428576000805461ffff19166101011790555b61136661143a565b6105468282610abd565b600054610100900460ff1680611453575060005460ff16155b6114b65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff16158015611376576000805461ffff1916610101179055801561056e576000805461ff001916905550565b6000602082840312156114fc578081fd5b81356110a981611885565b60008060408385031215611519578081fd5b823561152481611885565b9150602083013567ffffffffffffffff80821115611540578283fd5b818501915085601f830112611553578283fd5b8135818111156115655761156561186f565b604051601f8201601f19908116603f0116810190838211818310171561158d5761158d61186f565b816040528281528860208487010111156115a5578586fd5b82602086016020830137856020848301015280955050505050509250929050565b6000602082840312156115d7578081fd5b5035919050565b600080604083850312156115f0578182fd5b82359150602083013561160281611885565b809150509250929050565b60006020828403121561161e578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146110a9578182fd5b60006020828403121561165e578081fd5b5051919050565b600080600060408486031215611679578081fd5b83359250602084013567ffffffffffffffff80821115611697578283fd5b818601915086601f8301126116aa578283fd5b8135818111156116b8578384fd5b8760208285010111156116c9578384fd5b6020830194508093505050509250925092565b600082516116ee818460208701611812565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611730816017850160208801611812565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161176d816028840160208801611812565b01602801949350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208152600082518060208401526117c7816040850160208701611812565b601f01601f19169190910160400192915050565b600082198211156117ee576117ee611859565b500190565b600081600019048311821515161561180d5761180d611859565b500290565b60005b8381101561182d578181015183820152602001611815565b8381111561183c576000848401525b50505050565b60008161185157611851611859565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461056e57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a68a4136e3d3b118749bae846c0e7bf876a5aa558b46e01e78b5cb7910292b8b64736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061010e5760003560e01c80639470ad85116100a5578063c0ba9f5511610074578063d2e9277b11610059578063d2e9277b1461037d578063d547741f1461039e578063f9715b8f146103be57600080fd5b8063c0ba9f551461033d578063c4d66de81461035d57600080fd5b80639470ad851461029c5780639a86e8ce146102d4578063a217fddf14610308578063b85f8ca91461031d57600080fd5b80633659cfe6116100e15780633659cfe6146101c85780634f1ef286146101e8578063572b6c05146101fb57806391d148541461025657600080fd5b806301ffc9a714610113578063248a9ca3146101485780632f2ff15d1461018657806336568abe146101a8575b600080fd5b34801561011f57600080fd5b5061013361012e36600461160d565b6103de565b60405190151581526020015b60405180910390f35b34801561015457600080fd5b506101786101633660046115c6565b600090815260c9602052604090206001015490565b60405190815260200161013f565b34801561019257600080fd5b506101a66101a13660046115de565b610477565b005b3480156101b457600080fd5b506101a66101c33660046115de565b6104a9565b3480156101d457600080fd5b506101a66101e33660046114eb565b61054a565b6101a66101f6366004611507565b610571565b34801561020757600080fd5b506101336102163660046114eb565b6001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610471565b34801561026257600080fd5b506101336102713660046115de565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156102a857600080fd5b5060fb546102bc906001600160a01b031681565b6040516001600160a01b03909116815260200161013f565b3480156102e057600080fd5b506101787f3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d881565b34801561031457600080fd5b50610178600081565b34801561032957600080fd5b506101a6610338366004611665565b610586565b34801561034957600080fd5b506101a6610358366004611665565b610699565b34801561036957600080fd5b506101a66103783660046114eb565b61081f565b34801561038957600080fd5b506102bc6103983660046115c6565b60601c90565b3480156103aa57600080fd5b506101a66103b93660046115de565b610915565b3480156103ca57600080fd5b506101a66103d9366004611665565b61093d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061047157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600082815260c9602052604090206001015461049a816104956109e0565b610a3d565b6104a48383610abd565b505050565b6104b16109e0565b6001600160a01b0316816001600160a01b03161461053c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6105468282610b60565b5050565b61055381610c01565b61056e81604051806020016040528060008152506000610c7f565b50565b61057a82610c01565b61054682826001610c7f565b826105d35760405162461bcd60e51b815260206004820152601760248201527f30206973206e6f7420612076616c6964204e46542049440000000000000000006044820152606401610533565b60006105dd6109e0565b905060006105eb8560601c90565b9050806001600160a01b0316826001600160a01b03161461064e5760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c79206d696e7465720000000000000000000000000000000000000000006044820152606401610533565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322868660405161068a929190611779565b60405180910390a35050505050565b826106e65760405162461bcd60e51b815260206004820152601760248201527f30206973206e6f7420612076616c6964204e46542049440000000000000000006044820152606401610533565b60006106f06109e0565b60fb546040517efdd58e0000000000000000000000000000000000000000000000000000000081526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b15801561075957600080fd5b505afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610791919061164d565b9050600081116107e35760405162461bcd60e51b815260206004820152601260248201527f4f6e6c792063757272656e74206f776e657200000000000000000000000000006044820152606401610533565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a55868660405161068a929190611779565b600054610100900460ff1680610838575060005460ff16155b61089b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff161580156108bd576000805461ffff19166101011790555b6108c5610e78565b6001600160a01b0382166108d857600080fd5b60fb805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790558015610546576000805461ff00191690555050565b600082815260c96020526040902060010154610933816104956109e0565b6104a48383610b60565b8261098a5760405162461bcd60e51b815260206004820152601760248201527f30206973206e6f7420612076616c6964204e46542049440000000000000000006044820152606401610533565b60006109946109e0565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516109d2929190611779565b60405180910390a350505050565b6000610a26336001600160a01b03811660009081527f697120b8373d16e5dcc698857dc9ccd54ea8b8ec3f8f836674abae91998a5583602052604081205460ff16610471565b15610a38575060131936013560601c90565b503390565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661054657610a7b816001600160a01b03166014610e82565b610a86836020610e82565b604051602001610a979291906116f8565b60408051601f198184030181529082905262461bcd60e51b8252610533916004016117a8565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661054657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610b1c6109e0565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff161561054657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610bbd6109e0565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b3360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604090205460ff1661056e5760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c792041646d696e000000000000000000000000000000000000000000006044820152606401610533565b6000610cb27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050610cbd846110b0565b600083511180610cca5750815b15610cdb57610cd98484611172565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610e7157805460ff191660011781556040516001600160a01b0383166024820152610d8890869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe600000000000000000000000000000000000000000000000000000000179052611172565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03838116911614610e335760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610533565b610e3c856110b0565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610e80611274565b565b60606000610e918360026117f3565b610e9c9060026117db565b67ffffffffffffffff811115610ec257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610eec576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610f3157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f8a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610fae8460026117f3565b610fb99060016117db565b90505b600181111561105a577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061100857634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061102c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361105381611842565b9050610fbc565b5083156110a95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610533565b9392505050565b803b6111245760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610533565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b6111e85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610533565b600080846001600160a01b03168460405161120391906116dc565b600060405180830381855af49150503d806000811461123e576040519150601f19603f3d011682016040523d82523d6000602084013e611243565b606091505b509150915061126b828260405180606001604052806027815260200161189b6027913961128f565b95945050505050565b61127c6112c8565b61128461138a565b610e80600033611430565b6060831561129e5750816110a9565b8251156112ae5782518084602001fd5b8160405162461bcd60e51b815260040161053391906117a8565b600054610100900460ff16806112e1575060005460ff16155b6113445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff16158015611366576000805461ffff19166101011790555b61136e61143a565b61137661143a565b801561056e576000805461ff001916905550565b600054610100900460ff16806113a3575060005460ff16155b6114065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff16158015611428576000805461ffff19166101011790555b61136661143a565b6105468282610abd565b600054610100900460ff1680611453575060005460ff16155b6114b65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610533565b600054610100900460ff16158015611376576000805461ffff1916610101179055801561056e576000805461ff001916905550565b6000602082840312156114fc578081fd5b81356110a981611885565b60008060408385031215611519578081fd5b823561152481611885565b9150602083013567ffffffffffffffff80821115611540578283fd5b818501915085601f830112611553578283fd5b8135818111156115655761156561186f565b604051601f8201601f19908116603f0116810190838211818310171561158d5761158d61186f565b816040528281528860208487010111156115a5578586fd5b82602086016020830137856020848301015280955050505050509250929050565b6000602082840312156115d7578081fd5b5035919050565b600080604083850312156115f0578182fd5b82359150602083013561160281611885565b809150509250929050565b60006020828403121561161e578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146110a9578182fd5b60006020828403121561165e578081fd5b5051919050565b600080600060408486031215611679578081fd5b83359250602084013567ffffffffffffffff80821115611697578283fd5b818601915086601f8301126116aa578283fd5b8135818111156116b8578384fd5b8760208285010111156116c9578384fd5b6020830194508093505050509250925092565b600082516116ee818460208701611812565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611730816017850160208801611812565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161176d816028840160208801611812565b01602801949350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208152600082518060208401526117c7816040850160208701611812565b601f01601f19169190910160400192915050565b600082198211156117ee576117ee611859565b500190565b600081600019048311821515161561180d5761180d611859565b500290565b60005b8381101561182d578181015183820152602001611815565b8381111561183c576000848401525b50505050565b60008161185157611851611859565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461056e57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a68a4136e3d3b118749bae846c0e7bf876a5aa558b46e01e78b5cb7910292b8b64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11711:51",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:51",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:51",
                "type": ""
              }
            ],
            "src": "14:257:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "372:1005:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "418:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "427:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "435:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "393:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "402:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "385:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "382:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "453:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "479:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "466:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "457:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "523:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "498:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "498:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "498:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "538:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "548:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "538:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "562:46:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "576:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "566:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "617:28:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "627:18:51",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "621:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "672:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "681:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "689:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "674:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "674:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "674:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "660:6:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "657:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:14:51"
                  },
                  "nodeType": "YulIf",
                  "src": "654:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "707:32:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "721:9:51"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "732:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "717:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:22:51"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "711:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "766:2:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "770:4:51",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "762:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "762:13:51"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:51"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "758:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:27:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:35:51"
                  },
                  "nodeType": "YulIf",
                  "src": "748:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "822:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "845:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "832:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:16:51"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "826:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "871:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "873:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "873:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "873:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "863:2:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "867:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "860:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:10:51"
                  },
                  "nodeType": "YulIf",
                  "src": "857:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "902:17:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "916:2:51",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "912:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:7:51"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "906:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "928:23:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "948:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "942:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:9:51"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "932:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "960:71:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "982:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1006:2:51"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1010:4:51",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1002:3:51"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1002:13:51"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1017:2:51"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:22:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1022:2:51",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "994:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "994:31:51"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1027:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "990:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "990:40:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "978:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "978:53:51"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "964:10:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1090:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1092:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1092:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1092:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1049:10:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1061:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1046:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1069:10:51"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1081:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1043:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:46:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1040:2:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:51",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1132:10:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:22:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1121:22:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1159:6:51"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1167:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1152:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:18:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:18:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1216:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1225:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1233:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1218:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1218:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1218:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1193:2:51"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1197:2:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1189:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1189:11:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1202:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1185:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:20:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1207:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1182:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:33:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1179:2:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:15:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1285:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1289:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1281:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1281:11:51"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1294:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:46:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:46:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1321:6:51"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1329:2:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1317:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1317:15:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1334:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:24:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1306:40:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1355:16:51",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1365:6:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1355:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "330:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "341:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "353:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "361:6:51",
                "type": ""
              }
            ],
            "src": "276:1101:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1452:120:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1498:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1507:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1515:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1500:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1500:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1500:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1473:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1482:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1469:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1469:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1494:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1465:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1462:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1533:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1556:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1543:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1543:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1533:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1418:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1429:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1441:6:51",
                "type": ""
              }
            ],
            "src": "1382:190:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1664:238:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1710:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1719:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1727:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1712:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1712:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1712:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1685:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1694:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1706:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1677:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1674:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1745:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1768:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1755:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1745:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1787:45:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1817:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1828:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1813:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1800:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:32:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1791:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1841:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1841:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1841:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1881:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1891:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1881:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1622:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1633:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1645:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1653:6:51",
                "type": ""
              }
            ],
            "src": "1577:325:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1976:283:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2022:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2031:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2039:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2024:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2024:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2024:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1997:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2006:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2018:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1989:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1986:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2057:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2083:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2070:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2070:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2061:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2203:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2212:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2220:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2205:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2205:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2205:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2115:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2126:5:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2133:66:51",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2122:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2122:78:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2112:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:89:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2105:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:97:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2238:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2248:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2238:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1942:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1953:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1965:6:51",
                "type": ""
              }
            ],
            "src": "1907:352:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2351:187:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2397:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2406:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2414:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2399:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2399:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2399:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2372:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2381:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2368:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2368:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2393:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2364:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2364:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2361:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2432:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2458:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2445:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2445:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2436:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2502:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2477:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2477:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2477:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2517:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2527:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2517:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$4426",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2317:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2328:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2340:6:51",
                "type": ""
              }
            ],
            "src": "2264:274:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2613:120:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2659:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2668:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2676:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2661:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2661:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2661:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2634:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2643:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2630:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2630:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2655:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2626:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2623:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2694:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2717:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2704:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2694:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2579:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2590:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2602:6:51",
                "type": ""
              }
            ],
            "src": "2543:190:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2819:113:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2865:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2874:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2882:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2867:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2867:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2867:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2840:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2849:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2836:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2836:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2861:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2832:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2832:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2829:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2900:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2916:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2910:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2910:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2900:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2785:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2796:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2808:6:51",
                "type": ""
              }
            ],
            "src": "2738:194:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3043:603:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3089:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3098:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3106:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3091:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3091:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3091:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3064:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3073:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3060:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3060:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3085:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3056:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3056:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3053:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3124:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3147:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3134:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3134:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3124:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3166:46:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3197:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3208:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3193:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3193:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3180:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3170:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3221:28:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3231:18:51",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3225:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3276:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3285:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3293:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3278:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3278:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3278:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3264:6:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3272:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3261:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3261:14:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3258:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3311:32:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3325:9:51"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3336:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3321:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3321:22:51"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3315:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3391:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3400:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3408:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3393:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3393:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3393:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3370:2:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3374:4:51",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3366:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3366:13:51"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3381:7:51"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3362:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3362:27:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3355:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3355:35:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3352:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3426:30:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3453:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3440:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3440:16:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3430:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3483:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3492:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3500:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3485:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3485:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3485:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3471:6:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3479:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3468:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3468:14:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3465:2:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3559:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3568:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3576:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3561:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3561:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3561:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3532:2:51"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3536:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3528:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3528:15:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3545:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3524:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:24:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3550:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3521:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3521:37:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3518:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3594:21:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3608:2:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3612:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3604:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3604:11:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3594:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3624:16:51",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "3634:6:51"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3624:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2993:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3004:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3016:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3024:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3032:6:51",
                "type": ""
              }
            ],
            "src": "2937:709:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3788:137:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3798:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3818:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3812:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3802:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3860:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3868:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3856:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3856:17:51"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3875:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3880:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3834:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3834:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3834:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3896:23:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3907:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3912:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3903:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3903:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3896:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3764:3:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3769:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3780:3:51",
                "type": ""
              }
            ],
            "src": "3651:274:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4319:397:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4336:3:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4341:25:51",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4329:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4329:38:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4329:38:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4376:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4396:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4390:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4380:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4438:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4446:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4434:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4434:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4457:3:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4462:2:51",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4453:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4453:12:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4467:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4412:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4412:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4412:62:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4483:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4497:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4502:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4493:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4493:16:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4487:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4529:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4533:2:51",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4525:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4525:11:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4538:19:51",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4518:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4518:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4518:40:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4567:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4589:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4583:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4583:13:51"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "4571:8:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4631:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4639:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4650:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:2:51",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4646:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4646:11:51"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4659:8:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4605:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4605:63:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4605:63:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4677:33:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4692:2:51"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "4696:8:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4688:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4688:17:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4707:2:51",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4684:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:26:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4287:3:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4292:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4300:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4311:3:51",
                "type": ""
              }
            ],
            "src": "3930:786:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4822:125:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4832:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4844:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4855:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4840:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4840:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4832:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4874:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4889:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:42:51",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:55:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4867:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4867:74:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4867:74:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4791:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4802:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4813:4:51",
                "type": ""
              }
            ],
            "src": "4721:226:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5081:168:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5091:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5103:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5114:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5099:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5099:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5091:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5133:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5148:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5156:42:51",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5144:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5144:55:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5126:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5126:74:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5126:74:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5220:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5231:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5216:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5216:18:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5236:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5209:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5209:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5209:34:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5042:9:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5053:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5061:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5072:4:51",
                "type": ""
              }
            ],
            "src": "4952:297:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5349:92:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5359:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5371:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5382:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5367:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5359:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5401:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5426:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5419:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5419:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5412:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5394:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5394:41:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5394:41:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5318:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5329:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5340:4:51",
                "type": ""
              }
            ],
            "src": "5254:187:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5547:76:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5557:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5569:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5580:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5565:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5565:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5557:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5599:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5610:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5592:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5592:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5592:25:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5516:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5527:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5538:4:51",
                "type": ""
              }
            ],
            "src": "5446:177:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5757:262:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5774:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5785:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5767:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5767:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5767:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5808:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5819:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5804:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5804:18:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5824:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5797:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5797:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5797:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5857:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5868:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5853:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5853:18:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5873:6:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5881:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5840:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5840:48:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5840:48:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5912:9:51"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5923:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5908:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5908:22:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5932:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5904:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5904:31:51"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5937:4:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5897:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5897:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5897:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5951:62:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5967:9:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5986:6:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5994:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5982:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5982:15:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6003:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5999:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5999:7:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5978:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5978:29:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5963:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5963:45:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6010:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5959:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5959:54:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5951:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5718:9:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5729:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5737:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5748:4:51",
                "type": ""
              }
            ],
            "src": "5628:391:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6142:125:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6152:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6164:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6175:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6160:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6160:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6152:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6194:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6209:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6217:42:51",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6205:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6205:55:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6187:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6187:74:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6187:74:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$4426__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6111:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6122:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6133:4:51",
                "type": ""
              }
            ],
            "src": "6024:243:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6393:262:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6410:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6421:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6403:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6403:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6403:21:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6433:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6453:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6447:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6447:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6437:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6480:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6491:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6476:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6476:18:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6496:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6469:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6469:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6469:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6538:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6546:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6534:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6534:15:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6555:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6566:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6551:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6551:18:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6571:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6512:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6512:66:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6512:66:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6587:62:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6603:9:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6622:6:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6630:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6618:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6618:15:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6639:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6635:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6635:7:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6614:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6614:29:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6599:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6599:45:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6595:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6595:54:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6587:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6362:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6373:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6384:4:51",
                "type": ""
              }
            ],
            "src": "6272:383:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6834:182:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6851:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6862:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6844:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6844:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6885:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6896:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6881:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6881:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6901:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6874:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6874:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6874:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6924:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6935:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6920:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6920:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6940:34:51",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6913:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6913:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6913:62:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6984:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6996:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7007:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6992:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6992:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6984:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6811:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6825:4:51",
                "type": ""
              }
            ],
            "src": "6660:356:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7195:168:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7212:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7223:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7205:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7205:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7205:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7246:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7257:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7242:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7242:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7262:2:51",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7235:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7235:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7235:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7285:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7296:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7281:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7281:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7301:20:51",
                        "type": "",
                        "value": "Only current owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7274:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7274:48:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7274:48:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7331:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7343:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7354:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7339:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7339:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7331:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7172:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7186:4:51",
                "type": ""
              }
            ],
            "src": "7021:342:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7542:237:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7559:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7570:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7552:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7552:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7552:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7593:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7604:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7589:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7589:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7609:2:51",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7582:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7582:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7582:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7632:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7643:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7628:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7628:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7648:34:51",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7621:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7621:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7621:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7703:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7714:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7699:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7699:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7719:17:51",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7692:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7692:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7692:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7746:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7758:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7769:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7754:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7754:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7746:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7519:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7533:4:51",
                "type": ""
              }
            ],
            "src": "7368:411:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7958:161:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7975:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7986:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7968:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7968:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7968:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8009:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8020:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8005:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8005:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8025:2:51",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7998:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8048:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8059:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8044:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8044:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8064:13:51",
                        "type": "",
                        "value": "Only minter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8037:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8037:41:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8037:41:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8087:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8099:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8110:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8095:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8095:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8087:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7935:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7949:4:51",
                "type": ""
              }
            ],
            "src": "7784:335:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8298:236:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8315:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8326:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8308:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8308:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8308:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8349:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8360:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8345:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8345:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8365:2:51",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8338:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8338:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8338:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8388:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8399:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8384:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8384:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8404:34:51",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8377:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8377:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8377:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8459:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8470:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8455:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8455:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8475:16:51",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8448:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8448:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8448:44:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8501:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8513:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8524:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8509:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8509:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8501:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8275:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8289:4:51",
                "type": ""
              }
            ],
            "src": "8124:410:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8713:235:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8730:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8741:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8723:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8723:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8723:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8764:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8775:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8760:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8760:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8780:2:51",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8753:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8753:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8753:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8803:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8814:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8799:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8799:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8819:34:51",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8792:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8792:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8792:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8874:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8885:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8870:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8870:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8890:15:51",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8863:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8863:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8863:43:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8915:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8927:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8938:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8923:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8923:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8915:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8690:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8704:4:51",
                "type": ""
              }
            ],
            "src": "8539:409:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9127:173:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9144:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9155:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9137:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9137:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9137:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9178:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9189:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9174:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9174:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9194:2:51",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9167:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9167:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9167:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9217:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9228:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9213:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9213:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9233:25:51",
                        "type": "",
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9206:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9206:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9206:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9268:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9280:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9291:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9276:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9276:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9268:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9104:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9118:4:51",
                "type": ""
              }
            ],
            "src": "8953:347:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9479:228:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9496:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9507:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9489:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9489:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9489:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9530:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9541:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9526:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9526:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9546:2:51",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9519:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9519:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9519:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9569:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9580:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9565:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9565:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9585:34:51",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9558:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9558:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9558:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9640:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9651:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9636:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9636:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9656:8:51",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9629:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:36:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9629:36:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9674:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9686:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9697:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9682:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9682:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9674:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9456:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9470:4:51",
                "type": ""
              }
            ],
            "src": "9305:402:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9886:160:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9903:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9914:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9896:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9896:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9896:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9937:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9948:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9933:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9933:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9953:2:51",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9926:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9926:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9926:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9976:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9987:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9972:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9972:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9992:12:51",
                        "type": "",
                        "value": "Only Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9965:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9965:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9965:40:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10014:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10026:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10037:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10022:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10014:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9863:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9877:4:51",
                "type": ""
              }
            ],
            "src": "9712:334:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10225:237:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10242:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10253:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10235:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10235:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10235:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10276:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10287:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10272:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10272:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10292:2:51",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10265:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10265:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10265:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10315:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10326:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10311:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10311:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10331:34:51",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10304:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10304:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10304:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10386:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10397:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10382:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10382:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10402:17:51",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10375:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10375:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10429:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10441:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10452:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10437:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10437:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10429:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10202:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10216:4:51",
                "type": ""
              }
            ],
            "src": "10051:411:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10515:80:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10542:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10544:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10544:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10544:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10531:1:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10538:1:51"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10534:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10534:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10528:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10528:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "10525:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10573:16:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10584:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10587:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10580:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10580:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10573:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10498:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10501:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10507:3:51",
                "type": ""
              }
            ],
            "src": "10467:128:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10652:116:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10711:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10713:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10713:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10713:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10683:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10676:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10676:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10669:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10669:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10691:1:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10702:1:51",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10698:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10698:6:51"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10706:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10694:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10694:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10688:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10688:21:51"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10665:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10665:45:51"
                  },
                  "nodeType": "YulIf",
                  "src": "10662:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10742:20:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10757:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10760:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10753:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10753:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10742:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10631:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10634:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10640:7:51",
                "type": ""
              }
            ],
            "src": "10600:168:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10826:205:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10836:10:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10845:1:51",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10840:1:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10905:63:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10930:3:51"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10935:1:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10926:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10926:11:51"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10949:3:51"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10954:1:51"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10945:3:51"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10945:11:51"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10939:5:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10939:18:51"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10919:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10919:39:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10919:39:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10866:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10869:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10863:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:13:51"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10877:19:51",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10879:15:51",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10888:1:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10891:2:51",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10884:3:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10884:10:51"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10879:1:51"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10859:3:51",
                    "statements": []
                  },
                  "src": "10855:113:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10994:31:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11007:3:51"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11012:6:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11003:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11003:16:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11021:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10996:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10996:27:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10996:27:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10983:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10986:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10980:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10980:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "10977:2:51"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10804:3:51",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10809:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10814:6:51",
                "type": ""
              }
            ],
            "src": "10773:258:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11083:89:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11110:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11112:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11112:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11112:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11103:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11096:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11096:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11093:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11141:25:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11152:5:51"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11163:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11159:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11159:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11148:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11148:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11141:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11065:5:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11075:3:51",
                "type": ""
              }
            ],
            "src": "11036:136:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11209:152:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11226:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11229:77:51",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11219:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11219:88:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11219:88:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11323:1:51",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11326:4:51",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11316:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11316:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11316:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11347:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11350:4:51",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11340:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11340:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11340:15:51"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11177:184:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11398:152:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11415:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11418:77:51",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11408:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11408:88:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11408:88:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11512:1:51",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11515:4:51",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11505:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11505:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11505:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11536:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11539:4:51",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11529:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11529:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11529:15:51"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11366:184:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11600:109:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11687:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11696:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11699:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11689:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11689:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11689:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11623:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11634:5:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11641:42:51",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11630:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11630:54:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11620:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11620:65:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11613:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11613:73:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11610:2:51"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11589:5:51",
                "type": ""
              }
            ],
            "src": "11555:154:51"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Freeport_$4426(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value2, value2) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value2, value2) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), tail)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$4426__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only current owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Only minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"0 is not a valid NFT ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 51,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "626:3629:33:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "626:3629:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:225:0;;;;;;;;;;-1:-1:-1;4473:225:0;;;;;:::i;:::-;;:::i;:::-;;;5419:14:51;;5412:22;5394:41;;5382:2;5367:18;4473:225:0;;;;;;;;5781:121;;;;;;;;;;-1:-1:-1;5781:121:0;;;;;:::i;:::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;;5781:121;;;;5592:25:51;;;5580:2;5565:18;5781:121:0;5547:76:51;6152:145:0;;;;;;;;;;-1:-1:-1;6152:145:0;;;;;:::i;:::-;;:::i;:::-;;7169:214;;;;;;;;;;-1:-1:-1;7169:214:0;;;;;:::i;:::-;;:::i;882:186:4:-;;;;;;;;;;-1:-1:-1;882:186:4;;;;;:::i;:::-;;:::i;1074:214::-;;;;;;:::i;:::-;;:::i;426:143:43:-;;;;;;;;;;-1:-1:-1;426:143:43;;;;;:::i;:::-;-1:-1:-1;;;;;4886:29:0;;502:4:43;4886:29:0;;;:12;;:29;:12;:29;;;;;525:37:43;4785:137:0;;;;;;;;;;;-1:-1:-1;4785:137:0;;;;;:::i;:::-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;;;;4785:137;780:24:33;;;;;;;;;;-1:-1:-1;780:24:33;;;;-1:-1:-1;;;;;780:24:33;;;;;;-1:-1:-1;;;;;4885:55:51;;;4867:74;;4855:2;4840:18;780:24:33;4822:125:51;345:74:43;;;;;;;;;;;;389:30;345:74;;2794:49:0;;;;;;;;;;-1:-1:-1;2794:49:0;2839:4;2794:49;;2553:360:33;;;;;;;;;;-1:-1:-1;2553:360:33;;;;;:::i;:::-;;:::i;3101:356::-;;;;;;;;;;-1:-1:-1;3101:356:33;;;;;:::i;:::-;;:::i;1178:180::-;;;;;;;;;;-1:-1:-1;1178:180:33;;;;;:::i;:::-;;:::i;4021:232::-;;;;;;;;;;-1:-1:-1;4021:232:33;;;;;:::i;:::-;4213:7;4135:86;;4021:232;6531:147:0;;;;;;;;;;-1:-1:-1;6531:147:0;;;;;:::i;:::-;;:::i;3545:248:33:-;;;;;;;;;;-1:-1:-1;3545:248:33;;;;;:::i;:::-;;:::i;4473:225:0:-;4558:4;4581:58;;;4596:43;4581:58;;:110;;-1:-1:-1;1142:36:15;1127:51;;;;4655:36:0;4574:117;4473:225;-1:-1:-1;;4473:225:0:o;6152:145::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;4358:30;4369:4;4375:12;:10;:12::i;:::-;4358:10;:30::i;:::-;6265:25:::1;6276:4;6282:7;6265:10;:25::i;:::-;6152:145:::0;;;:::o;7169:214::-;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7264:23:0;:7;-1:-1:-1;;;;;7264:23:0;;7256:83;;;;-1:-1:-1;;;7256:83:0;;10253:2:51;7256:83:0;;;10235:21:51;10292:2;10272:18;;;10265:30;10331:34;10311:18;;;10304:62;10402:17;10382:18;;;10375:45;10437:19;;7256:83:0;;;;;;;;;7350:26;7362:4;7368:7;7350:11;:26::i;:::-;7169:214;;:::o;882:186:4:-;955:36;973:17;955;:36::i;:::-;1001:60;1025:17;1044:9;;;;;;;;;;;;1055:5;1001:23;:60::i;:::-;882:186;:::o;1074:214::-;1181:36;1199:17;1181;:36::i;:::-;1227:54;1251:17;1270:4;1276;1227:23;:54::i;2553:360:33:-;2651:17;2643:53;;;;-1:-1:-1;;;2643:53:33;;9155:2:51;2643:53:33;;;9137:21:51;9194:2;9174:18;;;9167:30;9233:25;9213:18;;;9206:53;9276:18;;2643:53:33;9127:173:51;2643:53:33;2706:14;2723:12;:10;:12::i;:::-;2706:29;;2745:20;2768:23;2785:5;4213:7;4135:86;;4021:232;2768:23;2745:46;;2819:12;-1:-1:-1;;;;;2809:22:33;:6;-1:-1:-1;;;;;2809:22:33;;2801:46;;;;-1:-1:-1;;;2801:46:33;;7986:2:51;2801:46:33;;;7968:21:51;8025:2;8005:18;;;7998:30;8064:13;8044:18;;;8037:41;8095:18;;2801:46:33;7958:161:51;2801:46:33;2888:5;2880:6;-1:-1:-1;;;;;2862:44:33;;2895:10;;2862:44;;;;;;;:::i;:::-;;;;;;;;2553:360;;;;;:::o;3101:356::-;3198:17;3190:53;;;;-1:-1:-1;;;3190:53:33;;9155:2:51;3190:53:33;;;9137:21:51;9194:2;9174:18;;;9167:30;9233:25;9213:18;;;9206:53;9276:18;;3190:53:33;9127:173:51;3190:53:33;3253:13;3269:12;:10;:12::i;:::-;3309:8;;:32;;;;;-1:-1:-1;;;;;5144:55:51;;;3309:32:33;;;5126:74:51;5216:18;;;5209:34;;;3253:28:33;;-1:-1:-1;3291:15:33;;3309:8;;;;:18;;5099::51;;3309:32:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3291:50;;3369:1;3359:7;:11;3351:42;;;;-1:-1:-1;;;3351:42:33;;7223:2:51;3351:42:33;;;7205:21:51;7262:2;7242:18;;;7235:30;7301:20;7281:18;;;7274:48;7339:18;;3351:42:33;7195:168:51;3351:42:33;3432:5;3425;-1:-1:-1;;;;;3408:42:33;;3439:10;;3408:42;;;;;;;:::i;1178:180::-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8326:2:51;1448:89:3;;;8308:21:51;8365:2;8345:18;;;8338:30;8404:34;8384:18;;;8377:62;-1:-1:-1;;;8455:18:51;;;8448:44;8509:19;;1448:89:3;8298:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;1247:22:33::1;:20;:22::i;:::-;-1:-1:-1::0;;;;;1288:32:33;::::1;1280:41;;;::::0;::::1;;1331:8;:20:::0;;-1:-1:-1;;1331:20:33::1;-1:-1:-1::0;;;;;1331:20:33;::::1;;::::0;;1714:66:3;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;1178:180:33;;:::o;6531:147:0:-;5847:7;5873:12;;;:6;:12;;;;;:22;;;4358:30;4369:4;4375:12;:10;:12::i;4358:30::-;6645:26:::1;6657:4;6663:7;6645:11;:26::i;3545:248:33:-:0;3643:17;3635:53;;;;-1:-1:-1;;;3635:53:33;;9155:2:51;3635:53:33;;;9137:21:51;9194:2;9174:18;;;9167:30;9233:25;9213:18;;;9206:53;9276:18;;3635:53:33;9127:173:51;3635:53:33;3698:14;3715:12;:10;:12::i;:::-;3698:29;;3768:5;3760:6;-1:-1:-1;;;;;3742:44:33;;3775:10;;3742:44;;;;;;;:::i;:::-;;;;;;;;3545:248;;;;:::o;575:371:43:-;637:14;667:30;686:10;-1:-1:-1;;;;;4886:29:0;;502:4:43;4886:29:0;;;:12;;:29;:12;:29;;;;;525:37:43;4785:137:0;667:30:43;663:277;;;-1:-1:-1;;;852:14:43;848:23;835:37;831:2;827:46;575:371;:::o;816:58::-;-1:-1:-1;901:10:11;;575:371:43:o;5203:397:0:-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;5278:316;;5411:52;5450:7;-1:-1:-1;;;;;5411:52:0;5460:2;5411:30;:52::i;:::-;5518:49;5557:4;5564:2;5518:30;:49::i;:::-;5334:247;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5334:247:0;;;;;;;;;;-1:-1:-1;;;5320:263:0;;;;;;;:::i;8381:224::-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;8450:149;;8493:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8493:29:0;;;;;;;;;:36;;-1:-1:-1;;8493:36:0;8525:4;8493:36;;;8575:12;:10;:12::i;:::-;-1:-1:-1;;;;;8548:40:0;8566:7;-1:-1:-1;;;;;8548:40:0;8560:4;8548:40;;;;;;;;;;8381:224;;:::o;8611:225::-;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;8681:149;;;8755:5;8723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8723:29:0;;;;;;;;;:37;;-1:-1:-1;;8723:37:0;;;8806:12;:10;:12::i;:::-;-1:-1:-1;;;;;8779:40:0;8797:7;-1:-1:-1;;;;;8779:40:0;8791:4;8779:40;;;;;;;;;;8611:225;;:::o;575:151:48:-;693:10;2839:4:0;4886:29;;;:12;;:29;:12;:29;;;;;657:62:48;;;;-1:-1:-1;;;657:62:48;;9914:2:51;657:62:48;;;9896:21:51;9953:2;9933:18;;;9926:30;9992:12;9972:18;;;9965:40;10022:18;;657:62:48;9886:160:51;2851:1322:1;2965:25;2993:20;1185:66;1535:65;-1:-1:-1;;;;;1535:65:1;;1456:151;2993:20;2965:48;;3066:37;3085:17;3066:18;:37::i;:::-;3131:1;3117:4;:11;:15;:28;;;;3136:9;3117:28;3113:105;;;3161:46;3183:17;3202:4;3161:21;:46::i;:::-;;3113:105;844:66;3417:21;;;;3412:755;;3530:28;;-1:-1:-1;;3530:28:1;3554:4;3530:28;;;3646:122;;-1:-1:-1;;;;;4885:55:51;;3646:122:1;;;4867:74:51;3572:210:1;;3611:17;;4840:18:51;;3646:122:1;;;-1:-1:-1;;3646:122:1;;;;;;;;;;;;;;;;;;;;3572:21;:210::i;:::-;-1:-1:-1;3796:29:1;;-1:-1:-1;;3796:29:1;;;1185:66;1535:65;-1:-1:-1;;;;;3891:41:1;;;1535:65;;3891:41;3883:101;;;;-1:-1:-1;;;3883:101:1;;7570:2:51;3883:101:1;;;7552:21:51;7609:2;7589:18;;;7582:30;7648:34;7628:18;;;7621:62;7719:17;7699:18;;;7692:45;7754:19;;3883:101:1;7542:237:51;3883:101:1;4073:37;4092:17;4073:18;:37::i;:::-;4129:27;;-1:-1:-1;;;;;4129:27:1;;;;;;;;3412:755;2851:1322;;;;;:::o;261:78:43:-;312:20;:18;:20::i;:::-;261:78::o;1542:437:13:-;1617:13;1642:19;1674:10;1678:6;1674:1;:10;:::i;:::-;:14;;1687:1;1674:14;:::i;:::-;1664:25;;;;;;-1:-1:-1;;;1664:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:25:13;;1642:47;;1699:15;:6;1706:1;1699:9;;;;;;-1:-1:-1;;;1699:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1699:15:13;;;;;;;;;1724;:6;1731:1;1724:9;;;;;;-1:-1:-1;;;1724:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1724:15:13;;;;;;;;-1:-1:-1;1754:9:13;1766:10;1770:6;1766:1;:10;:::i;:::-;:14;;1779:1;1766:14;:::i;:::-;1754:26;;1749:128;1786:1;1782;:5;1749:128;;;1820:8;1829:5;1837:3;1829:11;1820:21;;;;;-1:-1:-1;;;1820:21:13;;;;;;;;;;;;1808:6;1815:1;1808:9;;;;;;-1:-1:-1;;;1808:9:13;;;;;;;;;;;;:33;-1:-1:-1;;;;;1808:33:13;;;;;;;;-1:-1:-1;1865:1:13;1855:11;;;;;1789:3;;;:::i;:::-;;;1749:128;;;-1:-1:-1;1894:10:13;;1886:55;;;;-1:-1:-1;;;1886:55:13;;6862:2:51;1886:55:13;;;6844:21:51;;;6881:18;;;6874:30;6940:34;6920:18;;;6913:62;6992:18;;1886:55:13;6834:182:51;1886:55:13;1965:6;1542:437;-1:-1:-1;;;1542:437:13:o;1698:281:1:-;1089:20:10;;1771:106:1;;;;-1:-1:-1;;;1771:106:1;;8741:2:51;1771:106:1;;;8723:21:51;8780:2;8760:18;;;8753:30;8819:34;8799:18;;;8792:62;8890:15;8870:18;;;8863:43;8923:19;;1771:106:1;8713:235:51;1771:106:1;1185:66;1887:85;;-1:-1:-1;;1887:85:1;-1:-1:-1;;;;;1887:85:1;;;;;;;;;;1698:281::o;7352:437::-;7435:12;1089:20:10;;7459:88:1;;;;-1:-1:-1;;;7459:88:1;;9507:2:51;7459:88:1;;;9489:21:51;9546:2;9526:18;;;9519:30;9585:34;9565:18;;;9558:62;9656:8;9636:18;;;9629:36;9682:19;;7459:88:1;9479:228:51;7459:88:1;7618:12;7632:23;7659:6;-1:-1:-1;;;;;7659:19:1;7679:4;7659:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:67;;;;7701:81;7719:7;7728:10;7701:81;;;;;;;;;;;;;;;;;:17;:81::i;:::-;7694:88;7352:437;-1:-1:-1;;;;;7352:437:1:o;404:165:48:-;453:24;:22;:24::i;:::-;487:22;:20;:22::i;:::-;520:42;2839:4:0;551:10:48;520;:42::i;7795:725:1:-;7910:12;7938:7;7934:580;;;-1:-1:-1;7968:10:1;7961:17;;7934:580;8079:17;;:21;8075:429;;8337:10;8331:17;8397:15;8384:10;8380:2;8376:19;8369:44;8286:145;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;650:149:4:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8326:2:51;1448:89:3;;;8308:21:51;8365:2;8345:18;;;8338:30;8404:34;8384:18;;;8377:62;-1:-1:-1;;;8455:18:51;;;8448:44;8509:19;;1448:89:3;8298:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;715:33:4::1;:31;:33::i;:::-;758:34;:32;:34::i;:::-;1718:14:3::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;650:149:4;:::o;2390:173:0:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8326:2:51;1448:89:3;;;8308:21:51;8365:2;8345:18;;;8338:30;8404:34;8384:18;;;8377:62;-1:-1:-1;;;8455:18:51;;;8448:44;8509:19;;1448:89:3;8298:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;2453:26:0::1;:24;:26::i;7948:110::-:0;8026:25;8037:4;8043:7;8026:10;:25::i;647:71:1:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;8326:2:51;1448:89:3;;;8308:21:51;8365:2;8345:18;;;8338:30;8404:34;8384:18;;;8377:62;-1:-1:-1;;;8455:18:51;;;8448:44;8509:19;;1448:89:3;8298:236:51;1448:89:3;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1714:66;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;647:71:1;:::o;14:257:51:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:1101::-;353:6;361;414:2;402:9;393:7;389:23;385:32;382:2;;;435:6;427;420:22;382:2;479:9;466:23;498:31;523:5;498:31;:::i;:::-;548:5;-1:-1:-1;604:2:51;589:18;;576:32;627:18;657:14;;;654:2;;;689:6;681;674:22;654:2;732:6;721:9;717:22;707:32;;777:7;770:4;766:2;762:13;758:27;748:2;;804:6;796;789:22;748:2;845;832:16;867:2;863;860:10;857:2;;;873:18;;:::i;:::-;948:2;942:9;916:2;1002:13;;-1:-1:-1;;998:22:51;;;1022:2;994:31;990:40;978:53;;;1046:18;;;1066:22;;;1043:46;1040:2;;;1092:18;;:::i;:::-;1132:10;1128:2;1121:22;1167:2;1159:6;1152:18;1207:7;1202:2;1197;1193;1189:11;1185:20;1182:33;1179:2;;;1233:6;1225;1218:22;1179:2;1294;1289;1285;1281:11;1276:2;1268:6;1264:15;1251:46;1339:6;1334:2;1329;1321:6;1317:15;1313:24;1306:40;1365:6;1355:16;;;;;;;372:1005;;;;;:::o;1382:190::-;1441:6;1494:2;1482:9;1473:7;1469:23;1465:32;1462:2;;;1515:6;1507;1500:22;1462:2;-1:-1:-1;1543:23:51;;1452:120;-1:-1:-1;1452:120:51:o;1577:325::-;1645:6;1653;1706:2;1694:9;1685:7;1681:23;1677:32;1674:2;;;1727:6;1719;1712:22;1674:2;1768:9;1755:23;1745:33;;1828:2;1817:9;1813:18;1800:32;1841:31;1866:5;1841:31;:::i;:::-;1891:5;1881:15;;;1664:238;;;;;:::o;1907:352::-;1965:6;2018:2;2006:9;1997:7;1993:23;1989:32;1986:2;;;2039:6;2031;2024:22;1986:2;2083:9;2070:23;2133:66;2126:5;2122:78;2115:5;2112:89;2102:2;;2220:6;2212;2205:22;2738:194;2808:6;2861:2;2849:9;2840:7;2836:23;2832:32;2829:2;;;2882:6;2874;2867:22;2829:2;-1:-1:-1;2910:16:51;;2819:113;-1:-1:-1;2819:113:51:o;2937:709::-;3016:6;3024;3032;3085:2;3073:9;3064:7;3060:23;3056:32;3053:2;;;3106:6;3098;3091:22;3053:2;3147:9;3134:23;3124:33;;3208:2;3197:9;3193:18;3180:32;3231:18;3272:2;3264:6;3261:14;3258:2;;;3293:6;3285;3278:22;3258:2;3336:6;3325:9;3321:22;3311:32;;3381:7;3374:4;3370:2;3366:13;3362:27;3352:2;;3408:6;3400;3393:22;3352:2;3453;3440:16;3479:2;3471:6;3468:14;3465:2;;;3500:6;3492;3485:22;3465:2;3550:7;3545:2;3536:6;3532:2;3528:15;3524:24;3521:37;3518:2;;;3576:6;3568;3561:22;3518:2;3612;3608;3604:11;3594:21;;3634:6;3624:16;;;;;3043:603;;;;;:::o;3651:274::-;3780:3;3818:6;3812:13;3834:53;3880:6;3875:3;3868:4;3860:6;3856:17;3834:53;:::i;:::-;3903:16;;;;;3788:137;-1:-1:-1;;3788:137:51:o;3930:786::-;4341:25;4336:3;4329:38;4311:3;4396:6;4390:13;4412:62;4467:6;4462:2;4457:3;4453:12;4446:4;4438:6;4434:17;4412:62;:::i;:::-;4538:19;4533:2;4493:16;;;4525:11;;;4518:40;4583:13;;4605:63;4583:13;4654:2;4646:11;;4639:4;4627:17;;4605:63;:::i;:::-;4688:17;4707:2;4684:26;;4319:397;-1:-1:-1;;;;4319:397:51:o;5628:391::-;5785:2;5774:9;5767:21;5824:6;5819:2;5808:9;5804:18;5797:34;5881:6;5873;5868:2;5857:9;5853:18;5840:48;5748:4;5908:22;;;5932:2;5904:31;;;5897:45;;;;6003:2;5982:15;;;-1:-1:-1;;5978:29:51;5963:45;5959:54;;5757:262;-1:-1:-1;5757:262:51:o;6272:383::-;6421:2;6410:9;6403:21;6384:4;6453:6;6447:13;6496:6;6491:2;6480:9;6476:18;6469:34;6512:66;6571:6;6566:2;6555:9;6551:18;6546:2;6538:6;6534:15;6512:66;:::i;:::-;6639:2;6618:15;-1:-1:-1;;6614:29:51;6599:45;;;;6646:2;6595:54;;6393:262;-1:-1:-1;;6393:262:51:o;10467:128::-;10507:3;10538:1;10534:6;10531:1;10528:13;10525:2;;;10544:18;;:::i;:::-;-1:-1:-1;10580:9:51;;10515:80::o;10600:168::-;10640:7;10706:1;10702;10698:6;10694:14;10691:1;10688:21;10683:1;10676:9;10669:17;10665:45;10662:2;;;10713:18;;:::i;:::-;-1:-1:-1;10753:9:51;;10652:116::o;10773:258::-;10845:1;10855:113;10869:6;10866:1;10863:13;10855:113;;;10945:11;;;10939:18;10926:11;;;10919:39;10891:2;10884:10;10855:113;;;10986:6;10983:1;10980:13;10977:2;;;11021:1;11012:6;11007:3;11003:16;10996:27;10977:2;;10826:205;;;:::o;11036:136::-;11075:3;11103:5;11093:2;;11112:18;;:::i;:::-;-1:-1:-1;;;11148:18:51;;11083:89::o;11177:184::-;-1:-1:-1;;;11226:1:51;11219:88;11326:4;11323:1;11316:15;11350:4;11347:1;11340:15;11366:184;-1:-1:-1;;;11415:1:51;11408:88;11515:4;11512:1;11505:15;11539:4;11536:1;11529:15;11555:154;-1:-1:-1;;;;;11634:5:51;11630:54;11623:5;11620:65;11610:2;;11699:1;11696;11689:12",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./Freeport.sol\";\n\n/** The contract NFTAttachment allows users to attach objects to NFTs.\n * Some application can listen for the events and interpret the objects in some way.\n *\n * There are three roles who can attach objects to an NFT:\n * the minter, any current owner, or any anonymous account.\n * A different event is emitted for each role.\n *\n * The attachment data is meant to identify an object hosted externally,\n * such as a CID, a.k.a. Content Identifier, or a DDC URL.\n * The content may be retrieved from Cere DDC or some other store.\n */\ncontract NFTAttachment is /* AccessControl, */ MetaTxContext {\n\n    /** This attachment contract refers to the NFT contract in this variable.\n     */\n    Freeport public freeport;\n\n    /** The token ID that represents the internal currency for all payments in Freeport. */\n    uint256 constant CURRENCY = 0;\n\n    /** Set which NFT contract to refer to.\n     *\n     * The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n     *\n     * The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\n     */\n    function initialize(Freeport _freeport) public initializer {\n        __MetaTxContext_init();\n\n        require(address(_freeport) != address(0));\n        freeport = _freeport;\n    }\n\n    /** The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\n     */\n    event MinterAttachToNFT(\n        address indexed minter,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `owner` owned at least one NFT of this type at the time of the event.\n     */\n    event OwnerAttachToNFT(\n        address indexed owner,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the attachment means.\n     */\n    event AnonymAttachToNFT(\n        address indexed anonym,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n     *\n     * This only works for NFT IDs in the Freeport format.\n     */\n    function minterAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address minter = _msgSender();\n        address actualMinter = _minterFromNftId(nftId);\n        require(minter == actualMinter, \"Only minter\");\n        emit MinterAttachToNFT(minter, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n     *\n     * This works for NFTs in the ERC-1155 or Freeport standards.\n     */\n    function ownerAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address owner = _msgSender();\n        uint256 balance = freeport.balanceOf(owner, nftId);\n        require(balance > 0, \"Only current owner\");\n        emit OwnerAttachToNFT(owner, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as any account.\n     */\n    function anonymAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address anonym = _msgSender();\n        emit AnonymAttachToNFT(anonym, nftId, attachment);\n    }\n\n    /** Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n     *\n     * This does not imply that the NFTs exist.\n     *\n     * This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\n     */\n    function _minterFromNftId(uint256 id)\n    public pure returns (address minter) {\n        minter = address(uint160((id & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000) >> (32 + 64)));\n        return minter;\n    }\n}\n",
  "sourcePath": "/Users/neanvo/WorkFlow/cere/Freeport-Smart-Contracts/contracts/NFTAttachment.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        5747
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        5821
      ],
      "ERC1155Upgradeable": [
        8640
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        5949
      ],
      "Freeport": [
        4426
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        6210
      ],
      "JointAccounts": [
        6554
      ],
      "MetaTxContext": [
        6631
      ],
      "NFTAttachment": [
        4806
      ],
      "SimpleExchange": [
        6879
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        7495
      ],
      "TransferOperator": [
        7539
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        7580
      ]
    },
    "id": 4807,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4598,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 4599,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6632,
        "src": "25:43:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 4600,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 4427,
        "src": "69:24:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4602,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6631,
              "src": "673:13:33"
            },
            "id": 4603,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:33"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4601,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:33",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 4806,
        "linearizedBaseContracts": [
          4806,
          6631,
          7580,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "NFTAttachment",
        "nameLocation": "635:13:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4604,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:33",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 4607,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:33",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "780:24:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4426",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 4606,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4605,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4426,
                "src": "780:8:33"
              },
              "referencedDeclaration": 4426,
              "src": "780:8:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4426",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4608,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:33",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 4611,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:33",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "903:29:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4609,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 4610,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:33",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4639,
              "nodeType": "Block",
              "src": "1237:121:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4620,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6566,
                      "src": "1247:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:22:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4622,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:22:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4626,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4615,
                              "src": "1296:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$4426",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$4426",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 4625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1288:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1288:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:18:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1310:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4628,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1310:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:10:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1288:32:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:41:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4634,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:41:33"
                },
                {
                  "expression": {
                    "id": 4637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4635,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4607,
                      "src": "1331:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4636,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4615,
                      "src": "1342:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1331:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 4638,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:20:33"
                }
              ]
            },
            "documentation": {
              "id": 4612,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:33",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "functionSelector": "c4d66de8",
            "id": 4640,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4617,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1225:11:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:11:33"
              }
            ],
            "name": "initialize",
            "nameLocation": "1187:10:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4615,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1207:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4640,
                  "src": "1198:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4426",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 4614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4613,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4426,
                      "src": "1198:8:33"
                    },
                    "referencedDeclaration": 4426,
                    "src": "1198:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:20:33"
            },
            "returnParameters": {
              "id": 4619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:33"
            },
            "scope": 4806,
            "src": "1178:180:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4641,
              "nodeType": "StructuredDocumentation",
              "src": "1364:213:33",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "id": 4649,
            "name": "MinterAttachToNFT",
            "nameLocation": "1588:17:33",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1631:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1615:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4645,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1663:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1647:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4647,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1684:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1678:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4646,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:90:33"
            },
            "src": "1582:114:33"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4650,
              "nodeType": "StructuredDocumentation",
              "src": "1702:179:33",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "id": 4658,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1892:16:33",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4652,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1934:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "1918:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4654,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1965:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "1949:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4656,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1986:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "1980:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4655,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:89:33"
            },
            "src": "1886:112:33"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4659,
              "nodeType": "StructuredDocumentation",
              "src": "2004:260:33",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "id": 4667,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2275:17:33",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4661,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2318:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4667,
                  "src": "2302:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4663,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2350:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4667,
                  "src": "2334:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4665,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2371:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4667,
                  "src": "2365:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4664,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:90:33"
            },
            "src": "2269:114:33"
          },
          {
            "body": {
              "id": 4706,
              "nodeType": "Block",
              "src": "2633:280:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4676,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4670,
                          "src": "2651:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4677,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4611,
                          "src": "2660:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2651:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:53:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4681,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:53:33"
                },
                {
                  "assignments": [
                    4683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4683,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2714:6:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "2706:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4682,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4686,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4684,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6603
                      ],
                      "referencedDeclaration": 6603,
                      "src": "2723:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:12:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:29:33"
                },
                {
                  "assignments": [
                    4688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4688,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2753:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "2745:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4687,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2745:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4692,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4690,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "2785:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4689,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4805,
                      "src": "2768:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 4691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:23:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2745:46:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4694,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4683,
                          "src": "2809:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4695,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "2819:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 4693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:46:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:46:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4701,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4683,
                        "src": "2880:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4702,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "2888:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4703,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4672,
                        "src": "2895:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4700,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4649,
                      "src": "2862:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:44:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4705,
                  "nodeType": "EmitStatement",
                  "src": "2857:49:33"
                }
              ]
            },
            "documentation": {
              "id": 4668,
              "nodeType": "StructuredDocumentation",
              "src": "2389:159:33",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 4707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2562:17:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4670,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2588:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "2580:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4672,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2610:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "2595:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4671,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:42:33"
            },
            "returnParameters": {
              "id": 4674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:33"
            },
            "scope": 4806,
            "src": "2553:360:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4748,
              "nodeType": "Block",
              "src": "3180:277:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4716,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4710,
                          "src": "3198:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4717,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4611,
                          "src": "3207:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3198:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:53:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4721,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:53:33"
                },
                {
                  "assignments": [
                    4723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4723,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3261:5:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4748,
                      "src": "3253:13:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4722,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4726,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4724,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6603
                      ],
                      "referencedDeclaration": 6603,
                      "src": "3269:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:12:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3253:28:33"
                },
                {
                  "assignments": [
                    4728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4728,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3299:7:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4748,
                      "src": "3291:15:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3291:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4734,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4731,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "3328:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4732,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "3335:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4729,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4607,
                        "src": "3309:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4426",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 4730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7719,
                      "src": "3309:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:32:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3291:50:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4736,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4728,
                          "src": "3359:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3369:1:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3359:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 4739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3372:20:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 4735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:42:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4741,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:42:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4743,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "3425:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4744,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "3432:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4745,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4712,
                        "src": "3439:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4742,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4658,
                      "src": "3408:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:42:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4747,
                  "nodeType": "EmitStatement",
                  "src": "3403:47:33"
                }
              ]
            },
            "documentation": {
              "id": 4708,
              "nodeType": "StructuredDocumentation",
              "src": "2919:177:33",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 4749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3110:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4710,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3135:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4749,
                  "src": "3127:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4712,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3157:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4749,
                  "src": "3142:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3126:42:33"
            },
            "returnParameters": {
              "id": 4714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:33"
            },
            "scope": 4806,
            "src": "3101:356:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4775,
              "nodeType": "Block",
              "src": "3625:168:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4758,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4752,
                          "src": "3643:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4759,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4611,
                          "src": "3652:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3643:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3662:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3635:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:53:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4763,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:53:33"
                },
                {
                  "assignments": [
                    4765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4765,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3706:6:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4775,
                      "src": "3698:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4764,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3698:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4768,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4766,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6603
                      ],
                      "referencedDeclaration": 6603,
                      "src": "3715:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:12:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3698:29:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4770,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4765,
                        "src": "3760:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4771,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4752,
                        "src": "3768:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4772,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4754,
                        "src": "3775:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4769,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "3742:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:44:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4774,
                  "nodeType": "EmitStatement",
                  "src": "3737:49:33"
                }
              ]
            },
            "documentation": {
              "id": 4750,
              "nodeType": "StructuredDocumentation",
              "src": "3463:77:33",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 4776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3554:17:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4752,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3580:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4776,
                  "src": "3572:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4754,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3602:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4776,
                  "src": "3587:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4753,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:42:33"
            },
            "returnParameters": {
              "id": 4756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:0:33"
            },
            "scope": 4806,
            "src": "3545:248:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4804,
              "nodeType": "Block",
              "src": "4100:153:33",
              "statements": [
                {
                  "expression": {
                    "id": 4800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4784,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4782,
                      "src": "4110:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4791,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4789,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4779,
                                      "src": "4136:2:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 4790,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4141:66:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4136:71:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4792,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4135:73:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 4795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 4793,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4213:2:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 4794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4218:2:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4213:7:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 4796,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4212:9:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4135:86:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4127:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4787,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4127:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:95:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4119:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:33",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4119:104:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4110:113:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4801,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:113:33"
                },
                {
                  "expression": {
                    "id": 4802,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4782,
                    "src": "4240:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4783,
                  "id": 4803,
                  "nodeType": "Return",
                  "src": "4233:13:33"
                }
              ]
            },
            "documentation": {
              "id": 4777,
              "nodeType": "StructuredDocumentation",
              "src": "3799:217:33",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 4805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "4030:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4779,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4055:2:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "4047:10:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:12:33"
            },
            "returnParameters": {
              "id": 4783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4782,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4092:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "4084:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:16:33"
            },
            "scope": 4806,
            "src": "4021:232:33",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4807,
        "src": "626:3629:33",
        "usedErrors": []
      }
    ],
    "src": "0:4256:33"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        5747
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        5821
      ],
      "ERC1155Upgradeable": [
        8640
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        5949
      ],
      "Freeport": [
        4426
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        6210
      ],
      "JointAccounts": [
        6554
      ],
      "MetaTxContext": [
        6631
      ],
      "NFTAttachment": [
        4806
      ],
      "SimpleExchange": [
        6879
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        7495
      ],
      "TransferOperator": [
        7539
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        7580
      ]
    },
    "id": 4807,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4598,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 4599,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6632,
        "src": "25:43:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 4600,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 4427,
        "src": "69:24:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4602,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6631,
              "src": "673:13:33"
            },
            "id": 4603,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:33"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4601,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:33",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 4806,
        "linearizedBaseContracts": [
          4806,
          6631,
          7580,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "NFTAttachment",
        "nameLocation": "635:13:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4604,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:33",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 4607,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:33",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "780:24:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4426",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 4606,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4605,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4426,
                "src": "780:8:33"
              },
              "referencedDeclaration": 4426,
              "src": "780:8:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4426",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4608,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:33",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 4611,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:33",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "903:29:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4609,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 4610,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:33",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4639,
              "nodeType": "Block",
              "src": "1237:121:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4620,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6566,
                      "src": "1247:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:22:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4622,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:22:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4626,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4615,
                              "src": "1296:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$4426",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$4426",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 4625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1288:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1288:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:18:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1310:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4628,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1310:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:10:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1288:32:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:41:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4634,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:41:33"
                },
                {
                  "expression": {
                    "id": 4637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4635,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4607,
                      "src": "1331:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4636,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4615,
                      "src": "1342:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4426",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1331:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 4638,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:20:33"
                }
              ]
            },
            "documentation": {
              "id": 4612,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:33",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "functionSelector": "c4d66de8",
            "id": 4640,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4617,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1225:11:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:11:33"
              }
            ],
            "name": "initialize",
            "nameLocation": "1187:10:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4615,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1207:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4640,
                  "src": "1198:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4426",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 4614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4613,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4426,
                      "src": "1198:8:33"
                    },
                    "referencedDeclaration": 4426,
                    "src": "1198:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4426",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:20:33"
            },
            "returnParameters": {
              "id": 4619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:33"
            },
            "scope": 4806,
            "src": "1178:180:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4641,
              "nodeType": "StructuredDocumentation",
              "src": "1364:213:33",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "id": 4649,
            "name": "MinterAttachToNFT",
            "nameLocation": "1588:17:33",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1631:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1615:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4645,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1663:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1647:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4647,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1684:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1678:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4646,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:90:33"
            },
            "src": "1582:114:33"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4650,
              "nodeType": "StructuredDocumentation",
              "src": "1702:179:33",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "id": 4658,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1892:16:33",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4652,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1934:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "1918:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4654,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1965:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "1949:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4656,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1986:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "1980:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4655,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:89:33"
            },
            "src": "1886:112:33"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4659,
              "nodeType": "StructuredDocumentation",
              "src": "2004:260:33",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "id": 4667,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2275:17:33",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4661,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2318:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4667,
                  "src": "2302:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4663,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2350:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4667,
                  "src": "2334:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4665,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2371:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4667,
                  "src": "2365:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4664,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:90:33"
            },
            "src": "2269:114:33"
          },
          {
            "body": {
              "id": 4706,
              "nodeType": "Block",
              "src": "2633:280:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4676,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4670,
                          "src": "2651:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4677,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4611,
                          "src": "2660:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2651:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:53:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4681,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:53:33"
                },
                {
                  "assignments": [
                    4683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4683,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2714:6:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "2706:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4682,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4686,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4684,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6603
                      ],
                      "referencedDeclaration": 6603,
                      "src": "2723:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:12:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:29:33"
                },
                {
                  "assignments": [
                    4688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4688,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2753:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "2745:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4687,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2745:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4692,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4690,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "2785:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4689,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4805,
                      "src": "2768:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 4691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:23:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2745:46:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4694,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4683,
                          "src": "2809:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4695,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "2819:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 4693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:46:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:46:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4701,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4683,
                        "src": "2880:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4702,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "2888:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4703,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4672,
                        "src": "2895:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4700,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4649,
                      "src": "2862:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:44:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4705,
                  "nodeType": "EmitStatement",
                  "src": "2857:49:33"
                }
              ]
            },
            "documentation": {
              "id": 4668,
              "nodeType": "StructuredDocumentation",
              "src": "2389:159:33",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 4707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2562:17:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4670,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2588:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "2580:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4672,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2610:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "2595:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4671,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:42:33"
            },
            "returnParameters": {
              "id": 4674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:33"
            },
            "scope": 4806,
            "src": "2553:360:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4748,
              "nodeType": "Block",
              "src": "3180:277:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4716,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4710,
                          "src": "3198:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4717,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4611,
                          "src": "3207:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3198:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:53:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4721,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:53:33"
                },
                {
                  "assignments": [
                    4723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4723,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3261:5:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4748,
                      "src": "3253:13:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4722,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4726,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4724,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6603
                      ],
                      "referencedDeclaration": 6603,
                      "src": "3269:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:12:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3253:28:33"
                },
                {
                  "assignments": [
                    4728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4728,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3299:7:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4748,
                      "src": "3291:15:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3291:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4734,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4731,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "3328:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4732,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "3335:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4729,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4607,
                        "src": "3309:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4426",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 4730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7719,
                      "src": "3309:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:32:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3291:50:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4736,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4728,
                          "src": "3359:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3369:1:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3359:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 4739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3372:20:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 4735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:42:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4741,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:42:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4743,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "3425:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4744,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "3432:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4745,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4712,
                        "src": "3439:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4742,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4658,
                      "src": "3408:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:42:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4747,
                  "nodeType": "EmitStatement",
                  "src": "3403:47:33"
                }
              ]
            },
            "documentation": {
              "id": 4708,
              "nodeType": "StructuredDocumentation",
              "src": "2919:177:33",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 4749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3110:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4710,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3135:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4749,
                  "src": "3127:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4712,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3157:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4749,
                  "src": "3142:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3126:42:33"
            },
            "returnParameters": {
              "id": 4714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:33"
            },
            "scope": 4806,
            "src": "3101:356:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4775,
              "nodeType": "Block",
              "src": "3625:168:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4758,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4752,
                          "src": "3643:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4759,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4611,
                          "src": "3652:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3643:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3662:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 4757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3635:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:53:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4763,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:53:33"
                },
                {
                  "assignments": [
                    4765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4765,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3706:6:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 4775,
                      "src": "3698:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4764,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3698:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4768,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4766,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6603
                      ],
                      "referencedDeclaration": 6603,
                      "src": "3715:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:12:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3698:29:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4770,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4765,
                        "src": "3760:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4771,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4752,
                        "src": "3768:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4772,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4754,
                        "src": "3775:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 4769,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "3742:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:44:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4774,
                  "nodeType": "EmitStatement",
                  "src": "3737:49:33"
                }
              ]
            },
            "documentation": {
              "id": 4750,
              "nodeType": "StructuredDocumentation",
              "src": "3463:77:33",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 4776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3554:17:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4752,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3580:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4776,
                  "src": "3572:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4754,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3602:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4776,
                  "src": "3587:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4753,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:42:33"
            },
            "returnParameters": {
              "id": 4756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:0:33"
            },
            "scope": 4806,
            "src": "3545:248:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4804,
              "nodeType": "Block",
              "src": "4100:153:33",
              "statements": [
                {
                  "expression": {
                    "id": 4800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4784,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4782,
                      "src": "4110:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4791,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4789,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4779,
                                      "src": "4136:2:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 4790,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4141:66:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4136:71:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4792,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4135:73:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 4795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 4793,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4213:2:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 4794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4218:2:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4213:7:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 4796,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4212:9:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4135:86:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4127:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4787,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4127:7:33",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:95:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4119:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:33",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4119:104:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4110:113:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4801,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:113:33"
                },
                {
                  "expression": {
                    "id": 4802,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4782,
                    "src": "4240:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4783,
                  "id": 4803,
                  "nodeType": "Return",
                  "src": "4233:13:33"
                }
              ]
            },
            "documentation": {
              "id": 4777,
              "nodeType": "StructuredDocumentation",
              "src": "3799:217:33",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 4805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "4030:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4779,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4055:2:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "4047:10:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:12:33"
            },
            "returnParameters": {
              "id": 4783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4782,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4092:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "4084:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:16:33"
            },
            "scope": 4806,
            "src": "4021:232:33",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4807,
        "src": "626:3629:33",
        "usedErrors": []
      }
    ],
    "src": "0:4256:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {},
      "links": {},
      "address": "0x651f2C6942F1c290632Ad5bB61D9ece789f82f35",
      "transactionHash": "0xef845d373ce27fdd9561113a6c4600bdc790c0ba64e7fb82680fcdb748be6e3a"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x964910397De76431Cd0f802710Dd4336676C7301",
      "transactionHash": "0x92ec7022f08438d916fd2d98943743e2675e69644821e7cff383912cf8604e8d"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-06-23T12:59:33.703Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AnonymAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means."
      },
      "MinterAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
      },
      "OwnerAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event."
      }
    },
    "kind": "user",
    "methods": {
      "_minterFromNftId(uint256)": {
        "notice": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
      },
      "anonymAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as any account."
      },
      "freeport()": {
        "notice": "This attachment contract refers to the NFT contract in this variable."
      },
      "initialize(address)": {
        "notice": "Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
      },
      "minterAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format."
      },
      "ownerAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards."
      }
    },
    "notice": "The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.",
    "version": 1
  }
}
