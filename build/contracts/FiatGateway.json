{
  "contractName": "FiatGateway",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cereUnitsPerPenny",
          "type": "uint256"
        }
      ],
      "name": "SetExchangeRate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CURRENCY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "EXCHANGE_RATE_ORACLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAYMENT_SERVICE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalCereUnitsSent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalPenniesReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cereUnitsPerPenny",
          "type": "uint256"
        }
      ],
      "name": "setExchangeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "penniesReceived",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "buyCereFromUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "penniesReceived",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedPriceOrZero",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "buyNftFromUsd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cereUnitsPerPenny\",\"type\":\"uint256\"}],\"name\":\"SetExchangeRate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CURRENCY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXCHANGE_RATE_ORACLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMENT_SERVICE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penniesReceived\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"buyCereFromUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penniesReceived\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedPriceOrZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"buyNftFromUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cereUnitsPerPenny\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCereUnitsSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPenniesReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"SetExchangeRate(uint256)\":{\"notice\":\"An event emitted when the exchange rate was set to a new value. The rate is given as CERE Units (with 10 decimals) per USD cent (1 penny).\"}},\"kind\":\"user\",\"methods\":{\"CURRENCY()\":{\"notice\":\"The token ID that represents the CERE currency for all payments in this contract. \"},\"buyCereFromUsd(uint256,address,uint256)\":{\"notice\":\"Obtain CERE based on a fiat payment. The amount of fiat is recorded, and exchanged for an amount of CERE. Only the gateway with PAYMENT_SERVICE role can report successful payments.\"},\"buyNftFromUsd(uint256,address,address,uint256,uint256,uint256)\":{\"notice\":\"Obtain CERE and buy an NFT based on a fiat payment. CERE tokens are obtained in the same way as buyCereFromUsd. Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange. Only the gateway with PAYMENT_SERVICE role can report successful payments. The parameter expectedPriceOrZero can be used to validate the price that the buyer expects to pay. This prevents a race condition with makeOffer or setExchangeRate. Pass 0 to disable this validation and accept any current price.\"},\"getExchangeRate()\":{\"notice\":\"Get the current exchange rate in CERE Units (with 10 decimals) per USD cent (1 penny).\"},\"setExchangeRate(uint256)\":{\"notice\":\"Set the exchange rate between fiat (USD) and Freeport currency (CERE). The rate is given as number of CERE Units (with 10 decimals) per USD cent (1 penny). Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate.\"},\"totalCereUnitsSent()\":{\"notice\":\"How many CERE Units were sold so far.\"},\"totalPenniesReceived()\":{\"notice\":\"How many USD cents were received so far, according to the payment service.\"},\"withdraw()\":{\"notice\":\"Withdraw all CERE from this contract. Only accounts with DEFAULT_ADMIN_ROLE can withdraw.\"}},\"notice\":\"The FiatGateway contract allows buying NFTs from an external fiat payment. This contract connects to the Freeport contract. It must hold a balance of CERE recognized by Freeport. This contract uses the SimpleExchange API to buy NFTs. This contract is operational only when the exchange rate is set to a non-zero value.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FiatGateway.sol\":\"FiatGateway\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"project:/contracts/FiatGateway.sol\":{\"keccak256\":\"0x7317c670ddbbbfa3bcc0f866218665bb523025d424a76d3abcab3e4b4ad5270f\",\"urls\":[\"bzz-raw://ed4e1dd30a89b673a0d535bd8d278d45be10c6a1d93038d14cf51b25452fe92b\",\"dweb:/ipfs/QmZo5nweVcDxe9QFC1Gmx1BbbxD7y29QmwbvM59ZcGVC8i\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0x91e6faa8aa5fa113a68bdc8c7543953334d689235da5841699f44746fa6a7519\",\"urls\":[\"bzz-raw://c3dc50e46118f058ab0715ed96b06fc07afb86047f3019216481595764cc3642\",\"dweb:/ipfs/QmT9KwtTm4h8Nnrz3o4uQswdQ23ivSK5mDyP3tt8cp1sV1\"]},\"project:/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x2b13cfef09bbd2d5d7e681cdbf3f8d7294437dd761282fdc3ade98058ef633c3\",\"urls\":[\"bzz-raw://c713051b9ad441af6020c87db9797780bc746c67cc740018a3aed06dff6c7e7a\",\"dweb:/ipfs/QmeozyvJycaThbBtJy2LnYDZJzX7Eo6UsCMxHacyDgwvvB\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0x1008137cd28b99c360bc4b6efb19f37a4f276da3e78e1bddead4b8fc33b612a1\",\"urls\":[\"bzz-raw://001d88d26c9ef52142809d97f6043d53f9e1c5c8023dd07ff93e9a4407dd1844\",\"dweb:/ipfs/QmQJeYHx3aqomh3KmvHG4QvAiZkhUirJm2gTVUDLe573YN\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0xbd3fd0a50f969c02b3b23e08bdb48cd37d7cb230e402d8039dede3ec729602ae\",\"urls\":[\"bzz-raw://4eb1370b5bf61f4c6b7ec04549d16619b92a478566675d82d331c5dbcece9f41\",\"dweb:/ipfs/Qmc9JXnD86imGeAGXSTN25PMVRrRBSfCrMdVy3eP3vsrTJ\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0x46706d42441ad9f47cc1601e1a4bcbb45bc7d15e1e0a6da7299f6a8e309ac9a1\",\"urls\":[\"bzz-raw://cb88d8d36edceca3e6d3ed70131669a804537f6ea91b3ddf787aba89b923d40e\",\"dweb:/ipfs/QmWX7YzXDy3oQHFB55fVoVNxJg9CsoershK2xVUKTgHhPo\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0x12579308ed77228d87aad495399c8feff27642efa9aae8fe2fd2049da4140459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://568cafead94d0ecbee30203822e404d1bf53653257f933db70b6a035223189dd\",\"dweb:/ipfs/QmWmgcDLWNeswQF5WGM4zXpdaXcA4sQdWZbGvfSLEZWF2K\"]},\"project:/contracts/freeportParts/PolygonChildERC20.sol\":{\"keccak256\":\"0x3506210d9a05ee668b11226a696a9718b5dca3913950d257ffc9eacb65f3bbd8\",\"urls\":[\"bzz-raw://07da0da5853eaf00ad6dd2656d9aba17d677184e0493548aed3bfddd10b8a229\",\"dweb:/ipfs/QmXoEqspi57pRkrfm6Rk2JRQcX1zpYSeydZNohjFFdjUtd\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x99adff6ce49b17721004385476088979b1d79583ba83c81041c762762f543684\",\"urls\":[\"bzz-raw://fb2ca85b23d41f4b1fc339551bd827e95b19101b95c5fccd6b6590a724265e99\",\"dweb:/ipfs/QmeFYdincJfWLG3412Db8PPb5RBKVW86nuzw3AUxKjMw6B\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xc0bc6eacd5f58ecb10c3e06c9a34d75c7e665d4b85afb9b438d13c9bb515c347\",\"urls\":[\"bzz-raw://d13d012caa46fda6b3853e10a95ce60924f68865b68619591483afea1a3563f2\",\"dweb:/ipfs/QmbeRRXZ8qdEbUrSSzrgfWWr3otMAeB33bXcGGu7JaPAvc\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0xa3b4dd13b4bfd8894da16813415503a755e8fc1a8e081f5a98ffeb7782395d4c\",\"urls\":[\"bzz-raw://539d2f0d0c50ac93ce9f3da7010c06ee2868bb2a27a282a988d88c5644c34609\",\"dweb:/ipfs/Qmf9j9neJ3h9JfekGZ1FA9uYLv599WZkqjMv4KojtCdWZy\"]},\"project:/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xeaafe1c2ab42941716da1c12d401bb708528bd08053d043f16c102d4bb219c8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5e012cd4f44be154d1d53e49de4298d47b44393086c71aa7009bc6040eef73\",\"dweb:/ipfs/QmbxfsFYjeksnjW8GYTHEiXx19iN47VdcGdyqaSRPuFvSR\"]},\"project:/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"project:/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7c0ea2d284bad1aa002165ba4c5eac30070be8e56b19dba1ac7c8f2c8bd4832c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46cd1e78707bb21fc6255c1cc9356537cc767e74f112553ea9305938a325bacb\",\"dweb:/ipfs/QmcG9KekAb77Bh5S62w8SJ4N8qhsmx8ewWF5cWoxC9DEuN\"]},\"project:/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"project:/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"project:/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"project:/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"project:/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e82380380610e8283398101604081905261002f9161010d565b600180546001600160a01b0319166001600160a01b03831617905561005b60006100563390565b610061565b5061013b565b61006b828261006f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661006b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100c93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006020828403121561011e578081fd5b81516001600160a01b0381168114610134578182fd5b9392505050565b610d388061014a6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c806301ffc9a7146100eb578063248a9ca3146101135780632f2ff15d146101345780633263ba671461014957806336568abe1461015e5780633ccfd60b1461017157806391d14854146101795780639470ad851461018c5780639c750286146101b7578063a217fddf146101c0578063a87a9322146101c8578063c4f7f9c5146101db578063c87113e2146101ee578063d547741f14610203578063db068e0e14610216578063e65372e114610229578063e6aa216c14610232578063f5361219146101c0575b600080fd5b6100fe6100f9366004610a89565b61023a565b60405190151581526020015b60405180910390f35b610126610121366004610a46565b610271565b60405190815260200161010a565b610147610142366004610a5e565b610286565b005b610126600080516020610ce383398151915281565b61014761016c366004610a5e565b6102a8565b61012661032b565b6100fe610187366004610a5e565b610432565b60015461019f906001600160a01b031681565b6040516001600160a01b03909116815260200161010a565b61012660045481565b610126600081565b6101476101d6366004610ac9565b61045b565b6101266101e9366004610b20565b610565565b610126600080516020610cc383398151915281565b610147610211366004610a5e565b610683565b610147610224366004610a46565b6106a0565b61012660035481565b600254610126565b60006001600160e01b03198216637965db0b60e01b148061026b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61028f82610271565b61029981336106f5565b6102a38383610759565b505050565b6001600160a01b038116331461031d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61032782826107dd565b5050565b60008061033881336106f5565b600033600154604051627eeac760e11b81523060048201526000602482018190529293506001600160a01b039091169062fdd58e9060440160206040518083038186803b15801561038857600080fd5b505afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190610ab1565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906103f890309086906000908790600401610bc3565b600060405180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b50929550505050505090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020610ce383398151915261047481336106f5565b6000610481888885610565565b9050838110156104dd5760405162461bcd60e51b815260206004820152602160248201527f52656365697665642066657765722043657265207468616e20657870656374656044820152601960fa1b6064820152608401610314565b60018054604051634880d24760e01b81526001600160a01b038a81166004830152898116602483015260448201899052606482018890526084820184905290911690634880d2479060a401600060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b50505050505050505050505050565b6000600080516020610ce383398151915261058081336106f5565b6002546105cf5760405162461bcd60e51b815260206004820181905260248201527f45786368616e67652072617465206d75737420626520636f6e666967757265646044820152606401610314565b6000600254866105df9190610c46565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a9061061790309089906000908790600401610bc3565b600060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b50505050856003600082825461065b9190610c2e565b9250508190555080600460008282546106749190610c2e565b90915550909695505050505050565b61068c82610271565b61069681336106f5565b6102a383836107dd565b600080516020610cc38339815191526106b981336106f5565b60028290556040518281527f1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c9060200160405180910390a15050565b6106ff8282610432565b61032757610717816001600160a01b03166014610842565b610722836020610842565b604051602001610733929190610b54565b60408051601f198184030181529082905262461bcd60e51b825261031491600401610bfb565b6107638282610432565b610327576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556107993390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6107e78282610432565b15610327576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60606000610851836002610c46565b61085c906002610c2e565b6001600160401b0381111561088157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108ab576020820181803683370190505b509050600360fc1b816000815181106108d457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061091157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610935846002610c46565b610940906001610c2e565b90505b60018111156109d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061098257634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106109a657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936109cd81610c95565b9050610943565b508315610a235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610314565b9392505050565b80356001600160a01b0381168114610a4157600080fd5b919050565b600060208284031215610a57578081fd5b5035919050565b60008060408385031215610a70578081fd5b82359150610a8060208401610a2a565b90509250929050565b600060208284031215610a9a578081fd5b81356001600160e01b031981168114610a23578182fd5b600060208284031215610ac2578081fd5b5051919050565b60008060008060008060c08789031215610ae1578182fd5b86359550610af160208801610a2a565b9450610aff60408801610a2a565b9350606087013592506080870135915060a087013590509295509295509295565b600080600060608486031215610b34578283fd5b83359250610b4460208501610a2a565b9150604084013590509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610b86816017850160208801610c65565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610bb7816028840160208801610c65565b01602801949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6020815260008251806020840152610c1a816040850160208701610c65565b601f01601f19169190910160400192915050565b60008219821115610c4157610c41610cac565b500190565b6000816000190483118215151615610c6057610c60610cac565b500290565b60005b83811015610c80578181015183820152602001610c68565b83811115610c8f576000848401525b50505050565b600081610ca457610ca4610cac565b506000190190565b634e487b7160e01b600052601160045260246000fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb53979fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092fa2646970667358221220024dad1f7771095e743b4eaa73b5dbd5c4c39bea5ff856f4470da292dc524fc464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100e65760003560e01c806301ffc9a7146100eb578063248a9ca3146101135780632f2ff15d146101345780633263ba671461014957806336568abe1461015e5780633ccfd60b1461017157806391d14854146101795780639470ad851461018c5780639c750286146101b7578063a217fddf146101c0578063a87a9322146101c8578063c4f7f9c5146101db578063c87113e2146101ee578063d547741f14610203578063db068e0e14610216578063e65372e114610229578063e6aa216c14610232578063f5361219146101c0575b600080fd5b6100fe6100f9366004610a89565b61023a565b60405190151581526020015b60405180910390f35b610126610121366004610a46565b610271565b60405190815260200161010a565b610147610142366004610a5e565b610286565b005b610126600080516020610ce383398151915281565b61014761016c366004610a5e565b6102a8565b61012661032b565b6100fe610187366004610a5e565b610432565b60015461019f906001600160a01b031681565b6040516001600160a01b03909116815260200161010a565b61012660045481565b610126600081565b6101476101d6366004610ac9565b61045b565b6101266101e9366004610b20565b610565565b610126600080516020610cc383398151915281565b610147610211366004610a5e565b610683565b610147610224366004610a46565b6106a0565b61012660035481565b600254610126565b60006001600160e01b03198216637965db0b60e01b148061026b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61028f82610271565b61029981336106f5565b6102a38383610759565b505050565b6001600160a01b038116331461031d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61032782826107dd565b5050565b60008061033881336106f5565b600033600154604051627eeac760e11b81523060048201526000602482018190529293506001600160a01b039091169062fdd58e9060440160206040518083038186803b15801561038857600080fd5b505afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190610ab1565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906103f890309086906000908790600401610bc3565b600060405180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b50929550505050505090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020610ce383398151915261047481336106f5565b6000610481888885610565565b9050838110156104dd5760405162461bcd60e51b815260206004820152602160248201527f52656365697665642066657765722043657265207468616e20657870656374656044820152601960fa1b6064820152608401610314565b60018054604051634880d24760e01b81526001600160a01b038a81166004830152898116602483015260448201899052606482018890526084820184905290911690634880d2479060a401600060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b50505050505050505050505050565b6000600080516020610ce383398151915261058081336106f5565b6002546105cf5760405162461bcd60e51b815260206004820181905260248201527f45786368616e67652072617465206d75737420626520636f6e666967757265646044820152606401610314565b6000600254866105df9190610c46565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a9061061790309089906000908790600401610bc3565b600060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b50505050856003600082825461065b9190610c2e565b9250508190555080600460008282546106749190610c2e565b90915550909695505050505050565b61068c82610271565b61069681336106f5565b6102a383836107dd565b600080516020610cc38339815191526106b981336106f5565b60028290556040518281527f1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c9060200160405180910390a15050565b6106ff8282610432565b61032757610717816001600160a01b03166014610842565b610722836020610842565b604051602001610733929190610b54565b60408051601f198184030181529082905262461bcd60e51b825261031491600401610bfb565b6107638282610432565b610327576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556107993390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6107e78282610432565b15610327576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60606000610851836002610c46565b61085c906002610c2e565b6001600160401b0381111561088157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108ab576020820181803683370190505b509050600360fc1b816000815181106108d457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061091157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610935846002610c46565b610940906001610c2e565b90505b60018111156109d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061098257634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106109a657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936109cd81610c95565b9050610943565b508315610a235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610314565b9392505050565b80356001600160a01b0381168114610a4157600080fd5b919050565b600060208284031215610a57578081fd5b5035919050565b60008060408385031215610a70578081fd5b82359150610a8060208401610a2a565b90509250929050565b600060208284031215610a9a578081fd5b81356001600160e01b031981168114610a23578182fd5b600060208284031215610ac2578081fd5b5051919050565b60008060008060008060c08789031215610ae1578182fd5b86359550610af160208801610a2a565b9450610aff60408801610a2a565b9350606087013592506080870135915060a087013590509295509295509295565b600080600060608486031215610b34578283fd5b83359250610b4460208501610a2a565b9150604084013590509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610b86816017850160208801610c65565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610bb7816028840160208801610c65565b01602801949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6020815260008251806020840152610c1a816040850160208701610c65565b601f01601f19169190910160400192915050565b60008219821115610c4157610c41610cac565b500190565b6000816000190483118215151615610c6057610c60610cac565b500290565b60005b83811015610c80578181015183820152602001610c68565b83811115610c8f576000848401525b50505050565b600081610ca457610ca4610cac565b506000190190565b634e487b7160e01b600052601160045260246000fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb53979fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092fa2646970667358221220024dad1f7771095e743b4eaa73b5dbd5c4c39bea5ff856f4470da292dc524fc464736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:342:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "111:229:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "157:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "166:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "174:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "159:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "159:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "159:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "132:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "141:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "128:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "128:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "153:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "124:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "121:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "192:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "211:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "205:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "196:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "284:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "293:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "301:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "286:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "286:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "286:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "243:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "254:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "269:3:32",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "274:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "278:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "261:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "250:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "250:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "240:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "240:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "233:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "233:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "230:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "319:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "329:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "319:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$367_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "77:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "88:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "100:6:32",
                "type": ""
              }
            ],
            "src": "14:326:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_Freeport_$367_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8024:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:32",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:32"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:32",
                "type": ""
              }
            ],
            "src": "14:173:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:120:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "366:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "353:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:32",
                "type": ""
              }
            ],
            "src": "192:190:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:177:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "520:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "529:6:32"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "537:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "522:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "522:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "522:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "495:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "504:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "491:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "491:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "487:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "487:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "484:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "555:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "578:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "565:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "555:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "597:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "607:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "432:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "443:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "463:6:32",
                "type": ""
              }
            ],
            "src": "387:264:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "725:237:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "780:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "788:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "773:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "773:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "773:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "755:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "767:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "738:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "738:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "735:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "806:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "832:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "819:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "819:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "810:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "906:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "915:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "923:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "908:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "908:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "908:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "864:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "875:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "886:3:32",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "891:10:32",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:20:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "871:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "871:32:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "861:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "861:43:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:51:32"
                  },
                  "nodeType": "YulIf",
                  "src": "851:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "941:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "951:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "691:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "702:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "714:6:32",
                "type": ""
              }
            ],
            "src": "656:306:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1037:120:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1083:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1092:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1100:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1085:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1085:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1085:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1058:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1067:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1054:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1054:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1079:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1050:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1047:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1118:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1141:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1128:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1003:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1014:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1026:6:32",
                "type": ""
              }
            ],
            "src": "967:190:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:113:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1289:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1298:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1306:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1291:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1291:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1291:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1264:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1273:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1260:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1285:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1324:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1340:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1334:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:16:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1324:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1209:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1220:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1232:6:32",
                "type": ""
              }
            ],
            "src": "1162:194:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1516:390:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1563:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1572:6:32"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1580:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1565:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1565:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1565:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1537:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1546:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1558:3:32",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1529:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1526:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1598:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1621:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1608:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1598:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1640:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1673:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1684:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1669:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1650:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1640:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1707:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1697:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1754:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1792:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1764:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1805:43:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1828:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1815:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:33:32"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1805:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1857:43:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1884:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1895:3:32",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1880:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1880:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1867:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:33:32"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1857:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1442:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1453:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1473:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1481:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1489:6:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1497:6:32",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1505:6:32",
                "type": ""
              }
            ],
            "src": "1361:545:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2015:228:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2061:26:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2070:6:32"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2078:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2063:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2063:22:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2063:22:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2036:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2045:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2032:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2032:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2057:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2028:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2025:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2096:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2106:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2096:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2138:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2171:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2182:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2167:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2167:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2148:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2148:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2195:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2222:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2233:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2218:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2218:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2205:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2195:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1965:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1976:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1988:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1996:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2004:6:32",
                "type": ""
              }
            ],
            "src": "1911:332:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2637:397:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2654:3:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2659:25:32",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2647:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2647:38:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2647:38:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2694:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2714:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2708:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2708:13:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2698:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2756:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2764:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2752:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2752:17:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2775:3:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2780:2:32",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2771:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2771:12:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2785:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2730:21:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2730:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2730:62:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2801:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2815:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2820:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2811:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2811:16:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2805:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2847:2:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2851:2:32",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:11:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2856:19:32",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2836:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:40:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2836:40:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2885:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2907:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2901:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:13:32"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2889:8:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2949:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2957:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2945:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2945:17:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2968:2:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2972:2:32",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2964:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2964:11:32"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2977:8:32"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2923:21:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:63:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2923:63:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2995:33:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3010:2:32"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3014:8:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3006:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3006:17:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3025:2:32",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3002:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:26:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2995:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2605:3:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2610:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2618:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2629:3:32",
                "type": ""
              }
            ],
            "src": "2248:786:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3324:345:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3334:29:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3352:3:32",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3357:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3348:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3348:11:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3344:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3344:19:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3338:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3379:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3394:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3402:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3390:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3390:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3372:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3372:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3426:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3437:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3422:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3422:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3446:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3454:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3442:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3442:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3415:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3415:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3415:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3478:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3489:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3474:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3494:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3467:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3467:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3521:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3532:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3517:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3517:18:32"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3537:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3510:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3510:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3564:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:19:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3581:3:32",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:32:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:32:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3605:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3616:3:32",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3601:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3601:19:32"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3622:4:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3594:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3594:33:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3594:33:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3636:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3648:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3659:3:32",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3644:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3636:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3269:9:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3280:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3288:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3296:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3304:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3315:4:32",
                "type": ""
              }
            ],
            "src": "3039:630:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3887:306:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3909:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3920:3:32",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3905:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3897:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3933:29:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3951:3:32",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3956:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3947:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3947:11:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3960:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3943:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3943:19:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3937:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3978:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3993:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4001:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3989:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3989:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3971:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3971:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4025:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4036:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4021:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4021:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4045:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4053:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4041:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4041:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4014:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4014:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4077:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4088:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4073:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4073:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4093:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4066:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4066:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4066:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4120:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4131:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4116:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4116:18:32"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4136:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4109:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4163:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4174:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4159:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:19:32"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4180:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4152:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4152:35:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4152:35:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3824:9:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3835:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3843:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3851:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3859:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3867:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3878:4:32",
                "type": ""
              }
            ],
            "src": "3674:519:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4327:145:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4337:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4349:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4360:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4337:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4379:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4394:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4410:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4415:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4406:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4406:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4419:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4402:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4402:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4390:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4390:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4372:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4372:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4372:51:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4443:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4454:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4439:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4439:18:32"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4459:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4432:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4432:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4432:34:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4288:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4299:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4307:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4318:4:32",
                "type": ""
              }
            ],
            "src": "4198:274:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4572:92:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4582:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4594:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4605:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4582:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4624:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4649:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4642:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4642:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4635:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4635:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4617:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4617:41:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4541:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4552:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4563:4:32",
                "type": ""
              }
            ],
            "src": "4477:187:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4770:76:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4780:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4792:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4803:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4788:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4780:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4822:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4833:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4815:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4815:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4815:25:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4739:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4750:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4761:4:32",
                "type": ""
              }
            ],
            "src": "4669:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4968:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4978:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4990:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5001:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4986:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4986:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4978:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5020:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5035:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5051:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5056:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5047:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5047:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5060:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5043:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5043:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5031:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5031:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5013:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5013:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5013:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$367__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4937:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4948:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4959:4:32",
                "type": ""
              }
            ],
            "src": "4851:219:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5196:262:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5213:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5224:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5206:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5206:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5206:21:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5236:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5256:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5250:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5250:13:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5240:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5283:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5294:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5279:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5279:18:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5299:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5272:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5272:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5272:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5341:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5349:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5337:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5337:15:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5358:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5369:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5354:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5354:18:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5374:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5315:21:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5315:66:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5315:66:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5390:62:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5406:9:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5425:6:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5433:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5421:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5421:15:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5442:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5438:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5438:7:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5417:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5417:29:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5402:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:45:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5449:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5398:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5398:54:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5390:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5165:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5176:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5187:4:32",
                "type": ""
              }
            ],
            "src": "5075:383:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5637:182:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5654:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5665:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5647:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5647:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5647:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5688:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5699:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5684:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5684:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5704:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5677:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5677:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5727:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5738:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5723:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5723:18:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5743:34:32",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5716:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5716:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5716:62:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5787:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5799:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5810:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5795:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5787:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5614:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5628:4:32",
                "type": ""
              }
            ],
            "src": "5463:356:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5998:223:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6015:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6026:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6008:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6008:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6008:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6049:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6060:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6045:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6045:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:2:32",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6038:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6038:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6038:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6088:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6099:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6084:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6084:18:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6104:34:32",
                        "type": "",
                        "value": "Received fewer Cere than expecte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6077:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6077:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6159:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6170:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6155:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6155:18:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6175:3:32",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6148:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6148:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6148:31:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6188:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6200:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6211:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6196:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6196:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6188:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65f3fb9e0342d3e968f2d3dca00f77b8f14915c0054df00e65405ce6819e822f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5975:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5989:4:32",
                "type": ""
              }
            ],
            "src": "5824:397:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6400:182:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6417:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6428:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6410:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6410:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6410:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6451:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6462:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6447:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6447:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6467:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6440:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6440:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6440:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6490:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6501:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6486:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6486:18:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6506:34:32",
                        "type": "",
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6479:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6479:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6479:62:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6550:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6562:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6573:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6558:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6558:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6550:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6377:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6391:4:32",
                "type": ""
              }
            ],
            "src": "6226:356:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6761:237:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6778:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6789:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6771:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6771:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6771:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6812:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6823:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6808:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6808:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6828:2:32",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6801:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6801:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6851:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6862:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6847:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6847:18:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6867:34:32",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6840:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6840:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6840:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6922:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6933:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6918:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6918:18:32"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6938:17:32",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6911:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:45:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6911:45:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6965:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6977:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6988:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6973:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6973:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6965:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6738:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6752:4:32",
                "type": ""
              }
            ],
            "src": "6587:411:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7104:76:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7114:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7126:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7137:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7122:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7122:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7114:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7156:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7167:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7149:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7149:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7149:25:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7073:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7084:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7095:4:32",
                "type": ""
              }
            ],
            "src": "7003:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7233:80:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7260:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7262:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7262:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7262:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7249:1:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7256:1:32"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7252:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7252:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7246:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7246:13:32"
                  },
                  "nodeType": "YulIf",
                  "src": "7243:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7291:16:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7302:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7305:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7298:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7298:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7291:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7216:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7219:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7225:3:32",
                "type": ""
              }
            ],
            "src": "7185:128:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7370:116:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7429:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7431:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7431:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7431:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7401:1:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7394:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7394:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7387:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7387:17:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7409:1:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7420:1:32",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7416:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7416:6:32"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7424:1:32"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7412:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7412:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7406:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7406:21:32"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7383:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7383:45:32"
                  },
                  "nodeType": "YulIf",
                  "src": "7380:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7460:20:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7475:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7478:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7471:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7471:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7460:7:32"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7349:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7352:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7358:7:32",
                "type": ""
              }
            ],
            "src": "7318:168:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7544:205:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7554:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7563:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7558:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7623:63:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7648:3:32"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7653:1:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7644:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7644:11:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7667:3:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7672:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7663:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7663:11:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7657:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7657:18:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7637:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7637:39:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7637:39:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7584:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7587:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7581:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7595:19:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7597:15:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7606:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7609:2:32",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7602:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7602:10:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7597:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7577:3:32",
                    "statements": []
                  },
                  "src": "7573:113:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7712:31:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7725:3:32"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7730:6:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7721:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7721:16:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7739:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7714:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7714:27:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7714:27:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7701:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7704:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7698:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7698:13:32"
                  },
                  "nodeType": "YulIf",
                  "src": "7695:2:32"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7522:3:32",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7527:3:32",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7532:6:32",
                "type": ""
              }
            ],
            "src": "7491:258:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7801:89:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7828:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7830:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7830:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7830:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7821:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7814:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7814:13:32"
                  },
                  "nodeType": "YulIf",
                  "src": "7811:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7859:25:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7870:5:32"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7881:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7877:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7877:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7866:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7866:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7859:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7783:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7793:3:32",
                "type": ""
              }
            ],
            "src": "7754:136:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7927:95:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7944:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7951:3:32",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7956:10:32",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7947:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7947:20:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7937:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7937:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7937:31:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7984:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7987:4:32",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7977:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7977:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7977:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8008:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8011:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8001:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8001:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8001:15:32"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7895:127:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), tail)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$367__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65f3fb9e0342d3e968f2d3dca00f77b8f14915c0054df00e65405ce6819e822f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Received fewer Cere than expecte\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Exchange rate must be configured\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "443:4278:2:-:0;;;1300:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1342:8;:20;;-1:-1:-1;;;;;;1342:20:2;-1:-1:-1;;;;;1342:20:2;;;;;1373:44;-1:-1:-1;1404:12:2;665:10:26;;586:96;1404:12:2;1373:10;:44::i;:::-;1300:124;443:4278;;7515:110:7;7593:25;7604:4;7610:7;7593:10;:25::i;:::-;7515:110;;:::o;7948:224::-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:7;;;;;;;;;;;;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:7;;;;;;;;;:36;;-1:-1:-1;;8060:36:7;8092:4;8060:36;;;8142:12;665:10:26;;586:96;8142:12:7;-1:-1:-1;;;;;8115:40:7;8133:7;-1:-1:-1;;;;;8115:40:7;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;14:326:32:-;100:6;153:2;141:9;132:7;128:23;124:32;121:2;;;174:6;166;159:22;121:2;205:16;;-1:-1:-1;;;;;250:31:32;;240:42;;230:2;;301:6;293;286:22;230:2;329:5;111:229;-1:-1:-1;;;111:229:32:o;:::-;443:4278:2;;;;;;",
  "deployedSourceMap": "443:4278:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:214:7;;;;;;:::i;:::-;;:::i;:::-;;;4642:14:32;;4635:22;4617:41;;4605:2;4590:18;4073:214:7;;;;;;;;5348:121;;;;;;:::i;:::-;;:::i;:::-;;;4815:25:32;;;4803:2;4788:18;5348:121:7;4770:76:32;5719:145:7;;;;;;:::i;:::-;;:::i;:::-;;574:70:2;;-1:-1:-1;;;;;;;;;;;574:70:2;;6736:214:7;;;;;;:::i;:::-;;:::i;2247:358:2:-;;;:::i;4374:137:7:-;;;;;;:::i;:::-;;:::i;787:24:2:-;;;;;-1:-1:-1;;;;;787:24:2;;;;;;-1:-1:-1;;;;;5031:32:32;;;5013:51;;5001:2;4986:18;787:24:2;4968:102:32;1030:30:2;;;;;;2394:49:7;;2439:4;2394:49;;4049:488:2;;;;;;:::i;:::-;;:::i;2840:567::-;;;;;;:::i;:::-;;:::i;488:80::-;;-1:-1:-1;;;;;;;;;;;488:80:2;;6098:147:7;;;;;;:::i;:::-;;:::i;1712:199:2:-;;;;;;:::i;:::-;;:::i;937:32::-;;;;;;2020:99;2095:17;;2020:99;;4073:214:7;4158:4;-1:-1:-1;;;;;;4181:47:7;;-1:-1:-1;;;4181:47:7;;:99;;-1:-1:-1;;;;;;;;;;871:40:30;;;4244:36:7;4174:106;4073:214;-1:-1:-1;;4073:214:7:o;5348:121::-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121::o;5719:145::-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;665:10:26;3958::7;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;:::-;5719:145:::0;;;:::o;6736:214::-;-1:-1:-1;;;;;6831:23:7;;665:10:26;6831:23:7;6823:83;;;;-1:-1:-1;;;6823:83:7;;6789:2:32;6823:83:7;;;6771:21:32;6828:2;6808:18;;;6801:30;6867:34;6847:18;;;6840:62;-1:-1:-1;;;6918:18:32;;;6911:45;6973:19;;6823:83:7;;;;;;;;;6917:26;6929:4;6935:7;6917:11;:26::i;:::-;6736:214;;:::o;2247:358:2:-;2320:4;;3958:30:7;2320:4:2;665:10:26;3958::7;:30::i;:::-;2337:13:2::1;665:10:26::0;2390:8:2::1;::::0;:43:::1;::::0;-1:-1:-1;;;2390:43:2;;2417:4:::1;2390:43;::::0;::::1;4372:51:32::0;2376:11:2::1;4439:18:32::0;;;4432:34;;;2337:28:2;;-1:-1:-1;;;;;;2390:8:2;;::::1;::::0;:18:::1;::::0;4345::32;;2390:43:2::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2444:8;::::0;:130:::1;::::0;-1:-1:-1;;;2444:130:2;;2376:57;;-1:-1:-1;;;;;;2444:8:2::1;::::0;:25:::1;::::0;:130:::1;::::0;2491:4:::1;::::0;2510:5;;2444:8:::1;::::0;2376:57;;2444:130:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2592:6:2;;-1:-1:-1;;;;;2247:358:2;;:::o;4374:137:7:-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:7;;;;;;;;;;;;;;;4374:137::o;4049:488:2:-;-1:-1:-1;;;;;;;;;;;3958:30:7;616:28:2;665:10:26;3958::7;:30::i;:::-;4272:15:2::1;4290:45;4305:15;4322:5;4329;4290:14;:45::i;:::-;4272:63;;4368:19;4354:10;:33;;4346:79;;;::::0;-1:-1:-1;;;4346:79:2;;6026:2:32;4346:79:2::1;::::0;::::1;6008:21:32::0;6065:2;6045:18;;;6038:30;6104:34;6084:18;;;6077:62;-1:-1:-1;;;6155:18:32;;;6148:31;6196:19;;4346:79:2::1;5998:223:32::0;4346:79:2::1;4450:1;4461:8:::0;;:69:::1;::::0;-1:-1:-1;;;4461:69:2;;-1:-1:-1;;;;;3989:15:32;;;4461:69:2::1;::::0;::::1;3971:34:32::0;4041:15;;;4021:18;;;4014:43;4073:18;;;4066:34;;;4116:18;;;4109:34;;;4159:19;;;4152:35;;;4461:8:2;;::::1;::::0;:18:::1;::::0;3905:19:32;;4461:69:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3998:1:7;;4049:488:2::0;;;;;;;:::o;2840:567::-;2988:4;-1:-1:-1;;;;;;;;;;;3958:30:7;616:28:2;665:10:26;3958::7;:30::i;:::-;3012:17:2::1;::::0;3004:67:::1;;;::::0;-1:-1:-1;;;3004:67:2;;6428:2:32;3004:67:2::1;::::0;::::1;6410:21:32::0;;;6447:18;;;6440:30;6506:34;6486:18;;;6479:62;6558:18;;3004:67:2::1;6400:182:32::0;3004:67:2::1;3082:15;3118:17;;3100:15;:35;;;;:::i;:::-;3146:8;::::0;:134:::1;::::0;-1:-1:-1;;;3146:134:2;;3082:53;;-1:-1:-1;;;;;;3146:8:2::1;::::0;:25:::1;::::0;:134:::1;::::0;3193:4:::1;::::0;3212:5;;3146:8:::1;::::0;3082:53;;3146:134:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3315:15;3291:20;;:39;;;;;;;:::i;:::-;;;;;;;;3362:10;3340:18;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3390:10:2;;2840:567;-1:-1:-1;;;;;;2840:567:2:o;6098:147:7:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;665:10:26;3958::7;:30::i;:::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;1712:199:2:-:0;-1:-1:-1;;;;;;;;;;;3958:30:7;535:33:2;665:10:26;3958::7;:30::i;:::-;1815:17:2::1;:38:::0;;;1869:35:::1;::::0;4815:25:32;;;1869:35:2::1;::::0;4803:2:32;4788:18;1869:35:2::1;;;;;;;1712:199:::0;;:::o;4792:375:7:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;-1:-1:-1;;;;;5000:41:7;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4923:225:7;;;;;;;;;;-1:-1:-1;;;4909:241:7;;;;;;;:::i;7948:224::-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:7;;;;;;;;;:36;;-1:-1:-1;;8060:36:7;8092:4;8060:36;;;8142:12;665:10:26;;586:96;8142:12:7;-1:-1:-1;;;;;8115:40:7;8133:7;-1:-1:-1;;;;;8115:40:7;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:7;;;;;;;;;;:37;;-1:-1:-1;;8290:37:7;;;8346:40;665:10:26;;8290:12:7;;8346:40;;8322:5;8346:40;8178:225;;:::o;1531:437:27:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;-1:-1:-1;;;;;1653:25:27;;;;;-1:-1:-1;;;1653:25:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:27;;1631:47;;-1:-1:-1;;;1688:6:27;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:27;;;;;;;;;;;;:15;-1:-1:-1;;;;;1688:15:27;;;;;;;;;-1:-1:-1;;;1713:6:27;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:27;;;;;;;;;;;;:15;-1:-1:-1;;;;;1713:15:27;;;;;;;;-1:-1:-1;1743:9:27;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1818:5:27;1826:3;1818:11;1809:21;;;;;-1:-1:-1;;;1809:21:27;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:27;;;;;;;;;;;;:33;-1:-1:-1;;;;;1797:33:27;;;;;;;;-1:-1:-1;1854:1:27;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:27;;1875:55;;;;-1:-1:-1;;;1875:55:27;;5665:2:32;1875:55:27;;;5647:21:32;;;5684:18;;;5677:30;5743:34;5723:18;;;5716:62;5795:18;;1875:55:27;5637:182:32;1875:55:27;1954:6;1531:437;-1:-1:-1;;;1531:437:27:o;14:173:32:-;82:20;;-1:-1:-1;;;;;131:31:32;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:190::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;-1:-1:-1;353:23:32;;262:120;-1:-1:-1;262:120:32:o;387:264::-;455:6;463;516:2;504:9;495:7;491:23;487:32;484:2;;;537:6;529;522:22;484:2;578:9;565:23;555:33;;607:38;641:2;630:9;626:18;607:38;:::i;:::-;597:48;;474:177;;;;;:::o;656:306::-;714:6;767:2;755:9;746:7;742:23;738:32;735:2;;;788:6;780;773:22;735:2;819:23;;-1:-1:-1;;;;;;871:32:32;;861:43;;851:2;;923:6;915;908:22;1162:194;1232:6;1285:2;1273:9;1264:7;1260:23;1256:32;1253:2;;;1306:6;1298;1291:22;1253:2;-1:-1:-1;1334:16:32;;1243:113;-1:-1:-1;1243:113:32:o;1361:545::-;1465:6;1473;1481;1489;1497;1505;1558:3;1546:9;1537:7;1533:23;1529:33;1526:2;;;1580:6;1572;1565:22;1526:2;1621:9;1608:23;1598:33;;1650:38;1684:2;1673:9;1669:18;1650:38;:::i;:::-;1640:48;;1707:38;1741:2;1730:9;1726:18;1707:38;:::i;:::-;1697:48;;1792:2;1781:9;1777:18;1764:32;1754:42;;1843:3;1832:9;1828:19;1815:33;1805:43;;1895:3;1884:9;1880:19;1867:33;1857:43;;1516:390;;;;;;;;:::o;1911:332::-;1988:6;1996;2004;2057:2;2045:9;2036:7;2032:23;2028:32;2025:2;;;2078:6;2070;2063:22;2025:2;2119:9;2106:23;2096:33;;2148:38;2182:2;2171:9;2167:18;2148:38;:::i;:::-;2138:48;;2233:2;2222:9;2218:18;2205:32;2195:42;;2015:228;;;;;:::o;2248:786::-;-1:-1:-1;;;2654:3:32;2647:38;2629:3;2714:6;2708:13;2730:62;2785:6;2780:2;2775:3;2771:12;2764:4;2756:6;2752:17;2730:62;:::i;:::-;-1:-1:-1;;;2851:2:32;2811:16;;;2843:11;;;2836:40;2901:13;;2923:63;2901:13;2972:2;2964:11;;2957:4;2945:17;;2923:63;:::i;:::-;3006:17;3025:2;3002:26;;2637:397;-1:-1:-1;;;;2637:397:32:o;3039:630::-;-1:-1:-1;;;;;3390:15:32;;;3372:34;;3442:15;;;;3437:2;3422:18;;3415:43;3489:2;3474:18;;3467:34;3532:2;3517:18;;3510:34;;;;3352:3;3575;3560:19;;3553:32;;;3315:4;3601:19;;;3594:33;3659:3;3644:19;;3324:345::o;5075:383::-;5224:2;5213:9;5206:21;5187:4;5256:6;5250:13;5299:6;5294:2;5283:9;5279:18;5272:34;5315:66;5374:6;5369:2;5358:9;5354:18;5349:2;5341:6;5337:15;5315:66;:::i;:::-;5442:2;5421:15;-1:-1:-1;;5417:29:32;5402:45;;;;5449:2;5398:54;;5196:262;-1:-1:-1;;5196:262:32:o;7185:128::-;7225:3;7256:1;7252:6;7249:1;7246:13;7243:2;;;7262:18;;:::i;:::-;-1:-1:-1;7298:9:32;;7233:80::o;7318:168::-;7358:7;7424:1;7420;7416:6;7412:14;7409:1;7406:21;7401:1;7394:9;7387:17;7383:45;7380:2;;;7431:18;;:::i;:::-;-1:-1:-1;7471:9:32;;7370:116::o;7491:258::-;7563:1;7573:113;7587:6;7584:1;7581:13;7573:113;;;7663:11;;;7657:18;7644:11;;;7637:39;7609:2;7602:10;7573:113;;;7704:6;7701:1;7698:13;7695:2;;;7739:1;7730:6;7725:3;7721:16;7714:27;7695:2;;7544:205;;;:::o;7754:136::-;7793:3;7821:5;7811:2;;7830:18;;:::i;:::-;-1:-1:-1;;;7866:18:32;;7801:89::o;7895:127::-;7956:10;7951:3;7947:20;7944:1;7937:31;7987:4;7984:1;7977:15;8011:4;8008:1;8001:15",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./access/AccessControl.sol\";\nimport \"./Freeport.sol\";\n\n/** The FiatGateway contract allows buying NFTs from an external fiat payment.\n  *\n  * This contract connects to the Freeport contract.\n  * It must hold a balance of CERE recognized by Freeport.\n  *\n  * This contract uses the SimpleExchange API to buy NFTs.\n  *\n  * This contract is operational only when the exchange rate is set to a non-zero value.\n */\ncontract FiatGateway is AccessControl {\n\n    bytes32 public constant EXCHANGE_RATE_ORACLE = keccak256(\"EXCHANGE_RATE_ORACLE\");\n    bytes32 public constant PAYMENT_SERVICE = keccak256(\"PAYMENT_SERVICE\");\n\n    /** The token ID that represents the CERE currency for all payments in this contract. */\n    uint256 public constant CURRENCY = 0;\n\n    Freeport public freeport;\n    uint cereUnitsPerPenny;\n\n    /** How many USD cents were received so far, according to the payment service.\n     */\n    uint public totalPenniesReceived;\n\n    /** How many CERE Units were sold so far.\n     */\n    uint public totalCereUnitsSent;\n\n    /** An event emitted when the exchange rate was set to a new value.\n     *\n     * The rate is given as CERE Units (with 10 decimals) per USD cent (1 penny).\n     */\n    event SetExchangeRate(\n        uint256 cereUnitsPerPenny);\n\n    constructor(Freeport _freeport) {\n        freeport = _freeport;\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    }\n\n    /** Set the exchange rate between fiat (USD) and Freeport currency (CERE).\n      *\n      * The rate is given as number of CERE Units (with 10 decimals) per USD cent (1 penny).\n      *\n      * Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate.\n     */\n    function setExchangeRate(uint _cereUnitsPerPenny)\n    public onlyRole(EXCHANGE_RATE_ORACLE) {\n\n        cereUnitsPerPenny = _cereUnitsPerPenny;\n\n        emit SetExchangeRate(_cereUnitsPerPenny);\n    }\n\n    /** Get the current exchange rate in CERE Units (with 10 decimals) per USD cent (1 penny).\n     */\n    function getExchangeRate()\n    public view returns (uint) {\n        return cereUnitsPerPenny;\n    }\n\n    /** Withdraw all CERE from this contract.\n      *\n      * Only accounts with DEFAULT_ADMIN_ROLE can withdraw.\n     */\n    function withdraw()\n    public onlyRole(DEFAULT_ADMIN_ROLE)\n    returns (uint) {\n\n        address admin = _msgSender();\n\n        uint amount = freeport.balanceOf(address(this), CURRENCY);\n\n        freeport.safeTransferFrom(\n            address(this),\n            admin,\n            CURRENCY,\n            amount,\n            \"\");\n\n        return amount;\n    }\n\n    /** Obtain CERE based on a fiat payment.\n      *\n      * The amount of fiat is recorded, and exchanged for an amount of CERE.\n      *\n      * Only the gateway with PAYMENT_SERVICE role can report successful payments.\n     */\n    function buyCereFromUsd(\n        uint penniesReceived,\n        address buyer,\n        uint nonce)\n    public onlyRole(PAYMENT_SERVICE)\n    returns (uint) {\n        require(cereUnitsPerPenny != 0, \"Exchange rate must be configured\");\n\n        uint cereToSend = penniesReceived * cereUnitsPerPenny;\n\n        freeport.safeTransferFrom(\n            address(this),\n            buyer,\n            CURRENCY,\n            cereToSend,\n            \"\");\n\n        totalPenniesReceived += penniesReceived;\n        totalCereUnitsSent += cereToSend;\n\n        return cereToSend;\n    }\n\n    /** Obtain CERE and buy an NFT based on a fiat payment.\n      *\n      * CERE tokens are obtained in the same way as buyCereFromUsd.\n      *\n      * Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n      *\n      * Only the gateway with PAYMENT_SERVICE role can report successful payments.\n     *\n     * The parameter expectedPriceOrZero can be used to validate the price that the buyer expects to pay. This prevents\n     * a race condition with makeOffer or setExchangeRate. Pass 0 to disable this validation and accept any current price.\n     */\n    function buyNftFromUsd(\n        uint penniesReceived,\n        address buyer,\n        address seller,\n        uint nftId,\n        uint expectedPriceOrZero,\n        uint nonce)\n    public onlyRole(PAYMENT_SERVICE) {\n\n        uint boughtCere = buyCereFromUsd(penniesReceived, buyer, nonce);\n\n        require(boughtCere >= expectedPriceOrZero, \"Received fewer Cere than expected\");\n\n        uint amount = 1;\n        freeport.takeOffer(buyer, seller, nftId, expectedPriceOrZero, amount);\n    }\n\n    /** Guarantee that a version of Solidity with safe math is used.\n     */\n    function _mathIsSafe() internal pure {\n    unchecked {} // Use a keyword from Solidity 0.8.0.\n    }\n}",
  "sourcePath": "/home/nadtech/Visual Studio/Freeport-Smart-Contracts/contracts/FiatGateway.sol",
  "ast": {
    "absolutePath": "project:/contracts/FiatGateway.sol",
    "exportedSymbols": {
      "AccessControl": [
        1417
      ],
      "Address": [
        5733
      ],
      "BaseNFT": [
        1547
      ],
      "Context": [
        5756
      ],
      "Currency": [
        1620
      ],
      "ERC1155": [
        5174
      ],
      "ERC165": [
        6265
      ],
      "FiatGateway": [
        360
      ],
      "Freeport": [
        367
      ],
      "IAccessControl": [
        1093
      ],
      "IERC1155": [
        5296
      ],
      "IERC1155MetadataURI": [
        5352
      ],
      "IERC1155Receiver": [
        5337
      ],
      "IERC165": [
        6277
      ],
      "Issuance": [
        1981
      ],
      "JointAccounts": [
        2318
      ],
      "MetaTxContext": [
        2388
      ],
      "PolygonChildERC20": [
        2537
      ],
      "SimpleExchange": [
        2714
      ],
      "Strings": [
        5959
      ],
      "TransferFees": [
        3323
      ],
      "TransferOperator": [
        3360
      ]
    },
    "id": 361,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 132,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "project:/contracts/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 1418,
        "src": "25:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 134,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 368,
        "src": "62:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 136,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1417,
              "src": "467:13:2"
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 135,
          "nodeType": "StructuredDocumentation",
          "src": "88:354:2",
          "text": "The FiatGateway contract allows buying NFTs from an external fiat payment.\n This contract connects to the Freeport contract.\n It must hold a balance of CERE recognized by Freeport.\n This contract uses the SimpleExchange API to buy NFTs.\n This contract is operational only when the exchange rate is set to a non-zero value."
        },
        "fullyImplemented": true,
        "id": 360,
        "linearizedBaseContracts": [
          360,
          1417,
          6265,
          6277,
          1093,
          5756
        ],
        "name": "FiatGateway",
        "nameLocation": "452:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c87113e2",
            "id": 142,
            "mutability": "constant",
            "name": "EXCHANGE_RATE_ORACLE",
            "nameLocation": "512:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "488:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 138,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "488:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45584348414e47455f524154455f4f5241434c45",
                  "id": 140,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "545:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  },
                  "value": "EXCHANGE_RATE_ORACLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  }
                ],
                "id": 139,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "535:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "535:33:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3263ba67",
            "id": 147,
            "mutability": "constant",
            "name": "PAYMENT_SERVICE",
            "nameLocation": "598:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "574:70:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 143,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041594d454e545f53455256494345",
                  "id": 145,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "626:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  },
                  "value": "PAYMENT_SERVICE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  }
                ],
                "id": 144,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "616:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 146,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "616:28:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "651:88:2",
              "text": "The token ID that represents the CERE currency for all payments in this contract. "
            },
            "functionSelector": "f5361219",
            "id": 151,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "768:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "744:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9470ad85",
            "id": 154,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "803:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "787:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$367",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 153,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 152,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 367,
                "src": "787:8:2"
              },
              "referencedDeclaration": 367,
              "src": "787:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$367",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 156,
            "mutability": "mutable",
            "name": "cereUnitsPerPenny",
            "nameLocation": "822:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "817:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 155,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "817:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "846:86:2",
              "text": "How many USD cents were received so far, according to the payment service."
            },
            "functionSelector": "e65372e1",
            "id": 159,
            "mutability": "mutable",
            "name": "totalPenniesReceived",
            "nameLocation": "949:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "937:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "937:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "976:49:2",
              "text": "How many CERE Units were sold so far."
            },
            "functionSelector": "9c750286",
            "id": 162,
            "mutability": "mutable",
            "name": "totalCereUnitsSent",
            "nameLocation": "1042:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "1030:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 161,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1030:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "1067:164:2",
              "text": "An event emitted when the exchange rate was set to a new value.\n The rate is given as CERE Units (with 10 decimals) per USD cent (1 penny)."
            },
            "id": 167,
            "name": "SetExchangeRate",
            "nameLocation": "1242:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cereUnitsPerPenny",
                  "nameLocation": "1275:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1267:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:36:2"
            },
            "src": "1236:58:2"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1332:92:2",
              "statements": [
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "1342:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$367",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "1353:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$367",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1342:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$367",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:20:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "1384:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 179,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5744,
                          "src": "1404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1404:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 177,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1331,
                      "src": "1373:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:44:2"
                }
              ]
            },
            "id": 184,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1321:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1312:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$367",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 169,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 168,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 367,
                      "src": "1312:8:2"
                    },
                    "referencedDeclaration": 367,
                    "src": "1312:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$367",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1311:20:2"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1332:0:2"
            },
            "scope": 360,
            "src": "1300:124:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "1804:107:2",
              "statements": [
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 193,
                      "name": "cereUnitsPerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1815:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 194,
                      "name": "_cereUnitsPerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1835:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1815:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 198,
                        "name": "_cereUnitsPerPenny",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1885:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "SetExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "1869:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "EmitStatement",
                  "src": "1864:40:2"
                }
              ]
            },
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "1430:277:2",
              "text": "Set the exchange rate between fiat (USD) and Freeport currency (CERE).\n The rate is given as number of CERE Units (with 10 decimals) per USD cent (1 penny).\n Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
            },
            "functionSelector": "db068e0e",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 190,
                    "name": "EXCHANGE_RATE_ORACLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 142,
                    "src": "1782:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 189,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "1773:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1773:30:2"
              }
            ],
            "name": "setExchangeRate",
            "nameLocation": "1721:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_cereUnitsPerPenny",
                  "nameLocation": "1742:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1737:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1736:25:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:2"
            },
            "scope": 360,
            "src": "1712:199:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2078:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 208,
                    "name": "cereUnitsPerPenny",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "2095:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "2088:24:2"
                }
              ]
            },
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "1917:98:2",
              "text": "Get the current exchange rate in CERE Units (with 10 decimals) per USD cent (1 penny)."
            },
            "functionSelector": "e6aa216c",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2029:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:2:2"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2072:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2071:6:2"
            },
            "scope": 360,
            "src": "2020:99:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2326:279:2",
              "statements": [
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "2345:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2337:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2337:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 222,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5744,
                      "src": "2353:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2337:28:2"
                },
                {
                  "assignments": [
                    226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 226,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2381:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2376:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 225,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2376:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 231,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2417:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2409:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2409:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 233,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2424:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2390:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4257,
                      "src": "2390:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2376:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 241,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2491:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2483:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2483:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2483:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 243,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2510:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 244,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2529:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 245,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2551:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2571:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 236,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2444:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4481,
                      "src": "2444:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:130:2"
                },
                {
                  "expression": {
                    "id": 249,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "2592:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "2585:13:2"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "2125:117:2",
              "text": "Withdraw all CERE from this contract.\n Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
            },
            "functionSelector": "3ccfd60b",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 215,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1115,
                    "src": "2287:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "2278:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2278:28:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2256:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:2:2"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2320:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2320:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2319:6:2"
            },
            "scope": 360,
            "src": "2247:358:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "2994:413:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 268,
                          "name": "cereUnitsPerPenny",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "3012:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3033:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3012:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e67652072617465206d75737420626520636f6e66696775726564",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3036:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        },
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3004:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:67:2"
                },
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "cereToSend",
                      "nameLocation": "3087:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "3082:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3082:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 276,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3100:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 277,
                      "name": "cereUnitsPerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3118:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3100:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3082:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 285,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3193:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3185:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3185:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3185:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 287,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3212:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 288,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "3231:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 289,
                        "name": "cereToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3253:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3277:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "3146:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4481,
                      "src": "3146:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3146:134:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "3146:134:2"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 293,
                      "name": "totalPenniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "3291:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3315:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3291:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:39:2"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 297,
                      "name": "totalCereUnitsSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "3340:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "cereToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3362:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3340:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3340:32:2"
                },
                {
                  "expression": {
                    "id": 301,
                    "name": "cereToSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 275,
                    "src": "3390:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 302,
                  "nodeType": "Return",
                  "src": "3383:17:2"
                }
              ]
            },
            "documentation": {
              "id": 253,
              "nodeType": "StructuredDocumentation",
              "src": "2611:224:2",
              "text": "Obtain CERE based on a fiat payment.\n The amount of fiat is recorded, and exchanged for an amount of CERE.\n Only the gateway with PAYMENT_SERVICE role can report successful payments."
            },
            "functionSelector": "c4f7f9c5",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 262,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "2958:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 261,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "2949:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2949:25:2"
              }
            ],
            "name": "buyCereFromUsd",
            "nameLocation": "2849:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "2878:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2873:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2911:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2903:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2931:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2926:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2926:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2863:74:2"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2988:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2988:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2987:6:2"
            },
            "scope": 360,
            "src": "2840:567:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "4261:276:2",
              "statements": [
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "boughtCere",
                      "nameLocation": "4277:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "4272:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 330,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "penniesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "4305:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 327,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4322:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 328,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "4329:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 325,
                      "name": "buyCereFromUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "4290:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4290:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 332,
                          "name": "boughtCere",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "4354:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 333,
                          "name": "expectedPriceOrZero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "4368:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4354:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656365697665642066657765722043657265207468616e206578706563746564",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4389:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65f3fb9e0342d3e968f2d3dca00f77b8f14915c0054df00e65405ce6819e822f",
                          "typeString": "literal_string \"Received fewer Cere than expected\""
                        },
                        "value": "Received fewer Cere than expected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65f3fb9e0342d3e968f2d3dca00f77b8f14915c0054df00e65405ce6819e822f",
                          "typeString": "literal_string \"Received fewer Cere than expected\""
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4346:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4346:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "4346:79:2"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4441:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "4436:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4436:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4450:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4436:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 345,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4480:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 346,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "4487:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4495:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 348,
                        "name": "expectedPriceOrZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4502:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 349,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "4523:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 342,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4461:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2707,
                      "src": "4461:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4461:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "4461:69:2"
                }
              ]
            },
            "documentation": {
              "id": 305,
              "nodeType": "StructuredDocumentation",
              "src": "3413:631:2",
              "text": "Obtain CERE and buy an NFT based on a fiat payment.\n CERE tokens are obtained in the same way as buyCereFromUsd.\n Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n Only the gateway with PAYMENT_SERVICE role can report successful payments.\n The parameter expectedPriceOrZero can be used to validate the price that the buyer expects to pay. This prevents\n a race condition with makeOffer or setExchangeRate. Pass 0 to disable this validation and accept any current price."
            },
            "functionSelector": "a87a9322",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 320,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "4244:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 319,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "4235:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4235:25:2"
              }
            ],
            "name": "buyNftFromUsd",
            "nameLocation": "4058:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "4086:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4081:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4081:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "4119:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4111:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4111:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "4142:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4134:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "4163:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4158:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "expectedPriceOrZero",
                  "nameLocation": "4183:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4178:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "4217:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4212:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4212:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4071:152:2"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:0:2"
            },
            "scope": 360,
            "src": "4049:488:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "4657:62:2",
              "statements": [
                {
                  "id": 357,
                  "nodeType": "UncheckedBlock",
                  "src": "4663:12:2",
                  "statements": []
                }
              ]
            },
            "documentation": {
              "id": 354,
              "nodeType": "StructuredDocumentation",
              "src": "4543:72:2",
              "text": "Guarantee that a version of Solidity with safe math is used."
            },
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mathIsSafe",
            "nameLocation": "4629:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4640:2:2"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4657:0:2"
            },
            "scope": 360,
            "src": "4620:99:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 361,
        "src": "443:4278:2",
        "usedErrors": []
      }
    ],
    "src": "0:4721:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FiatGateway.sol",
    "exportedSymbols": {
      "AccessControl": [
        1417
      ],
      "Address": [
        5733
      ],
      "BaseNFT": [
        1547
      ],
      "Context": [
        5756
      ],
      "Currency": [
        1620
      ],
      "ERC1155": [
        5174
      ],
      "ERC165": [
        6265
      ],
      "FiatGateway": [
        360
      ],
      "Freeport": [
        367
      ],
      "IAccessControl": [
        1093
      ],
      "IERC1155": [
        5296
      ],
      "IERC1155MetadataURI": [
        5352
      ],
      "IERC1155Receiver": [
        5337
      ],
      "IERC165": [
        6277
      ],
      "Issuance": [
        1981
      ],
      "JointAccounts": [
        2318
      ],
      "MetaTxContext": [
        2388
      ],
      "PolygonChildERC20": [
        2537
      ],
      "SimpleExchange": [
        2714
      ],
      "Strings": [
        5959
      ],
      "TransferFees": [
        3323
      ],
      "TransferOperator": [
        3360
      ]
    },
    "id": 361,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 132,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "project:/contracts/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 1418,
        "src": "25:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 134,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 368,
        "src": "62:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 136,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1417,
              "src": "467:13:2"
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 135,
          "nodeType": "StructuredDocumentation",
          "src": "88:354:2",
          "text": "The FiatGateway contract allows buying NFTs from an external fiat payment.\n This contract connects to the Freeport contract.\n It must hold a balance of CERE recognized by Freeport.\n This contract uses the SimpleExchange API to buy NFTs.\n This contract is operational only when the exchange rate is set to a non-zero value."
        },
        "fullyImplemented": true,
        "id": 360,
        "linearizedBaseContracts": [
          360,
          1417,
          6265,
          6277,
          1093,
          5756
        ],
        "name": "FiatGateway",
        "nameLocation": "452:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c87113e2",
            "id": 142,
            "mutability": "constant",
            "name": "EXCHANGE_RATE_ORACLE",
            "nameLocation": "512:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "488:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 138,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "488:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45584348414e47455f524154455f4f5241434c45",
                  "id": 140,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "545:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  },
                  "value": "EXCHANGE_RATE_ORACLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  }
                ],
                "id": 139,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "535:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "535:33:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3263ba67",
            "id": 147,
            "mutability": "constant",
            "name": "PAYMENT_SERVICE",
            "nameLocation": "598:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "574:70:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 143,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041594d454e545f53455256494345",
                  "id": 145,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "626:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  },
                  "value": "PAYMENT_SERVICE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  }
                ],
                "id": 144,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "616:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 146,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "616:28:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "651:88:2",
              "text": "The token ID that represents the CERE currency for all payments in this contract. "
            },
            "functionSelector": "f5361219",
            "id": 151,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "768:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "744:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9470ad85",
            "id": 154,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "803:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "787:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$367",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 153,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 152,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 367,
                "src": "787:8:2"
              },
              "referencedDeclaration": 367,
              "src": "787:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$367",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 156,
            "mutability": "mutable",
            "name": "cereUnitsPerPenny",
            "nameLocation": "822:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "817:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 155,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "817:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "846:86:2",
              "text": "How many USD cents were received so far, according to the payment service."
            },
            "functionSelector": "e65372e1",
            "id": 159,
            "mutability": "mutable",
            "name": "totalPenniesReceived",
            "nameLocation": "949:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "937:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "937:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "976:49:2",
              "text": "How many CERE Units were sold so far."
            },
            "functionSelector": "9c750286",
            "id": 162,
            "mutability": "mutable",
            "name": "totalCereUnitsSent",
            "nameLocation": "1042:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "1030:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 161,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1030:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "1067:164:2",
              "text": "An event emitted when the exchange rate was set to a new value.\n The rate is given as CERE Units (with 10 decimals) per USD cent (1 penny)."
            },
            "id": 167,
            "name": "SetExchangeRate",
            "nameLocation": "1242:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cereUnitsPerPenny",
                  "nameLocation": "1275:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1267:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:36:2"
            },
            "src": "1236:58:2"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1332:92:2",
              "statements": [
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "1342:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$367",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "1353:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$367",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1342:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$367",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:20:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "1384:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 179,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5744,
                          "src": "1404:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1404:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 177,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1331,
                      "src": "1373:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:44:2"
                }
              ]
            },
            "id": 184,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1321:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1312:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$367",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 169,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 168,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 367,
                      "src": "1312:8:2"
                    },
                    "referencedDeclaration": 367,
                    "src": "1312:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$367",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1311:20:2"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1332:0:2"
            },
            "scope": 360,
            "src": "1300:124:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "1804:107:2",
              "statements": [
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 193,
                      "name": "cereUnitsPerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1815:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 194,
                      "name": "_cereUnitsPerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1835:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1815:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 198,
                        "name": "_cereUnitsPerPenny",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1885:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "SetExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "1869:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "EmitStatement",
                  "src": "1864:40:2"
                }
              ]
            },
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "1430:277:2",
              "text": "Set the exchange rate between fiat (USD) and Freeport currency (CERE).\n The rate is given as number of CERE Units (with 10 decimals) per USD cent (1 penny).\n Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
            },
            "functionSelector": "db068e0e",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 190,
                    "name": "EXCHANGE_RATE_ORACLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 142,
                    "src": "1782:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 189,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "1773:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1773:30:2"
              }
            ],
            "name": "setExchangeRate",
            "nameLocation": "1721:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_cereUnitsPerPenny",
                  "nameLocation": "1742:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1737:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1736:25:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:2"
            },
            "scope": 360,
            "src": "1712:199:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2078:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 208,
                    "name": "cereUnitsPerPenny",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "2095:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "2088:24:2"
                }
              ]
            },
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "1917:98:2",
              "text": "Get the current exchange rate in CERE Units (with 10 decimals) per USD cent (1 penny)."
            },
            "functionSelector": "e6aa216c",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2029:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:2:2"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2072:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2071:6:2"
            },
            "scope": 360,
            "src": "2020:99:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2326:279:2",
              "statements": [
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "2345:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2337:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2337:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 222,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5744,
                      "src": "2353:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2337:28:2"
                },
                {
                  "assignments": [
                    226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 226,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2381:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2376:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 225,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2376:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 231,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2417:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2409:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2409:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 233,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2424:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2390:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4257,
                      "src": "2390:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2376:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 241,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2491:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2483:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2483:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2483:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 243,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2510:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 244,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2529:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 245,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2551:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2571:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 236,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2444:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4481,
                      "src": "2444:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:130:2"
                },
                {
                  "expression": {
                    "id": 249,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "2592:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "2585:13:2"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "2125:117:2",
              "text": "Withdraw all CERE from this contract.\n Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
            },
            "functionSelector": "3ccfd60b",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 215,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1115,
                    "src": "2287:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "2278:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2278:28:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2256:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:2:2"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2320:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2320:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2319:6:2"
            },
            "scope": 360,
            "src": "2247:358:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "2994:413:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 268,
                          "name": "cereUnitsPerPenny",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "3012:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3033:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3012:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e67652072617465206d75737420626520636f6e66696775726564",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3036:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        },
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3004:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:67:2"
                },
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "cereToSend",
                      "nameLocation": "3087:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "3082:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3082:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 276,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3100:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 277,
                      "name": "cereUnitsPerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3118:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3100:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3082:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 285,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3193:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$360",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3185:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3185:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3185:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 287,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3212:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 288,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "3231:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 289,
                        "name": "cereToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3253:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3277:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "3146:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4481,
                      "src": "3146:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3146:134:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "3146:134:2"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 293,
                      "name": "totalPenniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "3291:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3315:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3291:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:39:2"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 297,
                      "name": "totalCereUnitsSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "3340:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "cereToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3362:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3340:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3340:32:2"
                },
                {
                  "expression": {
                    "id": 301,
                    "name": "cereToSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 275,
                    "src": "3390:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 302,
                  "nodeType": "Return",
                  "src": "3383:17:2"
                }
              ]
            },
            "documentation": {
              "id": 253,
              "nodeType": "StructuredDocumentation",
              "src": "2611:224:2",
              "text": "Obtain CERE based on a fiat payment.\n The amount of fiat is recorded, and exchanged for an amount of CERE.\n Only the gateway with PAYMENT_SERVICE role can report successful payments."
            },
            "functionSelector": "c4f7f9c5",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 262,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "2958:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 261,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "2949:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2949:25:2"
              }
            ],
            "name": "buyCereFromUsd",
            "nameLocation": "2849:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "2878:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2873:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2911:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2903:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2931:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2926:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2926:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2863:74:2"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "2988:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2988:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2987:6:2"
            },
            "scope": 360,
            "src": "2840:567:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "4261:276:2",
              "statements": [
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "boughtCere",
                      "nameLocation": "4277:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "4272:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 330,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "penniesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "4305:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 327,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4322:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 328,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "4329:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 325,
                      "name": "buyCereFromUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "4290:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4290:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 332,
                          "name": "boughtCere",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "4354:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 333,
                          "name": "expectedPriceOrZero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "4368:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4354:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656365697665642066657765722043657265207468616e206578706563746564",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4389:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65f3fb9e0342d3e968f2d3dca00f77b8f14915c0054df00e65405ce6819e822f",
                          "typeString": "literal_string \"Received fewer Cere than expected\""
                        },
                        "value": "Received fewer Cere than expected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65f3fb9e0342d3e968f2d3dca00f77b8f14915c0054df00e65405ce6819e822f",
                          "typeString": "literal_string \"Received fewer Cere than expected\""
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4346:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4346:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "4346:79:2"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4441:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "4436:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4436:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4450:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4436:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 345,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4480:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 346,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "4487:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4495:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 348,
                        "name": "expectedPriceOrZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4502:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 349,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "4523:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 342,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4461:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$367",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2707,
                      "src": "4461:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4461:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "4461:69:2"
                }
              ]
            },
            "documentation": {
              "id": 305,
              "nodeType": "StructuredDocumentation",
              "src": "3413:631:2",
              "text": "Obtain CERE and buy an NFT based on a fiat payment.\n CERE tokens are obtained in the same way as buyCereFromUsd.\n Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n Only the gateway with PAYMENT_SERVICE role can report successful payments.\n The parameter expectedPriceOrZero can be used to validate the price that the buyer expects to pay. This prevents\n a race condition with makeOffer or setExchangeRate. Pass 0 to disable this validation and accept any current price."
            },
            "functionSelector": "a87a9322",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 320,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "4244:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 319,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "4235:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4235:25:2"
              }
            ],
            "name": "buyNftFromUsd",
            "nameLocation": "4058:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "4086:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4081:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4081:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "4119:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4111:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4111:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "4142:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4134:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "4163:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4158:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "expectedPriceOrZero",
                  "nameLocation": "4183:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4178:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "4217:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4212:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4212:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4071:152:2"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:0:2"
            },
            "scope": 360,
            "src": "4049:488:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "4657:62:2",
              "statements": [
                {
                  "id": 357,
                  "nodeType": "UncheckedBlock",
                  "src": "4663:12:2",
                  "statements": []
                }
              ]
            },
            "documentation": {
              "id": 354,
              "nodeType": "StructuredDocumentation",
              "src": "4543:72:2",
              "text": "Guarantee that a version of Solidity with safe math is used."
            },
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mathIsSafe",
            "nameLocation": "4629:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4640:2:2"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4657:0:2"
            },
            "scope": 360,
            "src": "4620:99:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 361,
        "src": "443:4278:2",
        "usedErrors": []
      }
    ],
    "src": "0:4721:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cereUnitsPerPenny",
              "type": "uint256"
            }
          ],
          "name": "SetExchangeRate",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1f8eC932B6ec39A0326b74E9648A158F88B24082",
      "transactionHash": "0x47f7b767dd5fc38d7443122e801382b386a2711893221a656583a441a78dec99"
    },
    "1628532541290": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x97002E5615ec93452D1308d4f914d4e735e1F156",
      "transactionHash": "0x8c2776112be0b9d39034c8c17dffe1ab0454889badcd03aed569b4a4a65c202b"
    },
    "1640774401250": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cereUnitsPerPenny",
              "type": "uint256"
            }
          ],
          "name": "SetExchangeRate",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4683d31586A3C6922D9EEEB638CCC64A031634BC",
      "transactionHash": "0xa495368c82d74bb6ec4dd91aaadedfef1dca0ab81748e42c59a64a901718b9ca"
    },
    "1640796431765": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cereUnitsPerPenny",
              "type": "uint256"
            }
          ],
          "name": "SetExchangeRate",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xEe6b9b4e3CF454EE61497B8fA37A1d3Bb92A73b0",
      "transactionHash": "0x768de47a95203f0cb04cc57ebd0c0bf1121de3846ef77027f0f7959c9a63887b"
    },
    "1640845586772": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cereUnitsPerPenny",
              "type": "uint256"
            }
          ],
          "name": "SetExchangeRate",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2b16266b0255E41fb741b0A8e7A4aB5Dc0D44cA3",
      "transactionHash": "0x7d2d02ebed57f16bc2c5ffec7af3ce417d2ae2db787cbeea065f28c29fddd705"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-30T09:59:32.448Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "SetExchangeRate(uint256)": {
        "notice": "An event emitted when the exchange rate was set to a new value. The rate is given as CERE Units (with 10 decimals) per USD cent (1 penny)."
      }
    },
    "kind": "user",
    "methods": {
      "CURRENCY()": {
        "notice": "The token ID that represents the CERE currency for all payments in this contract. "
      },
      "buyCereFromUsd(uint256,address,uint256)": {
        "notice": "Obtain CERE based on a fiat payment. The amount of fiat is recorded, and exchanged for an amount of CERE. Only the gateway with PAYMENT_SERVICE role can report successful payments."
      },
      "buyNftFromUsd(uint256,address,address,uint256,uint256,uint256)": {
        "notice": "Obtain CERE and buy an NFT based on a fiat payment. CERE tokens are obtained in the same way as buyCereFromUsd. Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange. Only the gateway with PAYMENT_SERVICE role can report successful payments. The parameter expectedPriceOrZero can be used to validate the price that the buyer expects to pay. This prevents a race condition with makeOffer or setExchangeRate. Pass 0 to disable this validation and accept any current price."
      },
      "getExchangeRate()": {
        "notice": "Get the current exchange rate in CERE Units (with 10 decimals) per USD cent (1 penny)."
      },
      "setExchangeRate(uint256)": {
        "notice": "Set the exchange rate between fiat (USD) and Freeport currency (CERE). The rate is given as number of CERE Units (with 10 decimals) per USD cent (1 penny). Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
      },
      "totalCereUnitsSent()": {
        "notice": "How many CERE Units were sold so far."
      },
      "totalPenniesReceived()": {
        "notice": "How many USD cents were received so far, according to the payment service."
      },
      "withdraw()": {
        "notice": "Withdraw all CERE from this contract. Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
      }
    },
    "notice": "The FiatGateway contract allows buying NFTs from an external fiat payment. This contract connects to the Freeport contract. It must hold a balance of CERE recognized by Freeport. This contract uses the SimpleExchange API to buy NFTs. This contract is operational only when the exchange rate is set to a non-zero value.",
    "version": 1
  }
}